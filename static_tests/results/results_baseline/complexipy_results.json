{
  "predictions": [
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "findt",
              "complexity": 1,
              "line_start": 6,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 12,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00023224799952004105
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012105800033168634
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 72,
              "line_end": 73
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 78,
              "line_end": 79
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 90,
              "line_end": 91
            },
            {
              "name": "t_from_s_a_u",
              "complexity": 0,
              "line_start": 113,
              "line_end": 114
            },
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 117,
              "line_end": 158
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0005201309995754855
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011270199956925353
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.033999958774075e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "get_data",
              "complexity": 10,
              "line_start": 19,
              "line_end": 45
            },
            {
              "name": "time",
              "complexity": 3,
              "line_start": 50,
              "line_end": 61
            },
            {
              "name": "dist",
              "complexity": 2,
              "line_start": 64,
              "line_end": 73
            },
            {
              "name": "vel",
              "complexity": 2,
              "line_start": 76,
              "line_end": 85
            },
            {
              "name": "can_ignore_sign",
              "complexity": 1,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "ignore_sign",
              "complexity": 1,
              "line_start": 91,
              "line_end": 95
            },
            {
              "name": "get_time",
              "complexity": 3,
              "line_start": 98,
              "line_end": 122
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002806290003718459
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.618499992327997e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.713799964723876e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.772600019961828e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "DecimalPow",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "getLastT",
              "complexity": 1,
              "line_start": 10,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00014218799969967222
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "DecimalPow",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "getLastT",
              "complexity": 1,
              "line_start": 10,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011816299956990406
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "time_distance",
              "complexity": 0,
              "line_start": 11,
              "line_end": 14
            },
            {
              "name": "time_accelerating",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "time_speed",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "distance_travelled",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 25,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0003807080001934082
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "gett",
              "complexity": 1,
              "line_start": 7,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00014877099965815432
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.516299981740303e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "func",
              "complexity": 1,
              "line_start": 2,
              "line_end": 8
            },
            {
              "name": "efficient",
              "complexity": 1,
              "line_start": 9,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 2,
              "line_start": 22,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010803399982250994
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.980300011287909e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dist",
              "complexity": 0,
              "line_start": 4,
              "line_end": 11
            },
            {
              "name": "travelTime",
              "complexity": 1,
              "line_start": 14,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.97930002186331e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.9633999879006296e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.5895999392087106e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 9.858000339590944e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.449999662232585e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.4946999474195763e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.3520001276629046e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.828999408346135e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.178000381216407e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.298000021663029e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.929000169795472e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.0820999705174472e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.49000014871126e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.438999894773588e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.208000063954387e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.828999408346135e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 8.6069994722493e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.307999915909022e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.919000275549479e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.828999408346135e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.6069995985599235e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.427999556355644e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "luck",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "lucky",
              "complexity": 5,
              "line_start": 13,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 4.5265000153449364e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.9757000447716564e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.259100049035624e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.913399996235967e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 0.00010202299927186687
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.0038999789685477e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.7843999557953794e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.5148999409575481e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "islucky",
              "complexity": 7,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 5.6797999604896177e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.440500040596817e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.057900019281078e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.573999998072395e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "lucky",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.915499953815015e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.236199998151278e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "q121a_v2",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "generate_47_arr",
              "complexity": 2,
              "line_start": 13,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.6518999877444e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "luckynumber",
              "complexity": 9,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.871300032187719e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.00860001516412e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.9875999643991236e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.5319000340241473e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.63900050817756e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.7722000595531426e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 8.746000276005361e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.9937000363133848e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 8,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.9427000552241225e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.098000317753758e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.389000423543621e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.397999873617664e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.1460003810934722e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.7611999939836096e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.258200038340874e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.1708999560796656e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.69899987365352e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "valid",
              "complexity": 1,
              "line_start": 44,
              "line_end": 45
            },
            {
              "name": "div",
              "complexity": 7,
              "line_start": 48,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 61,
              "line_end": 72
            },
            {
              "name": "s",
              "complexity": 1,
              "line_start": 74,
              "line_end": 80
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 83,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 0.00017477900019002846
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.0919000235153362e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "fib",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.953299958287971e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 5.019000127504114e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.462700012983987e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.850400076364167e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.1670999558409676e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.006800059461966e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 4.785000055562705e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.1850000596023165e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.1369000680570025e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "Solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.4386000404774677e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.3163999685493764e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.454500074440148e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.7942000087932684e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "NOD",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "NOK",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 4.533500032266602e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.6650000108929817e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 30,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 0.00013411300005827798
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.8383999961079098e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.0667999453726225e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 122,
              "line_end": 150
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 6.07149995630607e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 122,
              "line_end": 150
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 5.1837999308190774e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.0778999896720052e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.433600002405001e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.0606999644078314e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.659099962125765e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.58979998761788e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.0287000299722422e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "read_lines",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "numz",
              "complexity": 4,
              "line_start": 17,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.976299987902166e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.8063000172551256e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.292299996042857e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.8044000171357766e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "max1",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "minus",
              "complexity": 0,
              "line_start": 6,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.0814999667636584e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.341200019553071e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "substraction",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.9323999772022944e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.546700008882908e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "operations",
              "complexity": 2,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.7502000193635467e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "num_ops",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.087799996137619e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.96169994524098e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.9346999579283874e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.865300004690653e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.202899981464725e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003031820006071939
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.740200059430208e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.976500011049211e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.32720007665921e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.611899981275201e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 5.254900042928057e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.890200034424197e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.17899994115578e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.2352000087266788e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.7584000488568563e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 8.981899918580893e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.715999991982244e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.530800000182353e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.4506999579898547e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 7.108400041033747e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.8410999625048134e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 6.367999958456494e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.239999998389976e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.544899987493409e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "resistors",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.6108999918506015e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "seive",
              "complexity": 6,
              "line_start": 34,
              "line_end": 42
            },
            {
              "name": "rec",
              "complexity": 2,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0001875729994935682
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00012002600033156341
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.1560999812209047e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.6651999430905562e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.586799994081957e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.31129995174706e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.8515000192564912e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "it",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 11,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.550599987851456e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 81,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 81,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 38,
              "line_end": 44
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 46,
              "line_end": 56
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 58,
              "line_end": 75
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 96,
              "line_end": 124
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 126,
              "line_end": 151
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 153,
              "line_end": 179
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 181,
              "line_end": 187
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 189,
              "line_end": 194
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 196,
              "line_end": 201
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 203,
              "line_end": 206
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 208,
              "line_end": 211
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 213,
              "line_end": 215
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 226,
              "line_end": 229
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 231,
              "line_end": 237
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 239,
              "line_end": 241
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 245
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 247,
              "line_end": 249
            },
            {
              "name": "SegTree::__init__",
              "complexity": 0,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "SegTree::update",
              "complexity": 5,
              "line_start": 257,
              "line_end": 263
            },
            {
              "name": "SegTree::query",
              "complexity": 1,
              "line_start": 265,
              "line_end": 271
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 273,
              "line_end": 283
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 285,
              "line_end": 476
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 482,
              "line_end": 485
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 487,
              "line_end": 495
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 497,
              "line_end": 504
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 509,
              "line_end": 512
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 514,
              "line_end": 516
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 520,
              "line_end": 523
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 527,
              "line_end": 530
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.003710445999786316
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 81,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 81,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 38,
              "line_end": 44
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 46,
              "line_end": 56
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 58,
              "line_end": 75
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 96,
              "line_end": 124
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 126,
              "line_end": 151
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 153,
              "line_end": 179
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 181,
              "line_end": 187
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 189,
              "line_end": 194
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 196,
              "line_end": 201
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 203,
              "line_end": 206
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 208,
              "line_end": 211
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 213,
              "line_end": 215
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 226,
              "line_end": 229
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 231,
              "line_end": 237
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 239,
              "line_end": 241
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 245
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 247,
              "line_end": 249
            },
            {
              "name": "SegTree::__init__",
              "complexity": 0,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "SegTree::update",
              "complexity": 5,
              "line_start": 257,
              "line_end": 263
            },
            {
              "name": "SegTree::query",
              "complexity": 1,
              "line_start": 265,
              "line_end": 271
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 273,
              "line_end": 283
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 285,
              "line_end": 477
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 483,
              "line_end": 486
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 488,
              "line_end": 496
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 498,
              "line_end": 505
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 510,
              "line_end": 513
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 515,
              "line_end": 517
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 521,
              "line_end": 524
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 528,
              "line_end": 531
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.003299260999483522
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 81,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 81,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 38,
              "line_end": 44
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 46,
              "line_end": 56
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 58,
              "line_end": 75
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 96,
              "line_end": 124
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 126,
              "line_end": 151
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 153,
              "line_end": 179
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 181,
              "line_end": 187
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 189,
              "line_end": 194
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 196,
              "line_end": 201
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 203,
              "line_end": 206
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 208,
              "line_end": 211
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 213,
              "line_end": 215
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 226,
              "line_end": 229
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 231,
              "line_end": 237
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 239,
              "line_end": 241
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 245
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 247,
              "line_end": 249
            },
            {
              "name": "SegTree::__init__",
              "complexity": 0,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "SegTree::update",
              "complexity": 5,
              "line_start": 257,
              "line_end": 263
            },
            {
              "name": "SegTree::query",
              "complexity": 1,
              "line_start": 265,
              "line_end": 271
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 273,
              "line_end": 283
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 285,
              "line_end": 498
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 504,
              "line_end": 507
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 509,
              "line_end": 517
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 519,
              "line_end": 526
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 531,
              "line_end": 534
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 536,
              "line_end": 538
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 542,
              "line_end": 545
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 549,
              "line_end": 552
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0027013529997930164
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 15,
              "line_end": 23
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 25,
              "line_end": 32
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 34,
              "line_end": 37
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 41,
              "line_end": 47
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 52,
              "line_end": 52
            },
            {
              "name": "getint",
              "complexity": 0,
              "line_start": 53,
              "line_end": 53
            },
            {
              "name": "getints",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "getint1",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 57,
              "line_end": 59
            },
            {
              "name": "result",
              "complexity": 3,
              "line_start": 61,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00038252200010902015
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 9.249499998986721e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "primecheck",
              "complexity": 4,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.0303999816824216e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "is_prime",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.4414000512915663e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "IIs",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.803799988119863e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.4396999176824465e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "is_prime",
              "complexity": 6,
              "line_start": 105,
              "line_end": 113
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0002734059999056626
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.1752000318665523e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.584999972692458e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.519499973161146e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.0628999664040748e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.3335000403458253e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.2774000424542464e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.4276000001700595e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.6080000023066532e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "Is_prime",
              "complexity": 3,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.804199968726607e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "iscomposite",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.307100061851088e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.9644999560550787e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.356400065968046e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "resheto",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.275900002743583e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.190000006725313e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.5307000214525033e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.4252999941818416e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.4035000024014153e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.2350000512669794e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 9.310499990533572e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "get_array",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.0597000406705774e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 69,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 69,
          "functions": [
            {
              "name": "increase_stack",
              "complexity": 0,
              "line_start": 43,
              "line_end": 45
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 56,
              "line_end": 57
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 60,
              "line_end": 61
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "maxfactor",
              "complexity": 4,
              "line_start": 72,
              "line_end": 78
            },
            {
              "name": "factors",
              "complexity": 3,
              "line_start": 81,
              "line_end": 87
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 90,
              "line_end": 102
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 105,
              "line_end": 114
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 117,
              "line_end": 130
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 133,
              "line_end": 144
            },
            {
              "name": "countchar",
              "complexity": 3,
              "line_start": 147,
              "line_end": 155
            },
            {
              "name": "str_counter",
              "complexity": 1,
              "line_start": 158,
              "line_end": 162
            },
            {
              "name": "lis",
              "complexity": 7,
              "line_start": 165,
              "line_end": 175
            },
            {
              "name": "lcm",
              "complexity": 1,
              "line_start": 178,
              "line_end": 188
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 191,
              "line_end": 192
            },
            {
              "name": "npr",
              "complexity": 0,
              "line_start": 195,
              "line_end": 196
            },
            {
              "name": "IF",
              "complexity": 1,
              "line_start": 202,
              "line_end": 203
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 206,
              "line_end": 207
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 210,
              "line_end": 211
            },
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 214,
              "line_end": 215
            },
            {
              "name": "JA",
              "complexity": 0,
              "line_start": 218,
              "line_end": 219
            },
            {
              "name": "JAA",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "PS",
              "complexity": 0,
              "line_start": 226,
              "line_end": 227
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 233,
              "line_end": 234
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 237,
              "line_end": 238
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 241,
              "line_end": 242
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 245,
              "line_end": 246
            },
            {
              "name": "MATI",
              "complexity": 0,
              "line_start": 249,
              "line_end": 250
            },
            {
              "name": "MATS",
              "complexity": 0,
              "line_start": 253,
              "line_end": 254
            },
            {
              "name": "IV",
              "complexity": 0,
              "line_start": 257,
              "line_end": 258
            },
            {
              "name": "FV",
              "complexity": 0,
              "line_start": 261,
              "line_end": 262
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 265,
              "line_end": 266
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 269,
              "line_end": 270
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 281,
              "line_end": 285
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 287,
              "line_end": 295
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 297,
              "line_end": 304
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 306,
              "line_end": 309
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 313,
              "line_end": 319
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 346,
              "line_end": 358
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 364,
              "line_end": 389
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0011829700006273924
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 1.8725000700214878e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.123800044908421e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.430600034131203e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 1.755299945216393e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 1.8435000129102264e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "func",
              "complexity": 10,
              "line_start": 60,
              "line_end": 74
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 78,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0001868720000857138
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "func",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 78,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00023836899981688475
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.042699972866103e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.426400028023636e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.8252999982214533e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.0598999981302768e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 7.704999916313682e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.3160004022647627e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.2849999368190765e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.993999831029214e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.6259998523746617e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.08499966195086e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 5.5199998314492404e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.827000000455882e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.868000021611806e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.0429997675819322e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.827000000455882e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.1939995349384844e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 6.182000106491614e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 5.539999619941227e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.415999344724696e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.4973000260361005e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.154700011189561e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.308299983473262e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.00950002585887e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.368299985595513e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.8382999516907148e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.528300036734436e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 292,
        "functions_count": 56,
        "raw_output": {
          "file_complexity": 292,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 331
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 333,
              "line_end": 341
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 344,
              "line_end": 351
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 354,
              "line_end": 359
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 361,
              "line_end": 373
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 375,
              "line_end": 384
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 386,
              "line_end": 395
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 398,
              "line_end": 411
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 413,
              "line_end": 416
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 425,
              "line_end": 426
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 428,
              "line_end": 444
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 446,
              "line_end": 470
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 472,
              "line_end": 496
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 501,
              "line_end": 502
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 504,
              "line_end": 510
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 512,
              "line_end": 519
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 521,
              "line_end": 528
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 530,
              "line_end": 539
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 541,
              "line_end": 550
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 552,
              "line_end": 568
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 570,
              "line_end": 581
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 583,
              "line_end": 591
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 2,
              "line_start": 594,
              "line_end": 603
            },
            {
              "name": "SegmentTree::update",
              "complexity": 1,
              "line_start": 605,
              "line_end": 610
            },
            {
              "name": "SegmentTree::query",
              "complexity": 5,
              "line_start": 612,
              "line_end": 625
            },
            {
              "name": "SegmentTree::bisect_l",
              "complexity": 28,
              "line_start": 627,
              "line_end": 660
            },
            {
              "name": "MinCostFlow::__init__",
              "complexity": 0,
              "line_start": 666,
              "line_end": 668
            },
            {
              "name": "MinCostFlow::add_edge",
              "complexity": 1,
              "line_start": 670,
              "line_end": 674
            },
            {
              "name": "MinCostFlow::flow",
              "complexity": 22,
              "line_start": 676,
              "line_end": 722
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.005207027999858838
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "fun",
              "complexity": 3,
              "line_start": 16,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 8.942800013755914e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.296000017551705e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 7.464099962817272e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.2050999834609684e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.8171999221958686e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.5396999919612426e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.6078999326273333e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.5718999495438766e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.2600000344682485e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.97759997920366e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.9985999390191864e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.972699919861043e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.476700046827318e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6431000403827056e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8494999494578224e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9906999114027712e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.149099989561364e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3826000213157386e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.992800025618635e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8655000278376974e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.48879998960183e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.648699971061433e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5659000382584054e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5077999705681577e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.1813000128313433e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.0829999155248515e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 3,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.0388000595849007e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "req_num",
              "complexity": 2,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.115899926342536e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1611000192933716e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6320999748131726e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.656099993851967e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.03199987381231e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6179999875021167e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.987000001070555e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.595000170113053e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "Fast_power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2972999431658536e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0587999642884824e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1171000551257748e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.380000402510632e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5258000530593563e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.629999577649869e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.390000296756625e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.134999916364904e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.26599989522947e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.0930000219959766e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.363499970670091e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.640000381390564e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0890999874391127e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "read_lines",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.248000004736241e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8464000024541747e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3653999960515648e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.384299998288043e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1690999346901663e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.268800007092068e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.903400011040503e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6511000467289705e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.734200006671017e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9688000065798406e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.525199998781318e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.265999996277969e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 25,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 36,
              "line_end": 37
            },
            {
              "name": "binarytodecimal",
              "complexity": 0,
              "line_start": 39,
              "line_end": 40
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 42,
              "line_end": 58
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 60,
              "line_end": 72
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 74,
              "line_end": 81
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 82,
              "line_end": 84
            },
            {
              "name": "getProduct",
              "complexity": 1,
              "line_start": 88,
              "line_end": 96
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 100,
              "line_end": 102
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 104,
              "line_end": 105
            },
            {
              "name": "checkisap",
              "complexity": 3,
              "line_start": 107,
              "line_end": 113
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 119,
              "line_end": 120
            },
            {
              "name": "di",
              "complexity": 0,
              "line_start": 122,
              "line_end": 122
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 123,
              "line_end": 123
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 124,
              "line_end": 124
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "indict",
              "complexity": 1,
              "line_start": 126,
              "line_end": 130
            },
            {
              "name": "frqdict",
              "complexity": 3,
              "line_start": 131,
              "line_end": 139
            }
          ]
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0006107520002842648
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.0937000449048355e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.780100087169558e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.2921000385831576e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.1125999561918434e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.943300064041978e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.13449992670212e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.590999535343144e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.525999874109402e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.03899992609513e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.86899989482481e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.958999852533452e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.548999640974216e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.817000106209889e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.5470002330839634e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.445999936957378e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7864000255940482e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.872400000342168e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.433999599015806e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.46000046597328e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.15800059272442e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.9480000850744545e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.5270004445919767e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.518999958236236e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.3520001276629046e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.957999979320448e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.356999726151116e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.345999958692119e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4918000488250982e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0089000170410145e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.705999789526686e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6932000107772183e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "paper",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.576999966346193e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2083000001439359e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8013999579125084e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.373999324045144e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3424999451672193e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.426000022154767e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2172000171849504e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0217999917804264e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.656999852973968e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.414300019561779e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3396000213106163e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.646999958727974e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.929000043484848e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "fn",
              "complexity": 5,
              "line_start": 4,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.97840001116856e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.236599958559964e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.015500028093811e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.572500049311202e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 21,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 46,
              "line_end": 47
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 49,
              "line_end": 50
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 62,
              "line_end": 71
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 77,
              "line_end": 82
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 84,
              "line_end": 95
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 97,
              "line_end": 110
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 112,
              "line_end": 114
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 117,
              "line_end": 117
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 119,
              "line_end": 119
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 121,
              "line_end": 121
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 123,
              "line_end": 123
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 126,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0004844329996558372
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.532699975039577e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "even_sum",
              "complexity": 3,
              "line_start": 5,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.894199992122594e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.1959000554925296e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.0625999645271804e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.1489999855693895e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001587389997439459
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.748800024070079e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.760000047099311e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.205900040687993e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "f",
              "complexity": 7,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.200900002615526e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "score",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.320299947517924e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.65200005742372e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.139000000373926e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.7361999855202157e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4516999726765789e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.000194176000150037
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4367000403581187e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4086999726714566e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0860000656975899e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.083000127749983e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0649999239831232e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3455999578582123e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.467999916523695e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.617000275989994e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.087100008589914e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0490000022400636e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.818000762606971e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.106999641517177e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.518000297248363e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0249000297335442e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.858999874268193e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0800999916682485e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 51,
              "line_end": 64
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 65,
              "line_end": 72
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00021028700030001346
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.3753999559849035e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.5286999516538344e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.633000010770047e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.715200050966814e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.1307999708806165e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4737999663338996e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.4014999326027464e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.887500002339948e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7894000848173164e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1701000150642358e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 18,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 33,
              "line_end": 38
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 40,
              "line_end": 51
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017776599997887388
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8352999834169168e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.394300049170852e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.315299934707582e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.7150000025576446e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2111999896878842e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2513000658364035e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.440699998056516e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.771300048858393e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.096899970638333e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2322999939206056e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.0637000236310996e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014689699946757173
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.400200032250723e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8003000150201842e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.616099962120643e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6791000234661624e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6631000107736327e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7393000234733336e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7051999748218805e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3996999769005924e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.19800004339777e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.675099974818295e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7473000298195984e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 34,
              "line_end": 45
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 50,
              "line_end": 60
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 65,
              "line_end": 73
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00018156199985241983
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.4355999812541995e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6451000192319043e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9346000044606626e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.730600009381305e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011397499929444166
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001302660002693301
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.625200007372769e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 68,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 68,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018885700046666898
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.4815000364906155e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 16,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00028544799988594605
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 16,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002749979994405294
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 16,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002490500000931206
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.756800055678468e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001511450000180048
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010834499971679179
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.954000011523021e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 11,
              "line_end": 31
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 42,
              "line_end": 46
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 48,
              "line_end": 56
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 58,
              "line_end": 65
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000244630999986839
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.736499967199052e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 83,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 83,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 86,
              "line_end": 97
            },
            {
              "name": "primeFactorsCount",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 112,
              "line_end": 121
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 124,
              "line_end": 135
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 138,
              "line_end": 146
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 149,
              "line_end": 159
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 162,
              "line_end": 171
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 174,
              "line_end": 179
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 190,
              "line_end": 203
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 206,
              "line_end": 212
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 215,
              "line_end": 219
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 222,
              "line_end": 226
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 228,
              "line_end": 233
            },
            {
              "name": "chk1",
              "complexity": 2,
              "line_start": 234,
              "line_end": 242
            },
            {
              "name": "chk2",
              "complexity": 2,
              "line_start": 243,
              "line_end": 251
            },
            {
              "name": "chk3",
              "complexity": 2,
              "line_start": 252,
              "line_end": 256
            },
            {
              "name": "chk4",
              "complexity": 2,
              "line_start": 257,
              "line_end": 261
            },
            {
              "name": "check1",
              "complexity": 4,
              "line_start": 264,
              "line_end": 268
            },
            {
              "name": "check2",
              "complexity": 2,
              "line_start": 271,
              "line_end": 274
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0009392110005137511
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "ch_x",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.934199998591794e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001008099998216494
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.192999974999111e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.537700013112044e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 8.654299927002285e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "inn1",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "inn2",
              "complexity": 6,
              "line_start": 10,
              "line_end": 18
            },
            {
              "name": "conv",
              "complexity": 1,
              "line_start": 19,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.0003117280002697953
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "onseg",
              "complexity": 1,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "orientation",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "doint",
              "complexity": 10,
              "line_start": 12,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00033872899984999094
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "check",
              "complexity": 1,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 46,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00012538600003608735
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "sol",
              "complexity": 33,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00010703099997044774
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 5.696800053556217e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "in_sqr",
              "complexity": 1,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "in_tri",
              "complexity": 1,
              "line_start": 30,
              "line_end": 35
            },
            {
              "name": "solve_sqr_tri",
              "complexity": 1,
              "line_start": 37,
              "line_end": 46
            },
            {
              "name": "rotate90",
              "complexity": 1,
              "line_start": 48,
              "line_end": 49
            },
            {
              "name": "iterate_rot",
              "complexity": 1,
              "line_start": 51,
              "line_end": 54
            },
            {
              "name": "solve_sqr_sqr45",
              "complexity": 3,
              "line_start": 56,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.0001895969999168301
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "in_one",
              "complexity": 1,
              "line_start": 13,
              "line_end": 16
            },
            {
              "name": "in_two",
              "complexity": 1,
              "line_start": 19,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00010657100028765853
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "Point::__init__",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            },
            {
              "name": "Point::print",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "Line::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "Line::on",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "Line::print",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            },
            {
              "name": "Square::__init__",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "Square::area",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Square::lines",
              "complexity": 1,
              "line_start": 31,
              "line_end": 36
            },
            {
              "name": "Square::midpoint",
              "complexity": 0,
              "line_start": 38,
              "line_end": 39
            },
            {
              "name": "Square::print",
              "complexity": 1,
              "line_start": 41,
              "line_end": 43
            },
            {
              "name": "distance",
              "complexity": 0,
              "line_start": 46,
              "line_end": 47
            },
            {
              "name": "tri_area",
              "complexity": 0,
              "line_start": 50,
              "line_end": 56
            },
            {
              "name": "inter",
              "complexity": 1,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.000249159000304644
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "nextline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "types",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "strs",
              "complexity": 1,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "signum",
              "complexity": 3,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "range_includes",
              "complexity": 0,
              "line_start": 20,
              "line_end": 22
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 24,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00016163399959623348
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "vec::__init__",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "vec::__mod__",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "vec::__sub__",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "vec::__repr__",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "lines_cross",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "rot",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00013090700031170854
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 4.656799956137547e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5379000615212135e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.1027000406757e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.0576999961340334e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2152000383357517e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0004537449995041243
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0005993300001136959
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 30,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 34,
              "line_end": 39
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 54,
              "line_end": 67
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 69,
              "line_end": 71
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00032482200003869366
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.591699987737229e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.3905000489321537e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2783999409293756e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2392999451549258e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.642099960008636e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0078000488865655e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.416500021558022e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0509999810892623e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4737999663338996e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5077999705681577e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.828499989642296e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.906999937607907e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 25,
              "line_end": 33
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 34,
              "line_end": 41
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 0.00014963200010242872
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.6297999940870795e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.357500034122495e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.4837999515293632e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.131000019289786e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.88700014911592e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.793000466132071e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.5999999959603883e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.0959999599435832e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.27299993741326e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.021899970510276e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.173000085458625e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.525999874109402e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.1211000128241722e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.446000720141456e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.229999260336626e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.697000339452643e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.829000191530213e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.490699989721179e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.768199919955805e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.714900023827795e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.10180002998095e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.320099924370879e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.0498000342049636e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.425599996058736e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.34950002777623e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.0337999305629637e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 1.9718000658031087e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.244200004497543e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.550500034383731e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.133999987563584e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "x",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 5.6136000239348505e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "done",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "complete",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.219699935172684e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.0316999982460402e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sign",
              "complexity": 2,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "which_square",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.3213000278919935e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "quadrant",
              "complexity": 4,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.446499977144413e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.844899962743511e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0138999641640112e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.791000148747116e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.385999535676092e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.4000001910026185e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.03199987381231e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.109000085212756e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.040000360168051e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.7742000384023413e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.254000593093224e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.825000466255005e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0349000149290077e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.772999768145382e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.070000042906031e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.035399954067543e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.612000106542837e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.006999789562542e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.224000000860542e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.570999746851157e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.637999937694985e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9505999918910675e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.051400032447418e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.2109999665408395e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.497499958233675e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.818300072249258e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.826100030186353e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "nextline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "types",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "strs",
              "complexity": 1,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.802799998695264e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.957399985665688e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.587700004776707e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.900900072854711e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.17900003210525e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 7,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.835299958154792e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.4422999962989707e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.8884999665024225e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.959600078611402e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "m",
              "complexity": 4,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.443399939191295e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.573599926516181e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.838300042640185e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "go",
              "complexity": 14,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.795000040758168e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9717000213859137e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.336499917670153e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7292999473284e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4057000043976586e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5900000107649248e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4737999663338996e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4766999811399728e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3575000593846198e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3865999790141359e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3015000149607658e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3794999833626207e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2111999896878842e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.5898000533052254e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.55879995165742e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.366399985476164e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8933999601576943e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.45060000452213e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3354000404651742e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.244300048914738e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.6409000131243374e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1410000044852495e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1560999812209047e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0759999895526562e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.678199987509288e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.587999940966256e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.90760001714807e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.492000466096215e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.004899968393147e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.144999810610898e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.821300040523056e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.046899953711545e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4748000467079692e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9756000003544614e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.42200029687956e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.290399995923508e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0048000149254221e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4076000297791325e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.42200029687956e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.670999598805793e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "ac",
              "complexity": 2,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "work",
              "complexity": 11,
              "line_start": 10,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 9.803399916563649e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2413000149535947e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.6781000087794382e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.417599989712471e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.292200017313007e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.0608000088250265e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8955999621539377e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.904599957924802e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9287000213807914e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3235000551503617e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0168999981251545e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 3,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.586899972811807e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.452400025911629e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.088899964292068e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.755299945216393e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 6,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.377300047053723e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7362000107823405e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0619999557093251e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.3413999770127703e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5018999874882866e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2724000043817796e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4517000636260491e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2593999599630479e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2243000128364656e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.596000038261991e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1741000637121033e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6371000128856394e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3065000530332327e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3625000065076165e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0168000446574297e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9035999685002025e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.4612999520031735e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 5,
              "line_end": 17
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.196800066187279e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "d",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.978799991775304e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3776000741927419e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "go",
              "complexity": 2,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3784999939380214e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6601000424998347e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1901999641850125e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2434000382199883e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.8489999800222e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6371000128856394e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4076000297791325e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3564999790105503e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6932000107772183e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2863999472756404e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1211000128241722e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.295000043290202e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.4486000256729312e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9585999982373323e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2182999853393994e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.497999599261675e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4646999261458404e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.707000233698636e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1791999895649496e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1159999960218556e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1992999134236015e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.106999641517177e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.736999916436616e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "s",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9717999748536386e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.638000023580389e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.3555000552732963e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 2,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.885599976958474e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "get",
              "complexity": 2,
              "line_start": 5,
              "line_end": 12
            },
            {
              "name": "solution",
              "complexity": 2,
              "line_start": 15,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.062499985797331e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.347199956100667e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.6779999643622432e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "ss",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "sol",
              "complexity": 1,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 16,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.1397999666514806e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9244999495858792e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.63690005542594e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "SUM",
              "complexity": 0,
              "line_start": 10,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.0236999918997753e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.723900019598659e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.9244000618055e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.933899996714899e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "getsum",
              "complexity": 0,
              "line_start": 3,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.7472000510897487e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getsum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.297099985706154e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 20,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0001155480003944831
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.428599964332534e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1280999135342427e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "pre",
              "complexity": 0,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "count",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010886499967455165
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.483199988200795e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 20,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001593509996382636
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "color",
              "complexity": 1,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "white",
              "complexity": 5,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "black",
              "complexity": 2,
              "line_start": 23,
              "line_end": 28
            },
            {
              "name": "intersect_1D",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "intersect_2D",
              "complexity": 0,
              "line_start": 36,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014727800044056494
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "getcol",
              "complexity": 4,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.436100011342205e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "quer",
              "complexity": 4,
              "line_start": 6,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 17,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.64620003287564e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "area",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "get_w",
              "complexity": 2,
              "line_start": 8,
              "line_end": 20
            },
            {
              "name": "intersect_rects",
              "complexity": 3,
              "line_start": 23,
              "line_end": 30
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 33,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001097269996535033
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "isin",
              "complexity": 2,
              "line_start": 34,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00015556299968011444
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "num_sq",
              "complexity": 3,
              "line_start": 1,
              "line_end": 11
            },
            {
              "name": "pt_in",
              "complexity": 1,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "intc",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00013164800020604162
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "get_colors",
              "complexity": 14,
              "line_start": 1,
              "line_end": 22
            },
            {
              "name": "get_intersection",
              "complexity": 4,
              "line_start": 24,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.000133130999529385
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00021551600002567284
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "getBW",
              "complexity": 7,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014252900018618675
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "read_line",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "solve2",
              "complexity": 10,
              "line_start": 7,
              "line_end": 26
            },
            {
              "name": "rnd_test",
              "complexity": 0,
              "line_start": 28,
              "line_end": 40
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 44,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00027688200043485267
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "wb",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.665200013841968e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "interact",
              "complexity": 8,
              "line_start": 19,
              "line_end": 31
            },
            {
              "name": "area",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "winrect",
              "complexity": 5,
              "line_start": 38,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014574499982700218
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "black_count",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "black_count2",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "white_count2",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            },
            {
              "name": "intersection",
              "complexity": 2,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "intersection2",
              "complexity": 4,
              "line_start": 21,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 34,
              "line_end": 43
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 45,
              "line_end": 52
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011997700039501069
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "COMMON",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            },
            {
              "name": "BtoW",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "WtoB",
              "complexity": 1,
              "line_start": 22,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011413500033086166
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "whb",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "insegment",
              "complexity": 4,
              "line_start": 10,
              "line_end": 19
            },
            {
              "name": "inrect",
              "complexity": 3,
              "line_start": 21,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011295299918856472
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fis",
              "complexity": 5,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.368699946004199e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.848900011391379e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "eval_",
              "complexity": 11,
              "line_start": 6,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010650100011844188
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.321000000752974e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 8,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00019746199996006908
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.0455999624100514e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "get_path_hv",
              "complexity": 4,
              "line_start": 1,
              "line_end": 22
            },
            {
              "name": "get_path_vh",
              "complexity": 4,
              "line_start": 24,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010559899965301156
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getpath",
              "complexity": 10,
              "line_start": 41,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00015480199999728939
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00017023099917423679
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010756200026662555
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "path",
              "complexity": 21,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013919299999543
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.1468000745226163e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "abs",
              "complexity": 2,
              "line_start": 9,
              "line_end": 12
            },
            {
              "name": "calcLen",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 49,
              "line_start": 19,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.000199275999875681
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.494900041318033e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.0717000047152396e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0001189439999507158
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "solve",
              "complexity": 27,
              "line_start": 12,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00013372200010053348
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 62,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00021337199996196432
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00016190499991353136
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "mock_query",
              "complexity": 2,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "query2",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "query",
              "complexity": 0,
              "line_start": 21,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 27,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 9.874599982140353e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.357399964443175e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010760300028778147
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 9.954800043487921e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.043399935151683e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 2,
              "line_start": 16,
              "line_end": 31
            },
            {
              "name": "get_ans",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0001015110001389985
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.289799966907594e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "qu",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.8332000258378685e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "ask",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.174600002850639e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "interact",
              "complexity": 1,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 5.1748000259976834e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.058700076508103e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.243799998628674e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 7.38990001991624e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.55969996235217e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "query",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 5.392099956225138e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.5588999303872697e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.2724000043817796e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.0239000403089449e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 9.42799943004502e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.01590003396268e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.6741000763431657e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 2.8532999749586452e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.3760005509248e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "p",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 2.583900004538009e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.197300025523873e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.225300002261065e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.43599991640076e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.225300002261065e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.1731999620678835e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.825999429973308e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.386000445170794e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 9.518000297248363e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.535999768355396e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.105000233626924e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.3113999557390343e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.3324999599717557e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.043899985437747e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.8334999367652927e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00046098999973764876
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.025699970748974e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.6992000382742845e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.6510000679991208e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.25640008263872e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.5579000319121405e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.3715999557462055e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.1262000043643638e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 4.839099983655615e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.1951000235276297e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.2021000404492952e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 3.002599987667054e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.8932999814278446e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.6518999877444e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9116000657959376e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.7753000065567903e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.824200030067004e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.133900008833734e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.50470002356451e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.7082000340451486e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.654999934748048e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 5,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.305099992052419e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.5214999772724696e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.910299958282849e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.019700034201378e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9436000002315268e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.8092999855289236e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.5938999897334725e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.8345000171393622e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.6400000024295878e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.425599996058736e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.765000191284344e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.599999894911889e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.474000085494481e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.819999958272092e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.8700003389967605e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.208999937167391e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.539000656222925e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.458000148588326e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.268000338925049e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8975999410031363e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.530999260372482e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2863999472756404e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.092999112501275e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.818999514100142e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.500000042957254e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.6290006139315665e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.8089996198541485e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.953000593057368e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.648999492928851e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00030630699984612875
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.0446000386727974e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.862600038293749e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.0679000044765417e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.4997000764415134e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.6370000341557898e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.278299962199526e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.9566999981179833e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.5358999917225447e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.4817000192124397e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.0568999389070086e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.695199989626417e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.4465999558742624e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.6662000234646257e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "find",
              "complexity": 0,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.002600053354399e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.7089999750605784e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.411200072558131e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.2823999895772431e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.975699979084311e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sq",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.571799970814027e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.4265000067534856e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.1980999918014277e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 261,
        "functions_count": 55,
        "raw_output": {
          "file_complexity": 261,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 76,
              "line_end": 103
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 104,
              "line_end": 130
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 132,
              "line_end": 142
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 144,
              "line_end": 155
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 157,
              "line_end": 171
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 173,
              "line_end": 187
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 190,
              "line_end": 193
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 195,
              "line_end": 203
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 205,
              "line_end": 217
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 219,
              "line_end": 220
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 226,
              "line_end": 231
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 233,
              "line_end": 242
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 244,
              "line_end": 262
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 270,
              "line_end": 273
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 275,
              "line_end": 277
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 279,
              "line_end": 281
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 283,
              "line_end": 285
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 287,
              "line_end": 303
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 307,
              "line_end": 327
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 330,
              "line_end": 333
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 335,
              "line_end": 343
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 346,
              "line_end": 353
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 356,
              "line_end": 361
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 363,
              "line_end": 375
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 377,
              "line_end": 386
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 388,
              "line_end": 397
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 400,
              "line_end": 413
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 415,
              "line_end": 418
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 427,
              "line_end": 428
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 430,
              "line_end": 446
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 448,
              "line_end": 472
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 474,
              "line_end": 498
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 503,
              "line_end": 504
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 506,
              "line_end": 512
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 523,
              "line_end": 530
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 532,
              "line_end": 541
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 543,
              "line_end": 552
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 554,
              "line_end": 570
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 572,
              "line_end": 583
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 585,
              "line_end": 593
            },
            {
              "name": "Dinic::__init__",
              "complexity": 0,
              "line_start": 597,
              "line_end": 599
            },
            {
              "name": "Dinic::add_edge",
              "complexity": 0,
              "line_start": 601,
              "line_end": 605
            },
            {
              "name": "Dinic::add_multi_edge",
              "complexity": 0,
              "line_start": 607,
              "line_end": 611
            },
            {
              "name": "Dinic::bfs",
              "complexity": 7,
              "line_start": 613,
              "line_end": 625
            },
            {
              "name": "Dinic::dfs",
              "complexity": 8,
              "line_start": 627,
              "line_end": 639
            },
            {
              "name": "Dinic::flow",
              "complexity": 3,
              "line_start": 641,
              "line_end": 651
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.004201232000013988
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "chk",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.677800072589889e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.214999924239237e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 5,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.62180005342816e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00016846800008352147
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.8493999707279727e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.594800025690347e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.70609998551663e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "checksq",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 10,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.274100047041429e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.23410004057223e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.360400048928568e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "inpi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "issq",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            },
            {
              "name": "g",
              "complexity": 3,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.020499975216808e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.413400008867029e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.572899938968476e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "is_square",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.2250999538518954e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.1777999942714814e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "field",
              "complexity": 0,
              "line_start": 4,
              "line_end": 17
            },
            {
              "name": "right_field",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "up_field",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "base_field",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "CodeforcesTask256BSolution::__init__",
              "complexity": 0,
              "line_start": 39,
              "line_end": 41
            },
            {
              "name": "CodeforcesTask256BSolution::read_input",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "CodeforcesTask256BSolution::process_task",
              "complexity": 7,
              "line_start": 46,
              "line_end": 65
            },
            {
              "name": "CodeforcesTask256BSolution::get_result",
              "complexity": 0,
              "line_start": 67,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0256_B",
      "tags": "binary search,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00022764000004826812
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6749999960884452e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6320999748131726e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4667999494122341e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5409000297950115e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8845999875338748e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.103999450919218e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4785999812593218e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.129100019170437e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 2,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.307399972778512e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 9,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 42,
              "line_end": 49
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 51,
              "line_end": 54
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 58,
              "line_end": 64
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00015612500010320218
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.213100015069358e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.2791999728942756e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 15,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0127000172797125e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "f",
              "complexity": 13,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.079499962652335e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.311199998279335e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.394500006630551e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.116999985446455e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.609899911476532e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 37,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011110899959021481
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.206899939163122e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4926999685703777e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.576999966346193e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.0937000449048355e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9035999685002025e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5488999451918062e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.24909997289069e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 18,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 62,
              "line_end": 79
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 81,
              "line_end": 86
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 88,
              "line_end": 100
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 103,
              "line_end": 113
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 116,
              "line_end": 129
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 130,
              "line_end": 136
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 141,
              "line_end": 150
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 151,
              "line_end": 152
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 153,
              "line_end": 156
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 157,
              "line_end": 158
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 159,
              "line_end": 160
            },
            {
              "name": "has",
              "complexity": 0,
              "line_start": 171,
              "line_end": 172
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 174,
              "line_end": 179
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0005535339996640687
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.330199953983538e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 7,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.1909999961499125e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "cntbit",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.363400017202366e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.2109999665408395e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "maxXor",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.989799966395367e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7643000066746026e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.440699998056516e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "maxXor",
              "complexity": 4,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.728100025706226e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "maxor",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.255199979117606e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bin",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "convBin",
              "complexity": 1,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "maxi",
              "complexity": 1,
              "line_start": 15,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.401100017683348e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.928400019503897e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4615999791421928e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1741999514924828e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.602700028044637e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8092999855289236e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "fi2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "fi3",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "fo",
              "complexity": 1,
              "line_start": 23,
              "line_end": 26
            },
            {
              "name": "puts",
              "complexity": 1,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "mask",
              "complexity": 1,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "getn",
              "complexity": 2,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.020000015880214e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "fastio",
              "complexity": 0,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010636999923008261
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.926499928435078e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.224200034106616e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.457500042713946e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3876000593882054e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0259000191581436e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.2129996624425985e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 3,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.6438999813981354e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 22,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.222799947863678e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 22,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.721800062019611e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "Maxxor",
              "complexity": 3,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.200000082870247e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.239000008965377e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.414499977021478e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.02700048754923e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0807999792159535e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9627000256150495e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.815999535727315e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.346400015085237e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.221899962431053e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4316000235558022e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "bina",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "con",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.15750002200366e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "fill",
              "complexity": 1,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "check",
              "complexity": 3,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "Engine1",
              "complexity": 1,
              "line_start": 20,
              "line_end": 23
            },
            {
              "name": "Engine2",
              "complexity": 1,
              "line_start": 24,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.888000007165829e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0107000384305138e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7701999897544738e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3496000065060798e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3504999515134841e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1161000657011755e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.225600074889371e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.997700019273907e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.219199996034149e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "number",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.665699973178562e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3845000214350875e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1502000234031584e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9456000447680708e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1010000637033954e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2903000171936583e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1031000212824438e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.317000149167143e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.2629000492743216e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.309200019430136e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2371999875758775e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5268999959516805e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.820199981419137e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "mod_expo",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            },
            {
              "name": "is_square",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "find_div",
              "complexity": 6,
              "line_start": 16,
              "line_end": 25
            },
            {
              "name": "find_x",
              "complexity": 4,
              "line_start": 27,
              "line_end": 33
            },
            {
              "name": "find_base_side",
              "complexity": 7,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "str_add",
              "complexity": 3,
              "line_start": 43,
              "line_end": 52
            },
            {
              "name": "str_sub",
              "complexity": 3,
              "line_start": 54,
              "line_end": 63
            },
            {
              "name": "find_massive_x",
              "complexity": 1,
              "line_start": 65,
              "line_end": 76
            },
            {
              "name": "find_triples",
              "complexity": 1,
              "line_start": 77,
              "line_end": 92
            },
            {
              "name": "find_max_xor",
              "complexity": 1,
              "line_start": 94,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002152460001525469
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "dec_to_bin",
              "complexity": 1,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "max_xor",
              "complexity": 12,
              "line_start": 15,
              "line_end": 57
            },
            {
              "name": "bin_to_dec",
              "complexity": 3,
              "line_start": 59,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.000134855000396783
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 30,
              "line_end": 30
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 31,
              "line_end": 31
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 32,
              "line_end": 32
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 33,
              "line_end": 33
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 34,
              "line_end": 34
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 35,
              "line_end": 35
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 36,
              "line_end": 36
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 37,
              "line_end": 37
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 38,
              "line_end": 38
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 39,
              "line_end": 39
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 44,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001544110000395449
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.15589995807386e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.0717000047152396e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.549699977156706e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.555399977514753e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.225999408750795e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "max_xor_naive",
              "complexity": 6,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "max_xor_efficient",
              "complexity": 4,
              "line_start": 15,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.597600011242321e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.045499983680202e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.691599992336705e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 1,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.769400003278861e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.0194999857922085e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3165000382286962e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1290000404405873e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4838000424788333e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2092999895685352e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1771000319859013e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.755299945216393e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2322000404528808e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4797999938309658e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.93860005310853e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.6006000047782436e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.609599975286983e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0058000700373668e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00021007600025768625
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 9,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00018424700010655215
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.779199985525338e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.205199962190818e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 107,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002069510001092567
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "ncr_util",
              "complexity": 2,
              "line_start": 9,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 20,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.477899948251434e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 20,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "eprint",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "string",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "fori",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "inc",
              "complexity": 1,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "fli",
              "complexity": 0,
              "line_start": 33,
              "line_end": 34
            },
            {
              "name": "comp",
              "complexity": 2,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "gi",
              "complexity": 0,
              "line_start": 39,
              "line_end": 40
            },
            {
              "name": "gtc",
              "complexity": 0,
              "line_start": 41,
              "line_end": 42
            },
            {
              "name": "cil",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "pro",
              "complexity": 0,
              "line_start": 47,
              "line_end": 48
            },
            {
              "name": "swap",
              "complexity": 0,
              "line_start": 49,
              "line_end": 50
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 53,
              "line_end": 54
            },
            {
              "name": "gh",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "isvalid",
              "complexity": 1,
              "line_start": 57,
              "line_end": 58
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 59,
              "line_end": 60
            },
            {
              "name": "graph",
              "complexity": 1,
              "line_start": 61,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00021468500017363112
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 5,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.755000009026844e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.07079999402049e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "suma",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "sumaij",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "bin_search_solution",
              "complexity": 5,
              "line_start": 9,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 23,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.483300057880115e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.141899989917874e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ok",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.5987999581266195e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.8082000173744746e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.491600000415929e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "sum_from_to",
              "complexity": 1,
              "line_start": 11,
              "line_end": 14
            },
            {
              "name": "min_splitters",
              "complexity": 3,
              "line_start": 17,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.070300034683896e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "bsearch",
              "complexity": 3,
              "line_start": 7,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.483499924390344e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "s",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "diff",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "bs",
              "complexity": 5,
              "line_start": 9,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.3871000091021415e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.2659999710158445e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sum_from1",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "sum_of_subtraction",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.0805000430264045e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.7030000385129824e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.4214999939431436e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "valid",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.9555000512336846e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "valid",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.628900049079675e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.4496999685652554e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "minSplitters",
              "complexity": 12,
              "line_start": 7,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.765900004917057e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.1378999665321317e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.7370999962149654e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "range_sum",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 9,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.2368000069691334e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "reach_max",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.002599987667054e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.6488000407407526e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.773999989993172e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.185899979347596e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.718899981526192e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.4754000555258244e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.3541999730223324e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.4105000193230808e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.3253999643202405e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "normal_sum",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "bs_sum",
              "complexity": 3,
              "line_start": 11,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.346799975493923e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.2280999221256934e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getSum",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            },
            {
              "name": "getSumOfTwo",
              "complexity": 1,
              "line_start": 5,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.3390999710245524e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "sum_1",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "sum_2",
              "complexity": 1,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "mini_splitter",
              "complexity": 3,
              "line_start": 10,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.898099971091142e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "sum_range",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 9,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.3531000048678834e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "sm",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "summ",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 9,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.14159998804098e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "reach_max",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.136899977107532e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "multi_input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "function",
              "complexity": 7,
              "line_start": 9,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.971300015517045e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "lower_bound",
              "complexity": 3,
              "line_start": 1,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 14,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.0515999899071176e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.459700044710189e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "findValue",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.1607999921543524e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.824999996344559e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.988699998240918e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "in_bounds",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.1008999940240756e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "inlist",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "instr",
              "complexity": 0,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "getSum",
              "complexity": 0,
              "line_start": 38,
              "line_end": 43
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 46,
              "line_end": 67
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 76,
              "line_end": 80
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 82,
              "line_end": 90
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 92,
              "line_end": 99
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 101,
              "line_end": 104
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 108,
              "line_end": 114
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 118,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00023146599960455205
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.0516999686369672e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.9706000532314647e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "total_count",
              "complexity": 6,
              "line_start": 9,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 8.930799958761781e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "total_count",
              "complexity": 6,
              "line_start": 9,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.92500004536123e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.634899985627271e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "readlines",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "read",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "solve_naive",
              "complexity": 20,
              "line_start": 17,
              "line_end": 38
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 41,
              "line_end": 56
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 59,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.0001333719992544502
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "sum_from_two",
              "complexity": 0,
              "line_start": 4,
              "line_end": 8
            },
            {
              "name": "sum_last",
              "complexity": 1,
              "line_start": 10,
              "line_end": 22
            },
            {
              "name": "possible",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 27,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 8.323699967149878e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "bin_search",
              "complexity": 4,
              "line_start": 9,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.711899964604527e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "is_good",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.6377999751712196e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "bs",
              "complexity": 6,
              "line_start": 1,
              "line_end": 50
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 55,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.950099941605004e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "bs",
              "complexity": 4,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 12,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.212800078879809e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 1,
              "line_end": 14
            },
            {
              "name": "min_splitters",
              "complexity": 3,
              "line_start": 17,
              "line_end": 29
            },
            {
              "name": "sum_consecutive",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "sum_consecutive2",
              "complexity": 0,
              "line_start": 36,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.216699966898886e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0338_A",
      "tags": "greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.0759000108228065e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "fast_power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0338_A",
      "tags": "greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.7119999433343764e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "contain",
              "complexity": 1,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "ask",
              "complexity": 3,
              "line_start": 7,
              "line_end": 17
            },
            {
              "name": "binsearch",
              "complexity": 3,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "shrink",
              "complexity": 0,
              "line_start": 27,
              "line_end": 35
            },
            {
              "name": "go",
              "complexity": 10,
              "line_start": 36,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0713_B",
      "tags": "binary search,constructive algorithms,interactive",
      "tool": "complexipy",
      "execution_time": 0.000201850999474118
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "balance",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "get_lr",
              "complexity": 12,
              "line_start": 5,
              "line_end": 55
            },
            {
              "name": "get_ud",
              "complexity": 12,
              "line_start": 58,
              "line_end": 108
            }
          ]
        }
      },
      "problem": "0713_B",
      "tags": "binary search,constructive algorithms,interactive",
      "tool": "complexipy",
      "execution_time": 0.00034076300016749883
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "req",
              "complexity": 0,
              "line_start": 5,
              "line_end": 14
            },
            {
              "name": "bin",
              "complexity": 11,
              "line_start": 17,
              "line_end": 34
            },
            {
              "name": "find_rec",
              "complexity": 0,
              "line_start": 37,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0713_B",
      "tags": "binary search,constructive algorithms,interactive",
      "tool": "complexipy",
      "execution_time": 0.00014121599997451995
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.946499989775475e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.611899956013076e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "func",
              "complexity": 2,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.7179999708314426e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.1470999854500405e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 15,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 54,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00018810499932442326
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "digit",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "big",
              "complexity": 3,
              "line_start": 8,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.018599975097459e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "digit",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "big",
              "complexity": 3,
              "line_start": 8,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.901499919971684e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.2561999685422052e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.4816999939503148e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.212799987930339e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "bin",
              "complexity": 6,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.494499989959877e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 7.222600015666103e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "dfs",
              "complexity": 9,
              "line_start": 31,
              "line_end": 40
            },
            {
              "name": "dfs2",
              "complexity": 3,
              "line_start": 45,
              "line_end": 50
            },
            {
              "name": "hnbhai",
              "complexity": 3,
              "line_start": 51,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0001217500002894667
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "binsearch",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.724999987753108e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.484700053173583e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "find",
              "complexity": 7,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 6.600400047318544e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "digitsum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.459499930613674e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "BIG",
              "complexity": 2,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.88529997508158e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.8865999663830735e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.209100032108836e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.9005000467586797e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "ok",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "check",
              "complexity": 3,
              "line_start": 21,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.347099977370817e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.2012000044924207e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "summing",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "result",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.8563999876496382e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.406699993822258e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "digit",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.836400017258711e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.7490999855217524e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "digs",
              "complexity": 1,
              "line_start": 3,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.910599985421868e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "getval",
              "complexity": 1,
              "line_start": 4,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.739099975064164e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "mus",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.292299996042857e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sum_of_digits",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.006799968512496e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "really_big",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.1540000489039812e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "somadig",
              "complexity": 1,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 16,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.377199977374403e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "somaDigitos",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "isReallyBigNumber",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.231000002619112e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "ok",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.079799989791354e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "nine",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "prosh",
              "complexity": 1,
              "line_start": 7,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.3760999435326084e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "nine",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "prosh",
              "complexity": 1,
              "line_start": 7,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.70690001748153e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "d",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 10,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 6.655600009253249e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "d",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 9,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.557600004773121e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "digisum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.860999954165891e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.323300006741192e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "case",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.159800027991878e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "ver",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.1276999581896234e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "sum_of_digits",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.0097000490059145e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "dsum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.4967000172182452e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 6.181700064189499e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "forninho",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.208900008961791e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "qtd",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "digitos",
              "complexity": 1,
              "line_start": 8,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.03159992856672e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "bigNumber",
              "complexity": 5,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.5928000468411483e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.009799936786294e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "get_decimal_value_digits",
              "complexity": 1,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "is_big_num",
              "complexity": 1,
              "line_start": 17,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.4563999836100265e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.839499964262359e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.763399995979853e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.947700002347119e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.5898000533052254e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.2822999198979232e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.8544999875302892e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "really_big",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 12,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.1137000152957626e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.3223999960464425e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "digit_sum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "bsearch",
              "complexity": 6,
              "line_start": 9,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.8141999539220706e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 31,
              "line_end": 36
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 39,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00010559899965301156
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.062600030214526e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "pow2",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "calc",
              "complexity": 2,
              "line_start": 15,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.902300042886054e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 23,
              "line_end": 28
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 33,
              "line_end": 44
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 49,
              "line_end": 59
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 64,
              "line_end": 72
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 77,
              "line_end": 82
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 87,
              "line_end": 90
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 95,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0001831050003602286
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1691000256396364e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.290399995923508e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2372999663057271e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7844000467448495e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "BinarySearch",
              "complexity": 3,
              "line_start": 10,
              "line_end": 15
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "linput",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "fiinput",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "fminput",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "flinput",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.81580001785187e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 63,
        "functions_count": 23,
        "raw_output": {
          "file_complexity": 63,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 86,
              "line_end": 97
            },
            {
              "name": "primeFactorsCount",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 112,
              "line_end": 121
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 124,
              "line_end": 135
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 138,
              "line_end": 146
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 149,
              "line_end": 159
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 162,
              "line_end": 171
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 174,
              "line_end": 179
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 190,
              "line_end": 203
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 206,
              "line_end": 212
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 215,
              "line_end": 219
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 222,
              "line_end": 226
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 228,
              "line_end": 233
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0006902420000187703
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.642099960008636e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 69,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00025022199952218216
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8814999748428818e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7192999621329363e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.196199966419954e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7223000213562045e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.805400006560376e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.060500006948132e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bpow",
              "complexity": 2,
              "line_start": 5,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.79210005121422e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pot",
              "complexity": 2,
              "line_start": 9,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.8433999432309065e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8044000171357766e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "bin_pow",
              "complexity": 3,
              "line_start": 7,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.3833999623311684e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3404999663180206e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6830999811645597e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pwr",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.1861000024946406e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.791399972717045e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "get2k",
              "complexity": 3,
              "line_start": 13,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.8934000258450396e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.060899987554876e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "my_pow",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.376299991941778e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.403599981131265e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fastexp",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.262099992047297e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6430999494332355e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3955999747850001e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "somaPa",
              "complexity": 1,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "diminui",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.895400004694238e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6480999875057023e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4257000657380559e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.5464999604737386e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.501599985611392e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.141900015179999e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.3401999391790014e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pow",
              "complexity": 2,
              "line_start": 11,
              "line_end": 18
            },
            {
              "name": "_main",
              "complexity": 1,
              "line_start": 20,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.3912999899475835e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "bin_pow",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.2109999665408395e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "a",
              "complexity": 1,
              "line_start": 4,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.935499924205942e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pow2",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.572900029917946e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "pw",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.917500023613684e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8515000192564912e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "bin",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.723999998328509e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.83030003629392e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0327999664004892e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.4605999897175934e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4016000022820663e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.749299917719327e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.664100000198232e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get",
              "complexity": 2,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.929600032075541e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4977999853726942e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "modulus",
              "complexity": 3,
              "line_start": 12,
              "line_end": 24
            },
            {
              "name": "pow_mod",
              "complexity": 3,
              "line_start": 26,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.021199962764513e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "mul",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "pows",
              "complexity": 2,
              "line_start": 9,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.027499992138473e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.0698000045958906e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7903000298247207e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.613099993846845e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "modularExponentiation",
              "complexity": 1,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.0175999856728595e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "modularExponentiation",
              "complexity": 1,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.573699996195501e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.559999964229064e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "power",
              "complexity": 3,
              "line_start": 4,
              "line_end": 11
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.8101000174938235e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "binary_exp",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.72189994979999e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9145999431202654e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.81440000233124e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.464600038365461e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "repow",
              "complexity": 2,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.912300028081518e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "fast_power",
              "complexity": 3,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.6017999264004175e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "pow1",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.7490999602596276e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7613000636629295e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9515999813156668e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5008000445959624e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.903499989770353e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6009999853849877e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4147000001685228e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.584999972692458e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4909000128682237e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "po",
              "complexity": 2,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.3913000152097084e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.116299977700692e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3005000255361665e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5630000234523322e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4426999769057147e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2864000382251106e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3144999684300274e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0077999579370953e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.6961000003211666e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3626000509248115e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.72119998751441e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.3084000531525817e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.712300036160741e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "binpow",
              "complexity": 3,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.126899991912069e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7162999938591383e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "binar",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.0637999770988245e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5950000488373917e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9706999410118442e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.969699951587245e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "pow_mod",
              "complexity": 3,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.274199934821809e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3054999726591632e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5548999726888724e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.907999810820911e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 20,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.052200064412318e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "mat_oz",
              "complexity": 2,
              "line_start": 4,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.374500036239624e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3496000065060798e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.027999951475067e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6711000171198975e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "modpow",
              "complexity": 3,
              "line_start": 3,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.301100034354022e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.755099987756694e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "calcpower",
              "complexity": 5,
              "line_start": 4,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.462300032377243e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0849000065936707e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.478500002529472e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.850399985414697e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0989999282173812e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.060899987554876e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8124999769497663e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.760400027706055e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.582699991966365e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1240000023681205e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.479700015101116e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5059000361361541e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.765999983646907e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7812999431043863e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "fp",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.685800013248809e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "fp",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.305099992052419e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.006700015044771e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "powr",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "MODI",
              "complexity": 0,
              "line_start": 23,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.3942999582213815e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.4034000236715656e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5219000488286838e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6541000150027685e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2814000001526438e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "power",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.328200000396464e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00013856199984729756
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "modInverse",
              "complexity": 2,
              "line_start": 11,
              "line_end": 19
            },
            {
              "name": "modDivide",
              "complexity": 0,
              "line_start": 23,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.985199979681056e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7313000171270687e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "fast_power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.1576999794633593e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0339000002422836e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.6949999412172474e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9597000573412515e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7512999875179958e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 3.2932000067376066e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "getnum",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 8.606200026406441e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "answer",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "has_intersection",
              "complexity": 4,
              "line_start": 12,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010370600011810893
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 7.149500015657395e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 5.779899947810918e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "ans",
              "complexity": 0,
              "line_start": 22,
              "line_end": 24
            },
            {
              "name": "opposite",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 6.905999998707557e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 5.266999960440444e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "Solver::solve",
              "complexity": 2,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "Solver::find_zero_pair",
              "complexity": 4,
              "line_start": 11,
              "line_end": 29
            },
            {
              "name": "Solver::func",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "Solver::get_value",
              "complexity": 0,
              "line_start": 35,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 6.767800005036406e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "Solver::solve",
              "complexity": 2,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "Solver::find_zero_pair",
              "complexity": 4,
              "line_start": 11,
              "line_end": 29
            },
            {
              "name": "Solver::func",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "Solver::get_value",
              "complexity": 0,
              "line_start": 35,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 6.122500053606927e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 3.384399951755768e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 2.818300072249258e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "qry",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "qry2",
              "complexity": 1,
              "line_start": 9,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 5.2739000238943845e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.752299976942595e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "area",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "bin_search",
              "complexity": 5,
              "line_start": 7,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.844399932655506e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.213900047034258e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.4194000111019704e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.269100034231087e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.1020000531279948e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            },
            {
              "name": "comp",
              "complexity": 5,
              "line_start": 37,
              "line_end": 46
            },
            {
              "name": "gg",
              "complexity": 12,
              "line_start": 49,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 0.00014473300052486593
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "func",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.11749992458499e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.680099987628637e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.7811999643745366e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.70699999621138e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.820100002689287e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.107600009068847e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "get_max",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.231600011436967e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getUpper",
              "complexity": 3,
              "line_start": 36,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012603800041688373
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 4,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.0954999753448647e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.448199954116717e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "A",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.801099930773489e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.690600002912106e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mypw2",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "sol",
              "complexity": 4,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.364099979487946e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010522799948375905
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.656500045210123e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "tonum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "check",
              "complexity": 0,
              "line_start": 5,
              "line_end": 12
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 14,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.926999933260959e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.68460006636451e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "max_splits",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.651500007137656e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.4553000154555775e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.054400000721216e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.699700043100165e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.154599941510241e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "main",
              "complexity": 13,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.544299958477495e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.393100011337083e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "solve",
              "complexity": 16,
              "line_start": 1,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.806800047343131e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "pow",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "rate",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 14,
              "line_end": 33
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.02520001141238e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 9,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.8491000345384236e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "eval_",
              "complexity": 11,
              "line_start": 6,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010195300001214491
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.0775000747526065e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "bi",
              "complexity": 4,
              "line_start": 8,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.231500032707117e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "getsum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "b",
              "complexity": 6,
              "line_start": 4,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.388900030491641e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.465200021921191e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.14240002000588e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "read_num",
              "complexity": 1,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 89,
              "line_end": 119
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00018258499949297402
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "is_valid",
              "complexity": 1,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "solve_mini",
              "complexity": 10,
              "line_start": 9,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 27,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.711400005267933e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "calc",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.035300041025039e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 16,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.498000079271151e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "f_pow",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "get_c",
              "complexity": 1,
              "line_start": 12,
              "line_end": 15
            },
            {
              "name": "get_cc",
              "complexity": 1,
              "line_start": 17,
              "line_end": 20
            },
            {
              "name": "ans",
              "complexity": 9,
              "line_start": 22,
              "line_end": 43
            },
            {
              "name": "read",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010632999965309864
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.162599947856506e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.047399983799551e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "run",
              "complexity": 10,
              "line_start": 3,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.671600021945778e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.841999973199563e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.0255000132892746e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.516499939200003e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sol",
              "complexity": 7,
              "line_start": 3,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.386199998407392e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sol",
              "complexity": 7,
              "line_start": 3,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.698999989865115e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sol",
              "complexity": 7,
              "line_start": 3,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.5226999898441136e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.9142000534629915e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "precompute",
              "complexity": 1,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "getAns",
              "complexity": 8,
              "line_start": 15,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.39090000934084e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.761800002801465e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.725499992578989e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.153599952085642e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.5976999899721704e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.893100023968145e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.091700066055637e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00013684799978364026
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "solve",
              "complexity": 27,
              "line_start": 12,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00013357199986785417
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 62,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00022061599975131685
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0001509849998910795
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "mock_query",
              "complexity": 2,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "query2",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "query",
              "complexity": 0,
              "line_start": 21,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 27,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 9.292600043409038e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.509599991957657e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010871499944187235
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010398599988548085
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010224200013908558
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 2,
              "line_start": 16,
              "line_end": 31
            },
            {
              "name": "get_ans",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010582000049907947
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 5.8621000789571553e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "qu",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 4.00159997298033e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "ask",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.285800009209197e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "interact",
              "complexity": 1,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 5.164700087334495e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.129900051135337e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.15760000073351e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 7.404000007227296e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.888299943355378e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "query",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.925399960280629e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 4.768999951920705e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 3,
              "line_start": 6,
              "line_end": 16
            },
            {
              "name": "get_ans_",
              "complexity": 0,
              "line_start": 18,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.257800032472005e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "solve",
              "complexity": 47,
              "line_start": 4,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0001455550000173389
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.300099953979952e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "st",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 27,
              "line_end": 27
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "pr",
              "complexity": 0,
              "line_start": 30,
              "line_end": 30
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 37,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 9.989900081563974e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 56,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00019433699981163954
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "slv",
              "complexity": 8,
              "line_start": 8,
              "line_end": 35
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 38,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 8.089299990388099e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.035599977214588e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.6832000255817547e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.420199977379525e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "dfs2",
              "complexity": 9,
              "line_start": 31,
              "line_end": 40
            },
            {
              "name": "dfs",
              "complexity": 3,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "hnbhai",
              "complexity": 1,
              "line_start": 54,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011787299990828615
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.0175999856728595e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.2061999516154174e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main_function",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.614900040498469e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.9945000025909394e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.7570999666058924e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.970499983552145e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.531600032147253e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.1900999854551628e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.6920000638929196e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.35730001097545e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.513799972803099e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.4477999684459064e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.512700029910775e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 5,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.804999935004162e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.449399966688361e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.6747999476792756e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.9935999918961897e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9166000129189342e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.74520007224055e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.492700059519848e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.802400038286578e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.5789000574150123e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.694100021471968e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.697900021710666e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.2352000087266788e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.3953999263758305e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.20310000461177e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_kth_digit",
              "complexity": 2,
              "line_start": 1,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.483599994069664e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.202099949499825e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 6.826900062151253e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "read_int_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "read_string",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "read_string_list",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.641699979401892e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.356299930601381e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.634999964357121e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.571699992084177e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.456300004880177e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.3955999495228752e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.0004999391385354e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.989700012927642e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.4197000382409897e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "size_of_group",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "find_group",
              "complexity": 1,
              "line_start": 4,
              "line_end": 8
            },
            {
              "name": "get_number",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "get_sequence_number",
              "complexity": 0,
              "line_start": 13,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.782099975069286e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "size_of_group",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "find_group_data",
              "complexity": 1,
              "line_start": 4,
              "line_end": 8
            },
            {
              "name": "get_sequence_number",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.104900042671943e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.7031999959726818e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.074500040791463e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.1350000679376535e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "solution",
              "complexity": 1,
              "line_start": 2,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.6980000257026404e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.2623000404564664e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "countDigit",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 6.516299981740303e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 6.336900059977779e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "totaller",
              "complexity": 1,
              "line_start": 3,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.769999941345304e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ADigitsSequenceEasyEdition::solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.1137999687634874e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.7249000090232585e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.8774000384146348e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.779199985525338e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "getnum",
              "complexity": 5,
              "line_start": 9,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.4503999561129604e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.3583999538677745e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.4588000340154395e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.878499981306959e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.5746999856201e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.6188999981968664e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.2533000446856022e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.0818999473704025e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.6938000195950735e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.903499989770353e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.833500027714763e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.659899994090665e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.65290006811847e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.8764000489900354e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 6.101500002841931e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.3114000214263797e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.9025000003457535e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.388499979133485e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.388400000403635e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.199999966658652e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.9505999918910675e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.5457999981881585e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.3695999768970069e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.3955999747850001e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_digit",
              "complexity": 1,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "find_digit",
              "complexity": 2,
              "line_start": 12,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.772000011143973e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.571000029798597e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.6512000001966953e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.778100017370889e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pow",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.2871999792405404e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.300099953979952e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.683899987867335e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "fmi",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "lsi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010932599980151281
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.8074000763590448e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.023799970629625e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.16390003010747e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.8464000277162995e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001412960000379826
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.594800000428222e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.937499994004611e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.6040999980759807e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.744100013136631e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.313300021545729e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "cnt_digit_order",
              "complexity": 2,
              "line_start": 5,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.484299981617369e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.4887000108719803e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "formula",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 4,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.1910000870993827e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solutions",
              "complexity": 3,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.750099949684227e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "prime_factors",
              "complexity": 4,
              "line_start": 53,
              "line_end": 64
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 1,
              "line_start": 67,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0001189439999507158
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 16,
              "line_end": 383
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 389,
              "line_end": 392
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 394,
              "line_end": 402
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 404,
              "line_end": 411
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 416,
              "line_end": 419
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 421,
              "line_end": 423
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 427,
              "line_end": 430
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 434,
              "line_end": 437
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.000424851000389026
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.4824999602278695e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 30,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 34,
              "line_end": 39
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 54,
              "line_end": 67
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 69,
              "line_end": 71
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0002227300001322874
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.187000038451515e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.418299977260176e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 23,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00011177999931533122
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "quadratic",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.168899977230467e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.261099936935352e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "scan",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "solution",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7262000003247522e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.255199953855481e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.5397999706910923e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.8462999580369797e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.8644999727257527e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.67520001923549e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.4868000107526314e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "validation",
              "complexity": 2,
              "line_start": 11,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.4053000237909146e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.827299977070652e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "estimate",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "dicho",
              "complexity": 3,
              "line_start": 9,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.8021999898774084e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.0357000468939077e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "binary",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 6.435100021917606e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "minPut",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "nCandies",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.1829999898036476e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "binary_search",
              "complexity": 6,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.6719000490847975e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.0559000404318795e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.638000023580389e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "find_gcd",
              "complexity": 1,
              "line_start": 21,
              "line_end": 24
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 27,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 36,
              "line_end": 54
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 58,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 9.029100056068273e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "maximum_candies_after_n_movies",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "solve1",
              "complexity": 1,
              "line_start": 5,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 18,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 6.949099952180404e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.428599964332534e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "valid",
              "complexity": 2,
              "line_start": 3,
              "line_end": 11
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.039500047132606e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.3474000045098364e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "candy_eaten",
              "complexity": 3,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.784100044867955e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.708100055315299e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.658900004666066e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.420700027665589e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sumTillN",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7162000151292887e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "isqrt",
              "complexity": 1,
              "line_start": 7,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.595899968582671e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "Read::int",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            },
            {
              "name": "Read::list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "Read::list_int",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "Read::calc",
              "complexity": 3,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.324100063968217e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.680799975176342e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.3043000257748645e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.311100019549485e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "binary",
              "complexity": 6,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.709899985755328e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7951999982178677e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "binarySearch",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.3703999179124366e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "AP_Term",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.5197000215703156e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.036700036318507e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gaosi",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "calc",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 12,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.391099966800539e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.852400029951241e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "cal",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.415399987716228e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.107900036207866e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "split_k",
              "complexity": 0,
              "line_start": 13,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.5858999833872076e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 6,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7041000066674314e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.190200029872358e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.6589999833959155e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.3282999791263137e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sol",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.4544999834906776e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.101900074398145e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "sportMafia",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.1720999939134344e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.785200013022404e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.6100999346235767e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "Solution2::solve",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "Solution::solve",
              "complexity": 1,
              "line_start": 18,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.628899958130205e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.270000019663712e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "wr",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "revn",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "dd",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "ddl",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "sieve",
              "complexity": 10,
              "line_start": 17,
              "line_end": 30
            },
            {
              "name": "divs",
              "complexity": 6,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "divn",
              "complexity": 5,
              "line_start": 40,
              "line_end": 49
            },
            {
              "name": "prime",
              "complexity": 6,
              "line_start": 50,
              "line_end": 56
            },
            {
              "name": "convn",
              "complexity": 1,
              "line_start": 57,
              "line_end": 62
            },
            {
              "name": "cdiv",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00018216399985249154
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "find",
              "complexity": 4,
              "line_start": 5,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.5126000259188004e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "wzor",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mafia",
              "complexity": 3,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.8643000152660534e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.583799960120814e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.892400061682565e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "inara",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "insr",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "possible",
              "complexity": 0,
              "line_start": 26,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.3160000788921025e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.036699945369037e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.073900031973608e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.3112999770091847e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 52,
              "line_end": 52
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 53,
              "line_end": 53
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "possible",
              "complexity": 0,
              "line_start": 62,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00020065900025656447
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "func",
              "complexity": 3,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.973500042775413e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "linput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.8903000131540466e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "inlist",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "instr",
              "complexity": 0,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "getReamin",
              "complexity": 0,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 44,
              "line_end": 62
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 78,
              "line_end": 86
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 88,
              "line_end": 95
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 97,
              "line_end": 100
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 104,
              "line_end": 110
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 114,
              "line_end": 114
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00023958200017659692
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 8.784600049693836e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "fn",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "search",
              "complexity": 4,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.1137999687634874e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.96249997720588e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "pe",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "JA",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "JAA",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "IF",
              "complexity": 1,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 29,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0001534590001028846
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 27,
              "line_end": 35
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 37,
              "line_end": 44
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 46,
              "line_end": 49
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 53,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0001368790008200449
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "ncr_util",
              "complexity": 2,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 15,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 7.08839997969335e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.099799960182281e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 32,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.3121000089740846e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.1701000150642358e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.768200010905275e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.430299941304838e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.581399975402746e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "convert_num",
              "complexity": 1,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "convert_alpha",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.221499956562184e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "decimal_to_26",
              "complexity": 3,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "RXCY_to_Excel",
              "complexity": 0,
              "line_start": 14,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012346299990895204
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "numtostr",
              "complexity": 3,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "strtonum",
              "complexity": 6,
              "line_start": 14,
              "line_end": 29
            },
            {
              "name": "method1",
              "complexity": 0,
              "line_start": 31,
              "line_end": 34
            },
            {
              "name": "method2",
              "complexity": 5,
              "line_start": 36,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00013349200071388623
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.515400061995024e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "letter_to_decimal",
              "complexity": 4,
              "line_start": 13,
              "line_end": 32
            },
            {
              "name": "letters_to_deci",
              "complexity": 1,
              "line_start": 35,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012696999965555733
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "parse",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.292899979598587e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "solution",
              "complexity": 21,
              "line_start": 1,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.032100024342071e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "solution",
              "complexity": 18,
              "line_start": 1,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.546100070816465e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.0086000808514655e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.214000000501983e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "prime",
              "complexity": 3,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "check",
              "complexity": 6,
              "line_start": 12,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 6.535299962706631e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.7983000109088607e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.7068000387516804e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.278199983469676e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.2963000194285996e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 22,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 8.300600075017428e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 6.219700026122155e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.300200023659272e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.2793000425735954e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "judge",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.9212999581650365e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.8974999875354115e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 8.466000508633442e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.270299955853261e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.584999972692458e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.8311999560391996e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.0196999432519078e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 1.211200014950009e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 2.241200036223745e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.263000028004171e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 2.4745999326114543e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "process",
              "complexity": 13,
              "line_start": 1,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.1045999498455785e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 2.4416000087512657e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 1.0630000360833947e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 1.0459999430167954e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "steps",
              "complexity": 11,
              "line_start": 11,
              "line_end": 24
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 27,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 7.840800026315264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "find_segment",
              "complexity": 9,
              "line_start": 4,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.34220000897767e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.5032999625836965e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 6.21170001977589e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.362199979368597e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.9044000004651025e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.854200076602865e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.332200023782207e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 6.401100017683348e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 2.6749999960884452e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "process",
              "complexity": 37,
              "line_start": 1,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002170389998354949
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 8.194400015781866e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "DisjointSet::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "DisjointSet::union",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            },
            {
              "name": "DisjointSet::get_father",
              "complexity": 1,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "DisjointSet::__repr__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 22,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014082500001677545
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 7.407900011457969e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 6,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 7.653400007257005e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 6.84790002196678e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "union",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 5.454299935081508e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "unionSet",
              "complexity": 2,
              "line_start": 7,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 8.466899998893496e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "makeSet",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 6.766699971194612e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.009100019990001e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.356199951871531e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.5647000004246365e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.067299975460628e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.104399992385879e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.660599956376245e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.703799979528412e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "ai",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ei",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ip",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "op",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.709599983878434e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.014200036792317e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.820199981419137e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.481599924270995e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.461300042952644e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.293500008614501e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.462700038246112e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7351999960956164e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 20,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.0694000239891466e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.026599981443724e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9266999515821226e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 3.888300034304848e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 5.0474999625294004e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 4.157799958193209e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 5.119700017530704e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 6.326899983832845e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 3.875299989886116e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 3.053799991903361e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 8,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 54,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 0.0001787270002751029
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 4.81610004499089e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.3914000596269034e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "chain_reaction",
              "complexity": 7,
              "line_start": 3,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.707500026299385e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "chain_reaction",
              "complexity": 10,
              "line_start": 3,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.33660003283876e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "chain_reaction",
              "complexity": 7,
              "line_start": 3,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.797699981892947e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.497399979503825e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.4736000088742e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.731099968717899e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.005600021628197e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.9481999414856546e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 3.860200013150461e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 5,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 6.990200017753523e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 3.236099928471958e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 9,
              "line_end": 58
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 60,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00019481700019241543
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 36,
        "raw_output": {
          "file_complexity": 90,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 26
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 37,
              "line_end": 43
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 45,
              "line_end": 55
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 57,
              "line_end": 74
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 76,
              "line_end": 93
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 95,
              "line_end": 123
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 125,
              "line_end": 150
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 152,
              "line_end": 178
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 180,
              "line_end": 186
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 188,
              "line_end": 193
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 195,
              "line_end": 200
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 202,
              "line_end": 205
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 207,
              "line_end": 210
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 212,
              "line_end": 214
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 216,
              "line_end": 218
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 220,
              "line_end": 223
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 225,
              "line_end": 228
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 230,
              "line_end": 236
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 242,
              "line_end": 244
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 246,
              "line_end": 248
            },
            {
              "name": "main",
              "complexity": 29,
              "line_start": 249,
              "line_end": 341
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 350
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 352,
              "line_end": 360
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 362,
              "line_end": 369
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 374,
              "line_end": 377
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 379,
              "line_end": 381
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 385,
              "line_end": 388
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 392,
              "line_end": 395
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0016038240000852966
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 5.5114000133471563e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 2.2763000742997974e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "gf",
              "complexity": 12,
              "line_start": 10,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.479799973632907e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 3.4996000067621935e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0903_F",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.359600062452955e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.1178999961412046e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.2985000466869678e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.7092999769374728e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.601999974809587e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.312400010850979e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.2573000276461244e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.8693999411188997e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.0358000256237574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.6592000065429602e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.385999535676092e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.130000317876693e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.294000170077197e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.2993999916943721e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.440699998056516e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.6991999473248143e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.793000466132071e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.0889999430219177e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.3419993239222094e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "process",
              "complexity": 13,
              "line_start": 2,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0909_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.914699967339402e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.971599951706594e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.779199985525338e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.8603999453480355e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "graph::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "graph::addedge",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "router",
              "complexity": 1,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "isleaf",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            },
            {
              "name": "christmas",
              "complexity": 10,
              "line_start": 27,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 8.543100011593197e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.3893999898282345e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_Spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.68390001312946e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.731000015250174e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.308300074422732e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.160899996146327e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "Combi::__init__",
              "complexity": 2,
              "line_start": 3,
              "line_end": 11
            },
            {
              "name": "Combi::com",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "Combi::perm",
              "complexity": 2,
              "line_start": 19,
              "line_end": 23
            },
            {
              "name": "bitcnt",
              "complexity": 1,
              "line_start": 26,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0001694189995760098
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 6.930000017746352e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 117,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 117,
          "functions": [
            {
              "name": "pi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pl",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ti",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ts",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            },
            {
              "name": "fast_mod_exp",
              "complexity": 3,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "inverseMod",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "ncr",
              "complexity": 3,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "D",
              "complexity": 73,
              "line_start": 46,
              "line_end": 82
            },
            {
              "name": "getCount",
              "complexity": 3,
              "line_start": 84,
              "line_end": 91
            },
            {
              "name": "C",
              "complexity": 34,
              "line_start": 93,
              "line_end": 123
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0004191900006844662
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "cntone",
              "complexity": 3,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00014666599963675253
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "cntone",
              "complexity": 3,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00012673899982473813
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "bit_count",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 13,
              "line_end": 50
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 56,
              "line_end": 60
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 61,
              "line_end": 69
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 70,
              "line_end": 77
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 78,
              "line_end": 81
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 89
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0002777740000965423
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "bit_count",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 13,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00012705000062851468
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "make_nCr_mod",
              "complexity": 2,
              "line_start": 6,
              "line_end": 19
            },
            {
              "name": "comb",
              "complexity": 4,
              "line_start": 23,
              "line_end": 34
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 35,
              "line_end": 45
            },
            {
              "name": "bit",
              "complexity": 18,
              "line_start": 47,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00016304800010402687
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "make_nCr_mod",
              "complexity": 8,
              "line_start": 7,
              "line_end": 30
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 33,
              "line_end": 43
            },
            {
              "name": "bit",
              "complexity": 18,
              "line_start": 46,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00014986200039857067
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.886299964506179e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016363900067517534
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.953100000828272e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.0425999941362534e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.446499977144413e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.9675999940081965e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.018599975097459e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.9535999601648655e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.5006999749166425e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.482699983374914e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.3214000066218432e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.890600015030941e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.7191000299353618e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.879600040410878e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 23,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "binarytodecimal",
              "complexity": 0,
              "line_start": 38,
              "line_end": 39
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 41,
              "line_end": 57
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 59,
              "line_end": 71
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 81,
              "line_end": 83
            },
            {
              "name": "getProduct",
              "complexity": 1,
              "line_start": 87,
              "line_end": 95
            },
            {
              "name": "dupconscount",
              "complexity": 5,
              "line_start": 98,
              "line_end": 113
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 116,
              "line_end": 117
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 121,
              "line_end": 122
            },
            {
              "name": "di",
              "complexity": 0,
              "line_start": 124,
              "line_end": 124
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 126,
              "line_end": 126
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 127,
              "line_end": 127
            },
            {
              "name": "indic",
              "complexity": 1,
              "line_start": 128,
              "line_end": 132
            }
          ]
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.0004353909998826566
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.3584000700793695e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.850500029831892e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.6281000171147753e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 3.38140007443144e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 5.505299941432895e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 5.020500066166278e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "val",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 4.129799981456017e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 1.6541000150027685e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 1.1641999662970193e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 3.493599979265127e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 5.5063999752746895e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 3.3862999771372415e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 8.680400060256943e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 66,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 0.0001700610000625602
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 5.962200066278456e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 2.0889000552415382e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 1.6520999452040996e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 1.6911999409785494e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 3.172900051140459e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 2.162100008717971e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 1.4977999853726942e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.5426999602350406e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.269200078648282e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.837100004806416e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.2079999982670415e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.523600025800988e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011076900045736693
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.969300061929971e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.511399922397686e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.0225000450154766e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2052000531402882e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_answer",
              "complexity": 3,
              "line_start": 2,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.5907999770424794e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5860000530665275e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.794399940990843e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.647100089030573e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.151100034097908e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4647000170953106e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.239199966425076e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "fastPrintNextLines",
              "complexity": 0,
              "line_start": 88,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002875520003726706
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.6560000151221175e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.5717999960761517e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2932999854674563e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9155999325448647e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.4544999834906776e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 23,
              "line_end": 40
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 42,
              "line_end": 47
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 61
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 77,
              "line_end": 90
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 91,
              "line_end": 97
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 102,
              "line_end": 111
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 112,
              "line_end": 113
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 132,
              "line_end": 142
            }
          ]
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0003966069998568855
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 23,
              "line_end": 40
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 42,
              "line_end": 47
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 61
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 77,
              "line_end": 90
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 91,
              "line_end": 97
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 102,
              "line_end": 111
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 112,
              "line_end": 113
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 132,
              "line_end": 142
            }
          ]
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0003581450000638142
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.1829999898036476e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 23,
              "line_end": 40
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 42,
              "line_end": 47
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 61
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 77,
              "line_end": 90
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 91,
              "line_end": 97
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 102,
              "line_end": 111
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 112,
              "line_end": 113
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 132,
              "line_end": 142
            }
          ]
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00034403799963911297
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.485400015459163e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.053499964764342e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.0755000049539376e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1982000362186227e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.616799924406223e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.647799960366683e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.296799958567135e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.5819000256888103e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.32629997501499e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 149,
        "functions_count": 60,
        "raw_output": {
          "file_complexity": 149,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            },
            {
              "name": "TrieNode::__init__",
              "complexity": 0,
              "line_start": 557,
              "line_end": 559
            },
            {
              "name": "Trie::__init__",
              "complexity": 0,
              "line_start": 561,
              "line_end": 562
            },
            {
              "name": "Trie::getNode",
              "complexity": 0,
              "line_start": 563,
              "line_end": 564
            },
            {
              "name": "Trie::_charToIndex",
              "complexity": 0,
              "line_start": 565,
              "line_end": 566
            },
            {
              "name": "Trie::insert",
              "complexity": 4,
              "line_start": 567,
              "line_end": 575
            },
            {
              "name": "Trie::search",
              "complexity": 5,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 587,
              "line_end": 591
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 0,
              "line_start": 593,
              "line_end": 594
            },
            {
              "name": "BinaryTrie::insert",
              "complexity": 14,
              "line_start": 595,
              "line_end": 609
            },
            {
              "name": "BinaryTrie::query",
              "complexity": 12,
              "line_start": 610,
              "line_end": 625
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 0.004415224999320344
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 8.263600011559902e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 7.481099964934401e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "Ro",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 6.816800032538595e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 16,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 9.416699958819663e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 3.387400010979036e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 17,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 6.817899975430919e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 9,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 6.0723999922629446e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 4.254999930708436e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1750999621872324e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9285999769635964e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.0278999980073422e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.098099983209977e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2282000827544834e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4386999282578472e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.0409999958937988e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.774300017132191e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.1161000657011755e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "substring",
              "complexity": 7,
              "line_start": 7,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 2.9595000341942068e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 1.8325000382901635e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 2.5327999537694268e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 1.3885999578633346e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 0.0002196650002588285
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 2.4556000425945967e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 2.4194999241444748e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.263100006734021e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 9.95900063571753e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "optimal_score",
              "complexity": 9,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.609300064359559e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0001022830001602415
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00011184100003447384
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "v",
              "complexity": 1,
              "line_start": 13,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 9.964800028683385e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.209499992517522e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.6155000240542e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.94020002608886e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "ct",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.80089997331379e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "solve",
              "complexity": 26,
              "line_start": 3,
              "line_end": 29
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 31,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 9.331599994766293e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 7.906900009402307e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 62,
        "functions_count": 18,
        "raw_output": {
          "file_complexity": 62,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 27,
              "line_end": 38
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 39,
              "line_end": 49
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 59,
              "line_end": 64
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 67,
              "line_end": 71
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 76,
              "line_end": 77
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 78,
              "line_end": 79
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 83,
              "line_end": 102
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 103,
              "line_end": 109
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 111,
              "line_end": 114
            },
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 125,
              "line_end": 154
            }
          ]
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.0004579030000968487
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.120499983808259e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.215800047153607e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.732900015369523e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "solution",
              "complexity": 17,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.864000013389159e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.24980002612574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.823900002927985e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 9.088099977816455e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.4807999832555652e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.8636000277183484e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "palin",
              "complexity": 2,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.9947999135183636e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "palindrome",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.556699994078372e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.787300036288798e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "is_pal",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.909500017267419e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.518800010875566e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.4016000022820663e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.618999976926716e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "bfs",
              "complexity": 17,
              "line_start": 5,
              "line_end": 28
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 31,
              "line_end": 48
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 51,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.00022773000000597676
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 7.33580000087386e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 5,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 42,
              "line_end": 50
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.000273286000265216
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 5,
              "line_end": 24
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 30,
              "line_end": 34
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 36,
              "line_end": 44
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 46,
              "line_end": 53
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 55,
              "line_end": 58
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.00021068800015200395
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 5,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 31,
              "line_end": 35
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 47,
              "line_end": 54
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.0001955480001925025
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 48,
              "line_end": 49
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 61,
              "line_end": 70
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 72,
              "line_end": 74
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 76,
              "line_end": 81
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 83,
              "line_end": 94
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 96,
              "line_end": 109
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 111,
              "line_end": 113
            },
            {
              "name": "deep",
              "complexity": 4,
              "line_start": 131,
              "line_end": 137
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.0005180770003789803
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 8.101299954432761e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 48,
              "line_end": 49
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 61,
              "line_end": 70
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 72,
              "line_end": 74
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 76,
              "line_end": 81
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 83,
              "line_end": 94
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 96,
              "line_end": 109
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 111,
              "line_end": 113
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.00041912000051524956
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 4,
              "line_end": 23
            },
            {
              "name": "tnnDecompositionFrom",
              "complexity": 0,
              "line_start": 26,
              "line_end": 28
            },
            {
              "name": "decompositionFrom",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 8.736499967199052e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5618000108806882e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.49599928187672e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5027000447153114e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4366999494086485e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 51,
              "line_end": 64
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 65,
              "line_end": 72
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00019671100017149001
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4926999685703777e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.658100063650636e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0068999472423457e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.846000127959996e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.161800072528422e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.9842999689863063e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "fun",
              "complexity": 7,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.005300019751303e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.813999996462371e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "num",
              "complexity": 5,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "f",
              "complexity": 9,
              "line_start": 15,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.020199973339913e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "num",
              "complexity": 5,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "f",
              "complexity": 6,
              "line_start": 15,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.288900047162315e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.9094000385375693e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.407500025787158e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.213099989807233e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.6652000340400264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.1270999493717682e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.446799979021307e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.072800063819159e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.3003999811189715e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.1662000360956881e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.098000191443134e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.4926999685703777e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.820499983296031e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.762100004678359e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.688799981522607e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.8853999538114294e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.6851000257011037e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.0578000405512284e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.0706000618229154e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 1.845499991759425e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.3104000320017803e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.009799936786294e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 45,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010247299996990478
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.845699994708411e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001243839997187024
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.896200036659138e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 69,
              "line_end": 79
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 87,
              "line_end": 93
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 96
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 98,
              "line_end": 115
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 117,
              "line_end": 118
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 131
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 133,
              "line_end": 134
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 136,
              "line_end": 137
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 139,
              "line_end": 145
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 147,
              "line_end": 148
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 150,
              "line_end": 167
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 169,
              "line_end": 170
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 174,
              "line_end": 178
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 180,
              "line_end": 194
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 196,
              "line_end": 210
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 212,
              "line_end": 227
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 235,
              "line_end": 240
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 246,
              "line_end": 261
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00112281699966843
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.056200022110716e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002519149993531755
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00023378999958367785
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002298239996889606
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.1648999285825994e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.5520000488322694e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.8945999727293383e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.9356999473529868e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.332200023782207e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.6510999557795003e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.7553000361658633e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.422400004637893e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 27,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 87
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 88,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002828130000125384
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.8632000471116044e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.317000068316702e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.166700066183694e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 9.471899920754367e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.0444999942556024e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "testcase",
              "complexity": 11,
              "line_start": 7,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.170499975472922e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.375899986072909e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.628200066596037e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.755599926895229e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.3742999878304545e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.754000019602245e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.309599979838822e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.838000015501166e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.0096000045887195e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 6,
              "line_start": 16,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001051580002240371
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.8311999560391996e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 30,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 61
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00030381299984583165
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.19490006606793e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 3,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.757400039234199e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1202000678167678e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.4575999961816706e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.019599964522058e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.037600047013257e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 7,
              "line_start": 15,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011866400018334389
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.078800000366755e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1460000425577164e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3976999980513938e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 4.621700009010965e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 9.628099996916717e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 4.310199983592611e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 2.153999957954511e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 4.83109997730935e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 4.137799987802282e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "ceill",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "run",
              "complexity": 1,
              "line_start": 75,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 0.00016015200071706204
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ceill",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 19,
              "line_end": 30
            },
            {
              "name": "run",
              "complexity": 1,
              "line_start": 80,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 0.00017084199953387724
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 18,
              "line_end": 20
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 26,
              "line_end": 53
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 62,
              "line_end": 66
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 68,
              "line_end": 76
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 78,
              "line_end": 85
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 87,
              "line_end": 90
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 94,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003829520001090714
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.869899971206905e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.747000027942704e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.210200000263285e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.6518999877444e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.593599962594453e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.187799979466945e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.415199939307058e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.231000002619112e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 3,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.633500015595928e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011753200033126632
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.922400082956301e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.97830003243871e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.792600056040101e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 61,
              "line_end": 70
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 71,
              "line_end": 82
            },
            {
              "name": "factors",
              "complexity": 5,
              "line_start": 83,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.000445689999651222
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.6908000513212755e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 7.315800030482933e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solver::__call__",
              "complexity": 3,
              "line_start": 19,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011126000026706606
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "outIn",
              "complexity": 0,
              "line_start": 16,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 19,
              "line_end": 77
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 86
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 88,
              "line_end": 96
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 98,
              "line_end": 105
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 110,
              "line_end": 113
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 115,
              "line_end": 117
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 121,
              "line_end": 124
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 128,
              "line_end": 131
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0005935100007263827
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solver::__call__",
              "complexity": 6,
              "line_start": 19,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00014321999969979515
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 8.1883999882848e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 0.0001142249993790756
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00011849299971800065
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "lli",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "ins",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00017943900002137525
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 6.46819999019499e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 4.956300017511239e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "readmap",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "readlist",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 0.0001102779997381731
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 6.231800034584012e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00037524799972743494
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 8.641299973533023e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "some_random_function",
              "complexity": 0,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "some_random_function5",
              "complexity": 0,
              "line_start": 14,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 28,
              "line_end": 43
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 49,
              "line_end": 53
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 54,
              "line_end": 62
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 76,
              "line_end": 82
            },
            {
              "name": "some_random_function1",
              "complexity": 0,
              "line_start": 86,
              "line_end": 95
            },
            {
              "name": "some_random_function2",
              "complexity": 0,
              "line_start": 97,
              "line_end": 106
            },
            {
              "name": "some_random_function3",
              "complexity": 0,
              "line_start": 108,
              "line_end": 117
            },
            {
              "name": "some_random_function4",
              "complexity": 0,
              "line_start": 119,
              "line_end": 128
            },
            {
              "name": "some_random_function6",
              "complexity": 0,
              "line_start": 130,
              "line_end": 139
            },
            {
              "name": "some_random_function7",
              "complexity": 0,
              "line_start": 141,
              "line_end": 150
            },
            {
              "name": "some_random_function8",
              "complexity": 0,
              "line_start": 152,
              "line_end": 161
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0007703720002609771
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solver::__call__",
              "complexity": 2,
              "line_start": 19,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 8.969999998953426e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 108,
        "functions_count": 35,
        "raw_output": {
          "file_complexity": 108,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 71,
              "line_end": 81
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 87
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 89,
              "line_end": 95
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 97,
              "line_end": 98
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 100,
              "line_end": 117
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 119,
              "line_end": 120
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 123,
              "line_end": 133
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 135,
              "line_end": 136
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 138,
              "line_end": 139
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 141,
              "line_end": 147
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 152,
              "line_end": 169
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 171,
              "line_end": 172
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 176,
              "line_end": 180
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 182,
              "line_end": 196
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 198,
              "line_end": 212
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 214,
              "line_end": 229
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 233,
              "line_end": 235
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 237,
              "line_end": 242
            },
            {
              "name": "LazySegTree::__init__",
              "complexity": 54,
              "line_start": 248,
              "line_end": 354
            },
            {
              "name": "makeNode",
              "complexity": 0,
              "line_start": 360,
              "line_end": 362
            },
            {
              "name": "getTotal",
              "complexity": 0,
              "line_start": 365,
              "line_end": 366
            },
            {
              "name": "getCount",
              "complexity": 0,
              "line_start": 369,
              "line_end": 370
            },
            {
              "name": "nodeOp",
              "complexity": 0,
              "line_start": 376,
              "line_end": 381
            },
            {
              "name": "mapping",
              "complexity": 1,
              "line_start": 387,
              "line_end": 392
            },
            {
              "name": "composition",
              "complexity": 1,
              "line_start": 395,
              "line_end": 397
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 401,
              "line_end": 411
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 413,
              "line_end": 425
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 427,
              "line_end": 439
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0028265189994272077
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.7547999858797994e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.476399928738829e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.9535999601648655e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.542700051184511e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.538300021929899e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 17,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.782699958625017e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 16,
              "line_end": 29
            },
            {
              "name": "binary_search",
              "complexity": 2,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.524200009356719e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 16,
              "line_end": 29
            },
            {
              "name": "binary_search",
              "complexity": 2,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.733700047334423e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 49,
              "line_end": 55
            },
            {
              "name": "get_int",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "get_int_grid",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "get_str",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "yes_no",
              "complexity": 1,
              "line_start": 78,
              "line_end": 82
            },
            {
              "name": "prefix_sums",
              "complexity": 1,
              "line_start": 85,
              "line_end": 89
            },
            {
              "name": "binary_search",
              "complexity": 6,
              "line_start": 92,
              "line_end": 106
            },
            {
              "name": "solve_a",
              "complexity": 5,
              "line_start": 109,
              "line_end": 125
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.0003220879998480086
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.771999920194503e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "test",
              "complexity": 5,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.134599971119314e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00011018799978046445
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.033599998365389e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "tonny",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.8080999729572795e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "inlt",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "insr",
              "complexity": 0,
              "line_start": 7,
              "line_end": 9
            },
            {
              "name": "cint",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "find_min_weight",
              "complexity": 11,
              "line_start": 14,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.310799992410466e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.113899947493337e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6449999495525844e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.2312000510282815e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 30,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 61
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002483590005795122
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.0425999941362534e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6109999453183264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.2642000405758154e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.2982000195479486e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.420299956109375e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.520199960708851e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.232799958321266e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.771000021719374e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 24,
              "line_start": 16,
              "line_end": 391
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 397,
              "line_end": 400
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 402,
              "line_end": 410
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 412,
              "line_end": 419
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 424,
              "line_end": 427
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 429,
              "line_end": 431
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 435,
              "line_end": 438
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 442,
              "line_end": 445
            }
          ]
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00047241100037354045
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.819999958272092e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.197600007202709e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.9894999645184726e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8615000044519547e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.454100068571279e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.231000027881237e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.4034000236715656e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.7599999814119656e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.0377999792108312e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8903999918838963e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.7230000089039095e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8823999855376314e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 15,
              "line_end": 353
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 359,
              "line_end": 362
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 364,
              "line_end": 372
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 374,
              "line_end": 381
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 386,
              "line_end": 389
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 391,
              "line_end": 393
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 397,
              "line_end": 400
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 404,
              "line_end": 407
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 0.0008021520006877836
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 5.5775999499019235e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 2.7351999960956164e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 2.7641999622574076e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "getx",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "getans",
              "complexity": 1,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 6.961200051591732e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "solver::__call__",
              "complexity": 4,
              "line_start": 20,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013970299914944917
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 5.5483999858552124e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "inp1",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "inp2",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "inp3",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 9.286500062444247e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 4.069600072398316e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 0.00013498400039679836
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 8.877799973561196e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 0.00014216799991118023
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 9.262500043405453e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 8.842699935485143e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 6.544299958477495e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 0.0005635830002574949
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 6.840900005045114e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 8.058200000959914e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.629699990095105e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.527600049186731e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 1.4777000615140423e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 30,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 61
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00023240799964696635
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 35,
              "line_end": 40
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 55,
              "line_end": 68
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 84,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00025790699965000385
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 35,
              "line_end": 40
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 55,
              "line_end": 68
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 84,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00023877999956312124
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00038899300034245243
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.000380307999876095
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.545499996311264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 34,
              "line_start": 15,
              "line_end": 375
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 381,
              "line_end": 384
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 386,
              "line_end": 394
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 396,
              "line_end": 403
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 408,
              "line_end": 411
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 413,
              "line_end": 415
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 419,
              "line_end": 422
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 426,
              "line_end": 429
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.0009223489996657008
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.511199990200112e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.0003994230000898824
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.827999939356232e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.401100017683348e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.690699981641956e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.743599962850567e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 34,
              "line_end": 45
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 50,
              "line_end": 60
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 65,
              "line_end": 73
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00036159200044494355
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001018819993987563
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 8.235499990405515e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00014649600052507594
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 10,
              "line_end": 16
            },
            {
              "name": "ind",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 19,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00019746300040424103
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 10,
              "line_end": 16
            },
            {
              "name": "ind",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 19,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00018211399947176687
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 65,
              "line_end": 82
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 84,
              "line_end": 89
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 91,
              "line_end": 103
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 106,
              "line_end": 116
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 119,
              "line_end": 132
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 133,
              "line_end": 139
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 144,
              "line_end": 153
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 154,
              "line_end": 155
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 156,
              "line_end": 159
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 160,
              "line_end": 161
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 162,
              "line_end": 163
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 176,
              "line_end": 213
            }
          ]
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0013440749999062973
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 9.399700047652004e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00010678200032998575
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 9.974800013878848e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 6.715700055792695e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 15,
              "line_end": 357
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 363,
              "line_end": 366
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 368,
              "line_end": 376
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 378,
              "line_end": 385
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 390,
              "line_end": 393
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 395,
              "line_end": 397
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 401,
              "line_end": 404
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 408,
              "line_end": 411
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0010442689999763388
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 8,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003073190000577597
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.00017611200019018725
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.00016938899989327183
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "intersection",
              "complexity": 2,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 15,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015079400054673897
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 6.531300005008234e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "intersec",
              "complexity": 1,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010175199986406369
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 34,
              "line_end": 45
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 50,
              "line_end": 60
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 65,
              "line_end": 73
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 100,
              "line_end": 117
            },
            {
              "name": "inte",
              "complexity": 0,
              "line_start": 120,
              "line_end": 124
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0006282939993980108
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 18,
              "line_end": 20
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 26,
              "line_end": 54
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 63,
              "line_end": 67
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 69,
              "line_end": 77
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 79,
              "line_end": 86
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 101
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0004825199994229479
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "bfs",
              "complexity": 16,
              "line_start": 6,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 0.00015889000042079715
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012310200054344023
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 0.000197731999833195
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001389620001646108
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "get_new_edges",
              "complexity": 25,
              "line_start": 4,
              "line_end": 43
            },
            {
              "name": "read_int_line",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001706809998722747
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 140,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 140,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            }
          ]
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0026668689997677575
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 77,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 77,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00020994599981349893
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0001747999995131977
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00037921500006632414
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00015490199984924402
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 61,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0002879329995266744
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00037649000023520784
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00036108099993725773
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "get_fingering",
              "complexity": 18,
              "line_start": 2,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00016203499944822397
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "move",
              "complexity": 8,
              "line_start": 15,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 9.319499986304436e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "get",
              "complexity": 19,
              "line_start": 5,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 0.0001567859999340726
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 8.816600075078895e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "wins",
              "complexity": 9,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 7.342800017795525e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "nextline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "types",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "strs",
              "complexity": 1,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 17,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 0.00013893199957237812
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.802899977425113e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 8.76260000950424e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 5.883100038772682e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 8.14929999251035e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 7.625400030519813e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 6.873999973322498e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 7.286700019903947e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 4.930300019623246e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 9.488900013820967e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 7.407999964925693e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.5454000175814144e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.139500030461932e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "removeUsed",
              "complexity": 4,
              "line_start": 3,
              "line_end": 8
            },
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 10,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 0.00012305200016271556
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 0.00011564799933694303
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.665500015718862e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.6766999477986246e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.617599981633248e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 8.875799994711997e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 0.00012563699965539854
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.733999983523972e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.338100006862078e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.641900002548937e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.8434000341803767e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.1107000470219646e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.9908000467694364e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.44320000699372e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.879400082951179e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.0156999855535105e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.578000026522204e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.3140000090934336e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001361069998893072
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 4,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 28,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010419599948363611
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.011999918584479e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.573399969056481e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.035599977214588e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00022784900011174614
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.21799995820038e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.50459995388519e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.112800004601013e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.7050999960920308e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.975799932552036e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.158999970764853e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1209999431448523e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3935000172059517e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.793299972836394e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.353300053277053e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            }
          ]
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0016285200008496759
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.216700057848357e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.28179996056133e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.077199981926242e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "huy",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00014466299944615457
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "add",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.456900013698032e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.934399956051493e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.778100017370889e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.5777000195812434e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "get_array",
              "complexity": 1,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "read_num",
              "complexity": 1,
              "line_start": 28,
              "line_end": 33
            },
            {
              "name": "read_num_list",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 70,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.0002534579998609843
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.0001783660000000964
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 4.440399970917497e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 4.7679999624961056e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "get_lc",
              "complexity": 7,
              "line_start": 10,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 5.0736000048345886e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.4034000236715656e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.7370999962149654e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 2.236300042568473e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "Node::__str__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 8.903800062398659e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.174500024120789e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.770100011024624e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 2,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.959399964514887e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.069699934916571e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fun",
              "complexity": 5,
              "line_start": 4,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.153700021764962e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.968500004702946e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.8804999854182824e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1101000382041093e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.3760005509248e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0861000191653147e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "init_input",
              "complexity": 0,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.385099914041348e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "add",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "sub",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "qpow",
              "complexity": 3,
              "line_start": 22,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.307600000989623e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "count",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.434300080902176e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.230699975480093e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.389200032368535e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.600500026048394e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 6,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.055200032686116e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.714900023827795e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.300899985944852e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.464200032496592e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "score",
              "complexity": 4,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.497499958233675e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.90760001714807e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4928000382496975e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1451000318629667e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5900000107649248e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0510000720387325e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9095999959972687e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6011000298021827e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 67,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013080600001558196
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.877300059684785e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.714099991862895e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.162699992273701e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.5487999664619565e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.4106000637402758e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 1.9916999917768408e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 9.568000677973032e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 1.1672000255202875e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 1.3064000086160377e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.178800074645551e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.356300021550851e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0297000193968415e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8252999982214533e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.308299983473262e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 2,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.714000013133045e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.292200017313007e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7091000447398983e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.247099994041491e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.383299983601319e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.797900005039992e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.376699927088339e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.101200000965036e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 1,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 24,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.809899969084654e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.93929992444464e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.8099999730766285e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.765999983646907e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.6096999540168326e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.202800002734875e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "get_max",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.337799979723059e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 4,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.675500000914326e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.983199935144512e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "A",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.128700013301568e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.623500030400464e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mypw2",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "sol",
              "complexity": 4,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.8030000218423083e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.864699975674739e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.651500007137656e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.942899992485764e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010437700075272005
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 2,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.600199998909375e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011170099969604053
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.379800055990927e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.567099939682521e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.131500024115667e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.95509997967747e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011078900024585892
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.1027000406757e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 6,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 48,
              "line_end": 55
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 61,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002006189997700858
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.0385000577080064e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.0297999981266912e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.4897000002965797e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.2189000598446e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.9754999306751415e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.1276999581896234e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "sawC",
              "complexity": 4,
              "line_start": 12,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.771600030537229e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "get_plots",
              "complexity": 2,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 14,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 7.915900005173171e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.671899958135327e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.2372000785253476e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.9745000322000124e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.717099960136693e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 1.5509999684582e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.0727999728696886e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.6871000045503024e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.0428999960131478e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 9.317600051872432e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 8.603300011600368e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "read",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 15,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 9.933799992722925e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "read",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 15,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 8.843600062391488e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 7.95599999037222e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 5.462299941427773e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.188900038570864e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.488500078674406e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.087800087087089e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5037000341399107e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0698999833257403e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0708999727503397e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8273999558005016e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 10,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.10980001106509e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.606999987619929e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 9.928700001182733e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.212100000382634e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.802100011147559e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.3493000046291854e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.27310005761683e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.240099977119826e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.0906999856815673e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.313699981954414e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.791100061789621e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "clc",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00010615000064717606
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "f",
              "complexity": 2,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00019295399943075608
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "ok",
              "complexity": 1,
              "line_start": 7,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 9.555999986332608e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 18
            },
            {
              "name": "out_of_solution_bounds",
              "complexity": 1,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "find_optimal_b",
              "complexity": 3,
              "line_start": 23,
              "line_end": 33
            },
            {
              "name": "get_min_H_given_b",
              "complexity": 1,
              "line_start": 35,
              "line_end": 39
            },
            {
              "name": "fast_find_optimal_height_distribution",
              "complexity": 7,
              "line_start": 41,
              "line_end": 65
            },
            {
              "name": "uniform_height_distribution",
              "complexity": 1,
              "line_start": 67,
              "line_end": 76
            },
            {
              "name": "locally_increase_H",
              "complexity": 10,
              "line_start": 78,
              "line_end": 94
            },
            {
              "name": "build_tree",
              "complexity": 3,
              "line_start": 96,
              "line_end": 108
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.0003164059999107849
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "good",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00016566199974477058
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.1822000487882178e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.4326000129804015e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "nn",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "lm",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.80020001102821e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.072000006592134e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.5558999621134717e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.811499987525167e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "read_nums",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.8733999897667672e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.555900053062942e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.043899985437747e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3425000361166894e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "go",
              "complexity": 3,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8103999536833726e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.03239996053162e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7022000065480825e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3204999959270936e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8435000129102264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6491000678797718e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2774999959219713e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1511000593600329e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5028999769128859e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 1,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.637500064243795e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.566800048953155e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4106000637402758e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3364000298897736e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3996999769005924e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.479700015101116e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.073900031973608e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3545000001613516e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.6127999919699505e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.331599994766293e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "second_largest",
              "complexity": 7,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.494199988082983e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.779200051212683e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "getint",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "getints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.3450999985216185e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 0.0002347230001760181
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.292299996042857e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.8182999812997878e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "log",
              "complexity": 1,
              "line_start": 4,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.4195999685616698e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.9737999537028372e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.3424999451672193e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.2113000593672041e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.584999972692458e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.678100034041563e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.6797999857517425e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 25,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.723799949919339e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.170900047029136e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.081699989910703e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 3.9665000258537475e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.021599943371257e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "count",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.229900034464663e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "count",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.928100017627003e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.941200015513459e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.58500027586706e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.221000148798339e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3313999918173067e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7923000086739194e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.824999556760304e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1310999980196357e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.564000043203123e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.977000106824562e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 16,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::_fill",
              "complexity": 0,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 55
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 1,
              "line_start": 64,
              "line_end": 76
            },
            {
              "name": "get_array",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 88,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00017559100069775013
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.268999964551767e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.075699962413637e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.3595000129716936e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.476499932730803e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.2961999750114046e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.278199983469676e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.6308999622415286e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.47369998760405e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.1179999748710543e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.190800038690213e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.645700002787635e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.651700030284701e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "lmi",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 7.899899992480641e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 28,
              "line_end": 30
            },
            {
              "name": "ain",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "sin",
              "complexity": 0,
              "line_start": 33,
              "line_end": 34
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "isprime",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00017483999999967637
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 7.670499962841859e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.446199975267518e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.3621000006387476e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.276100025890628e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.081800059590023e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 2.8684000426437706e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.5727000067709014e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 7.306799943762599e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 2.7781999961007386e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.115899926342536e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 2.672099981282372e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 2.5098000151047017e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "func",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010283399933541659
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "main",
              "complexity": 13,
              "line_start": 8,
              "line_end": 40
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 54,
              "line_end": 58
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 60,
              "line_end": 68
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 70,
              "line_end": 77
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 79,
              "line_end": 82
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.00020721100008813664
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.905300011159852e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.818900055804988e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "rl",
              "complexity": 1,
              "line_start": 6,
              "line_end": 10
            },
            {
              "name": "srl",
              "complexity": 1,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 18,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.143499988160329e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.311100019549485e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.4313999751466326e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 3.9264000406546984e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "is_winning_state",
              "complexity": 12,
              "line_start": 4,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 23,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.665599994448712e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "check",
              "complexity": 11,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.765000085171778e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "JUDGE",
              "complexity": 14,
              "line_start": 8,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 9.805500030779513e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "JUDGE",
              "complexity": 14,
              "line_start": 6,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 9.523999960947549e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "sum_range",
              "complexity": 2,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010447699969517998
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "win1",
              "complexity": 6,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "win2",
              "complexity": 5,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011827299931610469
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010436699994897936
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.146799983573146e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.898399998230161e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010051999925053678
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012921400048071519
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 2,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.417999950121157e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "func",
              "complexity": 0,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.147600015538046e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.563500053540338e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.322599998995429e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.211999955965439e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.5256999833800364e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.807300006679725e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.6588999137165956e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.056800051126629e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.7883000257133972e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.0587999390263576e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.9214000025822315e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8823999855376314e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.48950004283688e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.0415000259818044e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.45139994553756e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.287100000510691e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.00011954599995078752
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.014500038669212e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 16,
              "line_start": 1,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.786799986002734e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7220999982091598e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.2323000191827305e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.3044999832345638e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.6621000213490333e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.3636000403494108e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "dinput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "tinput",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "rt",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 2,
              "line_start": 18,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.446399998414563e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.8384000213700347e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.4055999599804636e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.3761000344820786e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.948399989894824e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.6787000175972935e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.238900055497652e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "matches",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.279800047399476e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.941200015513459e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 79,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 79,
          "functions": [
            {
              "name": "ri",
              "complexity": 1,
              "line_start": 15,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001405950006301282
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.225400026480202e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017054199997801334
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.618699949787697e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.5975999202928506e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0005765169998994679
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00014981300046201795
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 6.0092999774497e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.938199956290191e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "main",
              "complexity": 51,
              "line_start": 1,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011591800011956366
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.502400017576292e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.8082000173744746e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 3.541699970810441e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.7271000362816267e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 1,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.4034999771392904e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.398300006869249e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.5476999983075075e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.825400067900773e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.6980000004405156e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.7922999834117945e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.6730999707069714e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.2511999961570837e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.9635000575799495e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "good",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "check",
              "complexity": 4,
              "line_start": 7,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.6396999752905685e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.3182000152010005e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.6327999623608775e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6779999643622432e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.709099953790428e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.32639995374484e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "crear_intervalo",
              "complexity": 0,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "calcular_posibles_posiciones",
              "complexity": 1,
              "line_start": 8,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.853100017498946e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.23309996019816e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.0055000428983476e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.9545999495894648e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6369999432063196e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.3071999496314675e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.8774000384146348e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "read_houses",
              "complexity": 1,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.0858000172884203e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.8259999605070334e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.8092999855289236e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.670199981163023e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.8965000890602823e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.7872999706014525e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.3816000318911392e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 15
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00015374000031442847
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.0057999790878966e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.4666999959445093e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.5810000149940606e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.2414000593707897e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.2784000318788458e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.0720000318542589e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.751200008788146e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.1751000531367026e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.6551000044273678e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "secondorder",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.278299962199526e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.7573999684827868e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.5847999495454133e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.5208000149868894e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.1811999684141483e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "replace",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6610000531945843e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.9176000023435336e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.5759999769215938e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 30,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.60720001583104e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.8353999621467665e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0648999452532735e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.764600013615564e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.5067000024137087e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.5919999896141235e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.039800074271625e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.924600019265199e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.3605999811261427e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 27,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 16,
              "line_end": 18
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 40,
              "line_end": 41
            },
            {
              "name": "binarytodecimal",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 46,
              "line_end": 62
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 64,
              "line_end": 76
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 78,
              "line_end": 85
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 86,
              "line_end": 88
            },
            {
              "name": "getProduct",
              "complexity": 1,
              "line_start": 92,
              "line_end": 100
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 104,
              "line_end": 106
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 108,
              "line_end": 109
            },
            {
              "name": "checkisap",
              "complexity": 3,
              "line_start": 111,
              "line_end": 117
            },
            {
              "name": "primes_method5",
              "complexity": 6,
              "line_start": 120,
              "line_end": 128
            },
            {
              "name": "getSum",
              "complexity": 0,
              "line_start": 130,
              "line_end": 134
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 139,
              "line_end": 140
            },
            {
              "name": "di",
              "complexity": 0,
              "line_start": 142,
              "line_end": 142
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 143,
              "line_end": 143
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 144,
              "line_end": 144
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 145,
              "line_end": 145
            },
            {
              "name": "indict",
              "complexity": 1,
              "line_start": 146,
              "line_end": 150
            },
            {
              "name": "frqdict",
              "complexity": 3,
              "line_start": 151,
              "line_end": 159
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00047174900009849807
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0557999960146844e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.301700017909752e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.330199979245663e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0959999346814584e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "ballbuster5000",
              "complexity": 3,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.4094999389490113e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.712199991743546e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.6350999430869706e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8333999832975678e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.5278999853762798e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.536900072096614e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.4435999876004644e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.726299979054602e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.1490000108315144e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.77620001725154e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.201100025762571e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "sum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.2409999878145754e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.3847000445821323e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.4376000510528684e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.687199983280152e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.1471000763995107e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.5718999748060014e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.482700008637039e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.4387000192073174e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.3145000593794975e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.9195999811927322e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 8,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.570600049191853e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.046699996251846e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.8074000763590448e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "valid",
              "complexity": 1,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "div",
              "complexity": 7,
              "line_start": 49,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 63,
              "line_end": 74
            },
            {
              "name": "s",
              "complexity": 1,
              "line_start": 76,
              "line_end": 82
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 86,
              "line_end": 102
            }
          ]
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00021468499926413642
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "valid",
              "complexity": 1,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "div",
              "complexity": 7,
              "line_start": 49,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 63,
              "line_end": 74
            },
            {
              "name": "s",
              "complexity": 1,
              "line_start": 76,
              "line_end": 82
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 86,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00018591100069897948
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.9736000215052627e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7701999897544738e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.732300006551668e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.282200032117544e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.6077999538974836e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.065900025627343e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7001999367494136e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.808100038644625e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.6378000004333444e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.887500002339948e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.196999599225819e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.1871000171813648e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.33800038183108e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.160200008598622e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.1922999874514062e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.389600038237404e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.5457999981881585e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.239300036104396e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.216999387717806e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 8.615999831818044e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 8.895999599189963e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.3565999324782752e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.1011000424332451e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.67520001923549e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.740300012897933e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.253200000268407e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.6881000192370266e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.820199981419137e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "power",
              "complexity": 4,
              "line_start": 12,
              "line_end": 22
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 30,
              "line_end": 34
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 41,
              "line_end": 42
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 44,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001136839991886518
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.9606000680360012e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.0207000236259773e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7112000023189466e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.5018999874882866e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.997700019273907e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.091999976983061e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.576999966346193e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.780399998096982e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "Sort",
              "complexity": 5,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.348100057744887e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7794000086723827e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6419999812787864e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7101000341644976e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.830500059440965e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.323399985471042e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0558999494824093e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.1570000171777792e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.0918999982532114e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.2793000425735954e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7512999875179958e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 247,
              "line_end": 265
            }
          ]
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.001084745000298426
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.294100017432356e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7302000489726197e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.2854000235383864e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0477999896684196e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.99269998120144e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.128000051015988e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.453599972795928e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.3935000172059517e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.5519999578827992e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "socket",
              "complexity": 10,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.8922000132733956e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.748099996097153e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.1416999667708296e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.275299993925728e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.972700010810513e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.669100038270699e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.9406999854254536e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.374500036239624e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.148000021406915e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.355499964323826e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.903499989770353e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 69,
        "functions_count": 36,
        "raw_output": {
          "file_complexity": 69,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 26
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 37,
              "line_end": 43
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 45,
              "line_end": 55
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 57,
              "line_end": 74
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 76,
              "line_end": 93
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 95,
              "line_end": 123
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 125,
              "line_end": 150
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 152,
              "line_end": 178
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 180,
              "line_end": 186
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 188,
              "line_end": 193
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 195,
              "line_end": 200
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 202,
              "line_end": 205
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 207,
              "line_end": 210
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 212,
              "line_end": 214
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 216,
              "line_end": 218
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 220,
              "line_end": 223
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 225,
              "line_end": 228
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 230,
              "line_end": 236
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 242,
              "line_end": 244
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 246,
              "line_end": 248
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 249,
              "line_end": 346
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 352,
              "line_end": 355
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 357,
              "line_end": 365
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 367,
              "line_end": 374
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 379,
              "line_end": 382
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 384,
              "line_end": 386
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 390,
              "line_end": 393
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 397,
              "line_end": 400
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0014535109994540107
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 59,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 63,
              "line_end": 75
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 78,
              "line_end": 89
            },
            {
              "name": "primefactors",
              "complexity": 5,
              "line_start": 92,
              "line_end": 103
            },
            {
              "name": "factors",
              "complexity": 3,
              "line_start": 106,
              "line_end": 114
            },
            {
              "name": "modInverse",
              "complexity": 3,
              "line_start": 117,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00036008899951411877
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.749800013494678e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.8441999751958065e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.395300038595451e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "func",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 17,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.1157000850944314e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.196200057369424e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.9015000109211542e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 7,
              "line_end": 17
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 28,
              "line_end": 32
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 34,
              "line_end": 42
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 44,
              "line_end": 51
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 53,
              "line_end": 56
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 60,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014286900022852933
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010503900011826772
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 71,
        "functions_count": 30,
        "raw_output": {
          "file_complexity": 71,
          "functions": [
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 39,
              "line_end": 45
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 47,
              "line_end": 57
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 59,
              "line_end": 76
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 78,
              "line_end": 95
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 97,
              "line_end": 125
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 127,
              "line_end": 152
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 154,
              "line_end": 180
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 182,
              "line_end": 188
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 190,
              "line_end": 195
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 197,
              "line_end": 202
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 204,
              "line_end": 207
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 209,
              "line_end": 212
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 214,
              "line_end": 216
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 218,
              "line_end": 220
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 222,
              "line_end": 225
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 227,
              "line_end": 230
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 232,
              "line_end": 238
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 240,
              "line_end": 242
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 244,
              "line_end": 246
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 248,
              "line_end": 250
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 258,
              "line_end": 258
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 261,
              "line_end": 298
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 307,
              "line_end": 311
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 313,
              "line_end": 321
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 323,
              "line_end": 330
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 332,
              "line_end": 335
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 345
            }
          ]
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.0014180640000631684
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012154900014138548
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 23,
              "line_end": 26
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 29,
              "line_end": 73
            },
            {
              "name": "solve2",
              "complexity": 11,
              "line_start": 76,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00024251800005004043
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010382599975855555
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0528_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010060000022349413
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0528_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00016241599951172248
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.934399956051493e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.8052000491006766e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.3191999136761297e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.943599974969402e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "TUPLE",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "ZIP",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.40580005387892e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.914400010922691e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.045900055236416e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.196899953967659e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.0006000088178553e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.7009999687143136e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.655000025697518e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.008699968631845e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.4466000468237326e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.3644999600946903e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 1,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.0047000109334476e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "CodeforcesTask528BSolution::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "CodeforcesTask528BSolution::read_input",
              "complexity": 1,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "CodeforcesTask528BSolution::process_task",
              "complexity": 3,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "CodeforcesTask528BSolution::get_result",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.387099983840017e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.2812000426929444e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.5268000172218308e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 7.651500072825002e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "d",
              "complexity": 1,
              "line_start": 5,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 3.661900063889334e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 0.00033130500014522113
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 6.541299990203697e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 4.573600017465651e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 7,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 5.773900011263322e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 2.8734000807162374e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 8.180400072888006e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 5.267899996397318e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 2.4636000489408616e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 3.62880000466248e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 3.0177000553521793e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "up",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "go",
              "complexity": 1,
              "line_start": 14,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 8.922799952415517e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 6.8710000050487e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 2.450700048939325e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 4.4875000639876816e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "almost_difference",
              "complexity": 11,
              "line_start": 34,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 6.786799986002734e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 4.3582000216702e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "possible",
              "complexity": 4,
              "line_start": 14,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.35899996268563e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 18,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.740500015846919e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "check",
              "complexity": 6,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.326800005102996e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "check",
              "complexity": 6,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.385099914041348e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00021001599998271558
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 18,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.005999982036883e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002050970006166608
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00020845299968641484
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "heapT::__init__",
              "complexity": 0,
              "line_start": 7,
              "line_end": 11
            },
            {
              "name": "heapT::push",
              "complexity": 1,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "heapT::pop",
              "complexity": 0,
              "line_start": 21,
              "line_end": 24
            },
            {
              "name": "heapT::normalize",
              "complexity": 1,
              "line_start": 26,
              "line_end": 28
            },
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 30,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00017566099995747209
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "fun",
              "complexity": 8,
              "line_start": 3,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.730600009381305e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00023804900047252886
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 5,
              "line_end": 43
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 50,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010644100075296592
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "max_eligible",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.9092000153905246e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.17900003210525e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.490600010991329e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "sss",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 5.3982000281393994e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "sss",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.927299960399978e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.116900006716605e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 5.453199992189184e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 7.72359999245964e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 6.255800053622806e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.561599962471519e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 8.851700022205478e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.218899994157255e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 2.9384999834292103e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "dfs_from",
              "complexity": 12,
              "line_start": 17,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0958_B2",
      "tags": "data structures,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00014852999993308913
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 84,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 84,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "main",
              "complexity": 74,
              "line_start": 66,
              "line_end": 197
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0007459870003003743
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "pair_of_lines",
              "complexity": 4,
              "line_start": 3,
              "line_end": 14
            },
            {
              "name": "kstr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 32
            },
            {
              "name": "judge",
              "complexity": 12,
              "line_start": 35,
              "line_end": 50
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 53,
              "line_end": 56
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00013551500069297617
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 278,
        "functions_count": 50,
        "raw_output": {
          "file_complexity": 278,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 330
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 332,
              "line_end": 337
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 340,
              "line_end": 344
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 352
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 354,
              "line_end": 366
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 368,
              "line_end": 377
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 379,
              "line_end": 388
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 391,
              "line_end": 404
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 406,
              "line_end": 409
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 418,
              "line_end": 419
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 421,
              "line_end": 437
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 439,
              "line_end": 463
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 465,
              "line_end": 489
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 494,
              "line_end": 495
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 497,
              "line_end": 503
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 505,
              "line_end": 512
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 523,
              "line_end": 532
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 534,
              "line_end": 543
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 545,
              "line_end": 561
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 563,
              "line_end": 574
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "solve",
              "complexity": 49,
              "line_start": 602,
              "line_end": 649
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.004261895999661647
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "gcd",
              "complexity": 2,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "line",
              "complexity": 5,
              "line_start": 8,
              "line_end": 28
            },
            {
              "name": "online",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "process",
              "complexity": 18,
              "line_start": 40,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0002555620003477088
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "is_colinear",
              "complexity": 6,
              "line_start": 11,
              "line_end": 23
            },
            {
              "name": "good",
              "complexity": 9,
              "line_start": 27,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00015310900016629603
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "is_colinear",
              "complexity": 6,
              "line_start": 14,
              "line_end": 26
            },
            {
              "name": "good",
              "complexity": 9,
              "line_start": 30,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00014826900041953195
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 73,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 73,
          "functions": [
            {
              "name": "nod",
              "complexity": 4,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "point3",
              "complexity": 2,
              "line_start": 8,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00040099599937093444
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 60,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "on_one_line",
              "complexity": 7,
              "line_start": 13,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 50,
              "line_start": 28,
              "line_end": 111
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00036562899913406
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get_line",
              "complexity": 0,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "check",
              "complexity": 10,
              "line_start": 28,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00014049499986867886
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00011071900007664226
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "read_data",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "is_on_line",
              "complexity": 1,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 37,
              "line_start": 12,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00013778999982605455
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00018884600012825103
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "scal",
              "complexity": 1,
              "line_start": 8,
              "line_end": 11
            },
            {
              "name": "check",
              "complexity": 13,
              "line_start": 13,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00015876900033617858
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "main",
              "complexity": 47,
              "line_start": 5,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00013574600052379537
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "g",
              "complexity": 10,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 4.736900064017391e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "cross",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 6.438099990191404e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "Point::__init__",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            },
            {
              "name": "Vector::__init__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "Vector::mult",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "onLine",
              "complexity": 4,
              "line_start": 28,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00014872100018692436
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "iscollinear",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "checkfortwolines",
              "complexity": 10,
              "line_start": 9,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 8.377799986192258e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "Solution",
              "complexity": 4,
              "line_start": 1,
              "line_end": 15
            },
            {
              "name": "binarySearch_LowerBound",
              "complexity": 3,
              "line_start": 18,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 6.728599964844761e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 3.1538999792246614e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "next",
              "complexity": 4,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 5.212800078879809e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "Binary_Search",
              "complexity": 3,
              "line_start": 18,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 8.488000003126217e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "Binary_Search",
              "complexity": 3,
              "line_start": 19,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 7.929000003059627e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 2.6159000299230684e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "p",
              "complexity": 3,
              "line_start": 5,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 5.323000004864298e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "p",
              "complexity": 3,
              "line_start": 5,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 5.139699987921631e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "bin_ser",
              "complexity": 4,
              "line_start": 2,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 16,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 6.037399998604087e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "bin_ser",
              "complexity": 4,
              "line_start": 3,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 5.8459999308979604e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 3.5746999856201e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "search",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 4.826100030186353e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 5.35810004294035e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 3.413500053284224e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.195999943272909e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.173800061835209e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.4676999601069838e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 9,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 37,
              "line_end": 41
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 62,
              "line_end": 65
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 69,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00023146599960455205
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "readlines",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 7,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.5984999309876e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.7360000280605163e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.770099920075154e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7912999939871952e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.679999943211442e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.5737999749253504e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7011000383936334e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "res",
              "complexity": 3,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.632800053310348e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.7089999750605784e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "inn",
              "complexity": 1,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.135800008953083e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solution",
              "complexity": 6,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.988499975093873e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.3811000725545455e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.6518999877444e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.5308000658696983e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.482699983374914e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.8465000721334945e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.4556999960623216e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.956200013519265e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.632699983631028e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.632700074580498e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.74590003452613e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.5098000151047017e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.247700002859347e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.21260003047064e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.686100015125703e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.8262999876460526e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 51,
              "line_end": 64
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 65,
              "line_end": 72
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "datainput",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.000240293000388192
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "iin",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "sin",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "listin",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "liststr",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "ceill",
              "complexity": 1,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "ceilldiv",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "LCM",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 20,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.00010129099973710254
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.309200019430136e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.8585000361781567e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011912399986613309
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.787099987879628e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.000136618000396993
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.6950000321667176e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.0686999454919714e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.095800002483884e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.8082999961043242e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.5507999453111552e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.138899955956731e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.741999989870237e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.4265000067534856e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.4374999813735485e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.9355000151554123e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.0077000701567158e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.541799949540291e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.52769993696711e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.442599998175865e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.668999968591379e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            },
            {
              "name": "mergeSort",
              "complexity": 0,
              "line_start": 264,
              "line_end": 268
            },
            {
              "name": "_mergeSort",
              "complexity": 1,
              "line_start": 272,
              "line_end": 305
            },
            {
              "name": "merge",
              "complexity": 7,
              "line_start": 309,
              "line_end": 352
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 0.0012586029997692094
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.160899996146327e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            },
            {
              "name": "BIT::add",
              "complexity": 1,
              "line_start": 11,
              "line_end": 18
            },
            {
              "name": "BIT::running_total",
              "complexity": 4,
              "line_start": 20,
              "line_end": 31
            },
            {
              "name": "BIT::sumrange",
              "complexity": 2,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "BIT::lower_left",
              "complexity": 6,
              "line_start": 42,
              "line_end": 55
            },
            {
              "name": "tentousu",
              "complexity": 1,
              "line_start": 56,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 0.0001639990005060099
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "Bit::__init__",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "Bit::sum",
              "complexity": 1,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "Bit::add",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.5604999943170696e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.83830001737806e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.532699975039577e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 1.5999999959603883e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.823199949692935e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.0216999221011065e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.2221000765275676e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.4885999411926605e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 2.9876000553485937e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 2.4967000172182452e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 1.5018000340205617e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.2932000067376066e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.38139998348197e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "ctd",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 74,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 0.0002518250003049616
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.1947999963886105e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00012342199988779612
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.7602000045590103e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.2211999748833477e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.329400012968108e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.781199939112412e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.2932999854674563e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.4406000193266664e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.141999993909849e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.0679000044765417e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.1969999326975085e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.0639000467781443e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 1.6320000213454477e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "comp",
              "complexity": 6,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 4.5636999857379124e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.257099979236955e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 4.814100066141691e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.6028999855043367e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.1279999600665178e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "comp",
              "complexity": 6,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 4.256000011082506e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.811100006918423e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.736000053322641e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.784100044867955e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 32,
              "line_end": 35
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 37,
              "line_end": 47
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 54,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0001407350000590668
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "main",
              "complexity": 24,
              "line_start": 84,
              "line_end": 116
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0002330999996047467
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 8.143299965013284e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 6.933100030437345e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.3190000471659005e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 34,
              "line_end": 37
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 39,
              "line_end": 49
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 61,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00013382300039666006
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.817099943466019e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 4,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.0687000364414416e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 96,
              "line_end": 107
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00023152599987952271
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00022205899949767627
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "power",
              "complexity": 2,
              "line_start": 70,
              "line_end": 76
            },
            {
              "name": "totalPrimeFactors",
              "complexity": 10,
              "line_start": 79,
              "line_end": 95
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 133,
              "line_end": 173
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.000343817999237217
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "dist",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "power2",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00011428599918872351
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.416200019681128e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.7942999622609932e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8333999832975678e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.9054000151518267e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.350299994053785e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 31,
              "line_end": 47
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 62
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 71,
              "line_end": 73
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00019190199964214116
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.5396999919612426e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.425599996058736e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.9265999981143977e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.620899977046065e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.099900029861601e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.5476999983075075e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.8674000532191712e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8414999431115575e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.8844000553363003e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.424500027904287e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8363999515713658e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.833299979305593e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.5143999816209543e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.716999981406843e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.2159999793511815e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.9332000091671944e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.9092999688582495e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00025917899984051473
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.9791999774461146e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.378300036478322e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "get_ints_in_variables",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "get_int",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "get_ints_in_list",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "get_list_of_list",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "myceil",
              "complexity": 0,
              "line_start": 31,
              "line_end": 31
            },
            {
              "name": "Solution",
              "complexity": 8,
              "line_start": 36,
              "line_end": 59
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012044699997204589
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.4034000236715656e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "Knight::__init__",
              "complexity": 0,
              "line_start": 4,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.24179995409213e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.11160003245459e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.289999990054639e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.9854000280902255e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "takeSecond",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "takeFirst",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.370900038949912e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.821199970843736e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.546199958596844e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.365299926372245e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "my_cmp",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "dis",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 6.0012999711034354e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 6.499299979623174e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.288900047162315e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.354099994292483e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 5,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.164699996385025e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 86,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 86,
          "functions": [
            {
              "name": "lv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002736060005190666
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 18,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.523900007479824e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "testcase",
              "complexity": 2,
              "line_start": 7,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.357100053515751e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 8,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 33,
              "line_end": 37
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 49,
              "line_end": 56
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 65,
              "line_end": 71
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001882149999801186
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 20,
              "line_start": 20,
              "line_end": 67
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 68,
              "line_end": 71
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 89,
              "line_end": 97
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 99,
              "line_end": 106
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 108,
              "line_end": 111
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 124,
              "line_end": 135
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003727430002982146
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.346299945405917e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 8,
              "line_end": 26
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 42,
              "line_end": 50
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00018708300012804102
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "f",
              "complexity": 4,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.2259000767662656e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.5727000067709014e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 3,
              "line_end": 30
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 33,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.221700004971353e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "readmap",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "readlist",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.854699990479276e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.401899983960902e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.529599962348584e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.788199981296202e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 12,
              "line_end": 15
            },
            {
              "name": "BS",
              "complexity": 4,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 33,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001607630001672078
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.877199990005465e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.675599979644176e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.272899943520315e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.382299994176719e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.32700002825004e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 3,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 7.35180001356639e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "binary",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.9732999943662435e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 7.262700000865152e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002343319993087789
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.162799971003551e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.5277000279165804e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.253999941283837e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.3612999686738476e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.538400000659749e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.813999996462371e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.931399987777695e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.309200019430136e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.6357999306346755e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.676299941929756e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.86369998625014e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.498400059877895e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.475500008993549e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "BIT::to_sum",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "BIT::add",
              "complexity": 1,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "BIT::get",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "f",
              "complexity": 2,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "calc_median",
              "complexity": 4,
              "line_start": 35,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.110199971473776e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "gC",
              "complexity": 3,
              "line_start": 4,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.841200032184133e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 22
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 24,
              "line_end": 32
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 34,
              "line_end": 41
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 43,
              "line_end": 46
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 56
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "rl",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "mergeSortGoodOrder",
              "complexity": 5,
              "line_start": 112,
              "line_end": 144
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.00037418600004457403
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.0074000430176966e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.0096000045887195e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "power",
              "complexity": 2,
              "line_start": 70,
              "line_end": 76
            },
            {
              "name": "totalPrimeFactors",
              "complexity": 10,
              "line_start": 79,
              "line_end": 95
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 133,
              "line_end": 162
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.0002931730005002464
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.355900040944107e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.315999987942632e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.120500049495604e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.0694999774568714e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.817900066380389e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 8.705399977770867e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.2159999793511815e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.191000061837258e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "less_sum",
              "complexity": 5,
              "line_start": 3,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.072499970992794e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.229900034464663e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.533399962587282e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.967299992131302e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.220000027999049e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.2369000513863284e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "dtb",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "btd",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.185699930938426e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 8,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.60650005354546e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.5506999665813055e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.497600027912995e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.0207000236259773e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "max_profit",
              "complexity": 4,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.2409999878145754e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "max_profit",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.299200034234673e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.221000042685773e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.244899966783123e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 27,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 87
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 88,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00023943199994391762
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.961299964634236e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.511499992077006e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.795100019488018e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.9325000468816143e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.0066999897826463e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "pos",
              "complexity": 3,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.2531000215385575e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.8323000151431188e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.1370000215247273e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.601999949547462e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.662499981757719e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.5065000449540094e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.5288000870204996e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "is_ok",
              "complexity": 2,
              "line_start": 6,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.053699947486166e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.9064000702637713e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.370300055394182e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.589500051428331e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "isValid",
              "complexity": 14,
              "line_start": 1,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.752600049570901e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 21,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 46,
              "line_end": 47
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 49,
              "line_end": 50
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 62,
              "line_end": 71
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 77,
              "line_end": 82
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 84,
              "line_end": 95
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 97,
              "line_end": 110
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 112,
              "line_end": 114
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 117,
              "line_end": 117
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 119,
              "line_end": 119
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 121,
              "line_end": 121
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 123,
              "line_end": 123
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 126,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0004675210002460517
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "solver::__call__",
              "complexity": 8,
              "line_start": 20,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.967099943722133e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.245999934937572e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 1.9647000044642482e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 1.3525999747798778e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.0045999665162526e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.169700034457492e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 8,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.819100013264688e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.3161999454023317e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.9455000003508758e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.010599968751194e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.933399966626894e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.7943000532104634e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.0407999474846292e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.643999960127985e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.492599989840528e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.049700055475114e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "mergeSort",
              "complexity": 11,
              "line_start": 1,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 8.731500020076055e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "readPair",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "readEntry",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.353199983597733e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "readPair",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.878400027839234e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sumList",
              "complexity": 1,
              "line_start": 11,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.820100002689287e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sumList",
              "complexity": 1,
              "line_start": 12,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.5727000067709014e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.6628000745840836e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 20,
              "line_start": 15,
              "line_end": 352
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 358,
              "line_end": 361
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 363,
              "line_end": 371
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 373,
              "line_end": 380
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 385,
              "line_end": 388
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 390,
              "line_end": 392
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 396,
              "line_end": 399
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 403,
              "line_end": 406
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00043680400085577276
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00019422700006543892
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0002712220002649701
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "fun",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.810800005041528e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.5284000154642854e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.920100011280738e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.0956000450241845e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00019855399932566797
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "print",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "ind",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "cleanarr",
              "complexity": 7,
              "line_start": 21,
              "line_end": 36
            },
            {
              "name": "main",
              "complexity": 26,
              "line_start": 37,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.000180049999471521
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "process",
              "complexity": 8,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.764800036762608e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.882199937128462e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            },
            {
              "name": "BS",
              "complexity": 3,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "comp",
              "complexity": 5,
              "line_start": 36,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00017234499955520732
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.86290004523471e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00010346500039304374
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 9.914699967339402e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00011720099973899778
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00012585800050146645
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00010806400041474262
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.28889993095072e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.674800038628746e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 7,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 31,
              "line_end": 35
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 36,
              "line_end": 44
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 45,
              "line_end": 52
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 53,
              "line_end": 56
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 58,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001727859998936765
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.620700019586366e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.9423000746173784e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.2350000512669794e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.4596000659803394e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.73789996249252e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "getf",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "put",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "putf",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010714200016082032
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.306000002747169e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "Digit::__init__",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "Digit::increment",
              "complexity": 1,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "Digit::found",
              "complexity": 1,
              "line_start": 21,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.905600018100813e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.585700025927508e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.855100087297615e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.493300068337703e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.4441999964183196e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.188799968891544e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.040499945607735e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.052599979331717e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.643000061652856e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 7.952000032673823e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.620599949907046e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 4.825099949812284e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 6.727700019837357e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 8.736500058148522e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 8.208499912143452e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.371099996409612e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 4.590699973050505e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "add",
              "complexity": 1,
              "line_start": 5,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 8.153399994625943e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.604499983746791e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.414199949882459e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "bfs",
              "complexity": 14,
              "line_start": 2,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 6.531300005008234e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.3982000281393994e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.9943999329116195e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.015399983676616e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.959299985785037e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.294999937177636e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.945299951941706e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.3625000065076165e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.205999994155718e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.3050000133225694e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 5.3982000281393994e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 4.4964999688090757e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 10,
              "line_end": 21
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "numIN",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "charIN",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "bfs",
              "complexity": 3,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.00010261300030833809
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "countleaf",
              "complexity": 2,
              "line_start": 7,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 4.9202999434783123e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 2.2743000045011286e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 5.10259997099638e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.99350001316634e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "bfs",
              "complexity": 2,
              "line_start": 11,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.523299998661969e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "DFS::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            },
            {
              "name": "DFS::take_input",
              "complexity": 12,
              "line_start": 6,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.093499996495666e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "f",
              "complexity": 6,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.4455000786692835e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sfy",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.591799941204954e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.4064999706752133e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "dprint",
              "complexity": 1,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 19,
              "line_end": 48
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 51,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.121399994503008e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.3782999707909767e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.8713999199680984e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.824300008796854e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "do",
              "complexity": 7,
              "line_start": 6,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.4503999561129604e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.329999930836493e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.964400002587354e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.0006000088178553e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.0245000491268e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.829800051695202e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.4715999643376563e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "f",
              "complexity": 2,
              "line_start": 9,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.6728999475599267e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.093900002364535e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.957099958526669e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "dprint",
              "complexity": 1,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 19,
              "line_end": 36
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 39,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.9842000155185815e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0849000065936707e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.476700046827318e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.1520999325730372e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.6340999536623713e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.397499974904349e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.868999960512156e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.550599987851456e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.513699928385904e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7353000657749362e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.2090999664214905e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.31120006396668e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7951999982178677e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.097700002603233e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "nospace",
              "complexity": 0,
              "line_start": 25,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.868899981782306e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.5938999897334725e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.52139999854262e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.400200006988598e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.321000026015099e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 22,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "SortedList::__init__",
              "complexity": 1,
              "line_start": 2,
              "line_end": 13
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 15,
              "line_end": 22
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 32,
              "line_end": 42
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 44,
              "line_end": 61
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 63,
              "line_end": 80
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 82,
              "line_end": 110
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 112,
              "line_end": 137
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 139,
              "line_end": 165
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 167,
              "line_end": 173
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 175,
              "line_end": 180
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 189,
              "line_end": 192
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 194,
              "line_end": 197
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 199,
              "line_end": 201
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 203,
              "line_end": 205
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 207,
              "line_end": 210
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 212,
              "line_end": 215
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 217,
              "line_end": 223
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 225,
              "line_end": 227
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 229,
              "line_end": 231
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 233,
              "line_end": 235
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0008736569998291088
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 9,
              "line_end": 34
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 44,
              "line_end": 48
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 60,
              "line_end": 67
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 69,
              "line_end": 72
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 76,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002607320002425695
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 9,
              "line_end": 34
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 44,
              "line_end": 48
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 60,
              "line_end": 67
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 69,
              "line_end": 72
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 76,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002431980001347256
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.41309998172801e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001771039997038315
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0438000067078974e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1441000424383674e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3826000213157386e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5118000192160252e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0931000360869803e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 6.925999969098484e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 23,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00014052499955141684
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "push",
              "complexity": 2,
              "line_start": 2,
              "line_end": 8
            },
            {
              "name": "push_v",
              "complexity": 1,
              "line_start": 10,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011008799992850982
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.876799984136596e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 6.906999988132156e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 6.14260006841505e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "bfs",
              "complexity": 9,
              "line_start": 14,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012142899959144415
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "bfs",
              "complexity": 9,
              "line_start": 14,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001053789992511156
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.494399920280557e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.528499994194135e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.715999991982244e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.696800053556217e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.965500036429148e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.355199962446932e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.586599945672788e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.8612000025750604e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 13,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 7.669400019949535e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "next",
              "complexity": 2,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.038499966758536e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.456300004880177e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 7.071300024108496e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.653800013125874e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.339300019433722e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 18,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 6.895000024087494e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.3571999412961304e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "sort_x2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.272900034469785e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.058600006828783e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "bin_search",
              "complexity": 6,
              "line_start": 8,
              "line_end": 24
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 26,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 6.539300011354499e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "readint",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 11,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.59150003027753e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.756000023713568e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.398399985599099e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.763800072600134e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.212299937644275e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.067100018000929e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 3,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00018407700008538086
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010462699992785929
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "out_edge",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.52120004108292e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010744300016085617
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 5.1576999794633593e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "add",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            },
            {
              "name": "get",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00010571900020295288
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "I",
              "complexity": 5,
              "line_start": 16,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00014881999959470704
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00013673699959326768
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "mu",
              "complexity": 2,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "add",
              "complexity": 1,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "get",
              "complexity": 1,
              "line_start": 20,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00012815199988835957
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "merge",
              "complexity": 3,
              "line_start": 1,
              "line_end": 19
            },
            {
              "name": "mergesort",
              "complexity": 1,
              "line_start": 20,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00014736699995410163
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "inverse",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "get",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "update",
              "complexity": 1,
              "line_start": 21,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00013140800001565367
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "FenwickSum::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "FenwickSum::add",
              "complexity": 1,
              "line_start": 21,
              "line_end": 24
            },
            {
              "name": "FenwickSum::sum",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 36,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00015008300033514388
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00012154999967606273
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "find_loop",
              "complexity": 18,
              "line_start": 4,
              "line_end": 32
            },
            {
              "name": "top_sort",
              "complexity": 20,
              "line_start": 35,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0002804989999276586
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "sol",
              "complexity": 15,
              "line_start": 19,
              "line_end": 38
            },
            {
              "name": "sol2",
              "complexity": 15,
              "line_start": 40,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00021065700002509402
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "top_sort",
              "complexity": 10,
              "line_start": 3,
              "line_end": 20
            },
            {
              "name": "check",
              "complexity": 4,
              "line_start": 23,
              "line_end": 32
            },
            {
              "name": "input_t",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0001526180003565969
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "check",
              "complexity": 36,
              "line_start": 6,
              "line_end": 47
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 49,
              "line_end": 70
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 76,
              "line_end": 80
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 81,
              "line_end": 89
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 90,
              "line_end": 97
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 98,
              "line_end": 101
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 103,
              "line_end": 109
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0003451610000411165
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 11,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00010614999973768136
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "find_loop",
              "complexity": 18,
              "line_start": 6,
              "line_end": 34
            },
            {
              "name": "top_sort",
              "complexity": 20,
              "line_start": 37,
              "line_end": 70
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0002601910000521457
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 8,
              "line_start": 5,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012276199959160294
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "judge",
              "complexity": 9,
              "line_start": 5,
              "line_end": 27
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 29,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00016178500027308473
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.935299966746243e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.037600047013257e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8323000151431188e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 1,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.433899984083837e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.199800034461077e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.395400017325301e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.448399977263762e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.173900015302934e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.506600023683859e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5858999833872076e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.002500008937204e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.551700046955375e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.613899934862275e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.641699979401892e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9566000193881337e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8864999876532238e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.1729000258783344e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.2199000492691994e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "si",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "sti",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "iti",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "sli",
              "complexity": 0,
              "line_start": 32,
              "line_end": 32
            },
            {
              "name": "ili",
              "complexity": 0,
              "line_start": 35,
              "line_end": 35
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 38,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010079000003315741
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "readMultiple",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 10,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.562099992559524e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.069600072398316e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 26,
              "line_start": 16,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.00012177999997220468
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "power",
              "complexity": 2,
              "line_start": 70,
              "line_end": 76
            },
            {
              "name": "totalPrimeFactors",
              "complexity": 10,
              "line_start": 79,
              "line_end": 95
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 133,
              "line_end": 161
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.0003167869999742834
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 63,
        "functions_count": 33,
        "raw_output": {
          "file_complexity": 63,
          "functions": [
            {
              "name": "naiveSolve",
              "complexity": 0,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 9,
              "line_end": 18
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 20,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 29,
              "line_end": 35
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 37,
              "line_end": 47
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 49,
              "line_end": 66
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 68,
              "line_end": 85
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 87,
              "line_end": 115
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 117,
              "line_end": 142
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 144,
              "line_end": 170
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 172,
              "line_end": 178
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 180,
              "line_end": 185
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 187,
              "line_end": 192
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 194,
              "line_end": 197
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 199,
              "line_end": 202
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 204,
              "line_end": 206
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 208,
              "line_end": 210
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 212,
              "line_end": 215
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 217,
              "line_end": 220
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 222,
              "line_end": 228
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 230,
              "line_end": 232
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 234,
              "line_end": 236
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "OrderedList::__init__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 244
            },
            {
              "name": "OrderedList::rangeCountByValue",
              "complexity": 0,
              "line_start": 245,
              "line_end": 248
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 252,
              "line_end": 287
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 294,
              "line_end": 295
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 296,
              "line_end": 297
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 298,
              "line_end": 299
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 301,
              "line_end": 302
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 306,
              "line_end": 309
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 311,
              "line_end": 314
            },
            {
              "name": "answerInteractive",
              "complexity": 0,
              "line_start": 316,
              "line_end": 318
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.0011608089998844662
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.698600009258371e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.533500032266602e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.32710000697989e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "find",
              "complexity": 13,
              "line_start": 1,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.37410005563288e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.231000002619112e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "f",
              "complexity": 8,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.871899950056104e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.098699992027832e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 3.956499949708814e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.4022999645676464e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 3.7059000533190556e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.1507999412715435e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.824999971082434e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.6165999922086485e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.0375999560637865e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.322900026134448e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.375999964802759e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001046170000336133
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "shuntsu",
              "complexity": 1,
              "line_start": 5,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.55309999678866e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "ism",
              "complexity": 1,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "isk",
              "complexity": 5,
              "line_start": 4,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00019319400053063873
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.974800013878848e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001685170000200742
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001028240003506653
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.480999986204552e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001377300004605786
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.828500060393708e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 8,
              "line_start": 18,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.979800051951315e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00024201599990192335
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00023083599990059156
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001332419997197576
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 42,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0004601280006681918
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011416600045777159
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.962099996599136e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "iskoutsu",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "isshuntsu",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010996799937856849
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.130200032814173e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.306000002747169e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.25080001555034e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 8.558100034861127e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 12,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.540200022049248e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.133500002964865e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "z",
              "complexity": 1,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.606599916063715e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "gns",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.935199988016393e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.817700043233344e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 45,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.0001011099993775133
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.079400074871955e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 9.591100024408661e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.813900017732522e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.8982999942381866e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "resh",
              "complexity": 6,
              "line_start": 10,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.000299981678836e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.484400026034564e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "main",
              "complexity": 24,
              "line_start": 1,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 9.295499967265641e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 8.213500041165389e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.570600049191853e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.57629995860043e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.712900044978596e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.72930003827787e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.9465999685053248e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.3466000382322818e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.6479999178263824e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.650099966354901e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ADIYWoodenLadder::solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.552800015109824e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.847500061558094e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.2724000043817796e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.6520999452040996e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.246899945632322e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.5718999748060014e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.4578000445908401e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.225300002261065e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.7792999642551877e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "getdict",
              "complexity": 11,
              "line_start": 7,
              "line_end": 22
            },
            {
              "name": "cdiv",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 7.095399996615015e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.4476999897160567e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "fastio",
              "complexity": 0,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 4.205899949738523e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.6279999726975802e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.1993000043730717e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.6440000510774553e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.252100032113958e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.350200015323935e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.224200034106616e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.737199974944815e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.680000034160912e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.045800010819221e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.438399992068298e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.408399970794562e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.0268000298528932e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.0087999473616946e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.5669000276830047e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8916000044555403e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.2492999960377347e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.9166000129189342e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.4626999472966418e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.7531999876373447e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.5890000213403255e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.567999970575329e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.593999968463322e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.355600034003146e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.6249000256939325e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.025699970748974e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.14080004702555e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 6,
              "line_end": 9
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 15,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.943199994362658e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8653999834205024e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.551700046955375e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.7830999644938856e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.1068999305716716e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "C1",
              "complexity": 11,
              "line_start": 2,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.980300011287909e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 60,
              "line_end": 69
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 70,
              "line_end": 83
            },
            {
              "name": "primefactors",
              "complexity": 5,
              "line_start": 84,
              "line_end": 95
            },
            {
              "name": "factors",
              "complexity": 3,
              "line_start": 96,
              "line_end": 104
            },
            {
              "name": "NcR",
              "complexity": 4,
              "line_start": 105,
              "line_end": 124
            },
            {
              "name": "Log2",
              "complexity": 1,
              "line_start": 125,
              "line_end": 130
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 131,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00039264000042749103
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.3852000089827925e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.864399993995903e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.9102999835449737e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.898399998230161e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.46650003848481e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.653899966593599e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.366399985476164e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.5456999285088386e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.257099979236955e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.968600074382266e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "E1",
              "complexity": 11,
              "line_start": 3,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.954099990252871e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.6847999985620845e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 21,
              "line_end": 33
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 50,
              "line_end": 67
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 77,
              "line_end": 87
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 89,
              "line_end": 103
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00031695800043962663
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 21,
              "line_end": 33
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 50,
              "line_end": 67
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 77,
              "line_end": 87
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 89,
              "line_end": 103
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00031250899974111235
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 8,
              "line_end": 20
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 23,
              "line_end": 26
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 37,
              "line_end": 54
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 56,
              "line_end": 57
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 59,
              "line_end": 62
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 76,
              "line_end": 90
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00027569000030780444
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 33,
              "line_end": 50
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 55,
              "line_end": 58
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 60,
              "line_end": 70
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 72,
              "line_end": 86
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0002798180003082962
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 33,
              "line_end": 50
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 55,
              "line_end": 58
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 60,
              "line_end": 70
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 72,
              "line_end": 86
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00027092100026493426
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0908_G",
      "tags": "dp,math",
      "tool": "complexipy",
      "execution_time": 8.382800024264725e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.874599982140353e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.819499973673373e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "summ",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.1167999370372854e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.6720000278146472e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 89,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 89,
          "functions": [
            {
              "name": "pi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pl",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ti",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ts",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            },
            {
              "name": "fast_mod_exp",
              "complexity": 3,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "inverseMod",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "ncr",
              "complexity": 3,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "D",
              "complexity": 73,
              "line_start": 46,
              "line_end": 82
            },
            {
              "name": "C",
              "complexity": 9,
              "line_start": 84,
              "line_end": 107
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00040987300053529907
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.83190000927425e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.000992231000054744
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "prefix_sums",
              "complexity": 1,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "find_ans",
              "complexity": 10,
              "line_start": 20,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.789499927137513e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.997699994011782e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.6049000553030055e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "cal_pref",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.567200009361841e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "cal_pref",
              "complexity": 1,
              "line_start": 16,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.732699966960354e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.285799983947072e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.160600059956778e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.266800028242869e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.9103999370126985e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "it",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 12,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.473199937317986e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.5798999558901414e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.2141000044939574e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.1066000196442474e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.6879000365152024e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "add",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0001149970003098133
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "add",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00010301400016032858
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.728199979173951e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.3384000087389722e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fenwick::__init__",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "fenwick::to_sum",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "fenwick::add",
              "complexity": 1,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "fenwick::get",
              "complexity": 0,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 8.910800079320325e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inv_cnt",
              "complexity": 6,
              "line_start": 57,
              "line_end": 70
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 74,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00020271300036256434
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.709999964485178e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 300,
        "functions_count": 56,
        "raw_output": {
          "file_complexity": 300,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 331
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 333,
              "line_end": 341
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 344,
              "line_end": 351
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 354,
              "line_end": 359
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 361,
              "line_end": 373
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 375,
              "line_end": 384
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 386,
              "line_end": 395
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 398,
              "line_end": 411
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 413,
              "line_end": 416
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 425,
              "line_end": 426
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 428,
              "line_end": 444
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 446,
              "line_end": 470
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 472,
              "line_end": 496
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 501,
              "line_end": 502
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 504,
              "line_end": 510
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 512,
              "line_end": 519
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 521,
              "line_end": 528
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 530,
              "line_end": 539
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 541,
              "line_end": 550
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 552,
              "line_end": 568
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 570,
              "line_end": 581
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 583,
              "line_end": 591
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 2,
              "line_start": 594,
              "line_end": 603
            },
            {
              "name": "SegmentTree::update",
              "complexity": 1,
              "line_start": 605,
              "line_end": 610
            },
            {
              "name": "SegmentTree::query",
              "complexity": 5,
              "line_start": 612,
              "line_end": 625
            },
            {
              "name": "SegmentTree::bisect_l",
              "complexity": 28,
              "line_start": 627,
              "line_end": 660
            },
            {
              "name": "MinCostFlow::__init__",
              "complexity": 0,
              "line_start": 666,
              "line_end": 668
            },
            {
              "name": "MinCostFlow::add_edge",
              "complexity": 1,
              "line_start": 670,
              "line_end": 674
            },
            {
              "name": "MinCostFlow::flow",
              "complexity": 22,
              "line_start": 676,
              "line_end": 722
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0055867840001155855
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.7419999646081124e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 7.84069998189807e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 146,
        "functions_count": 60,
        "raw_output": {
          "file_complexity": 146,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            },
            {
              "name": "TrieNode::__init__",
              "complexity": 0,
              "line_start": 557,
              "line_end": 559
            },
            {
              "name": "Trie::__init__",
              "complexity": 0,
              "line_start": 561,
              "line_end": 562
            },
            {
              "name": "Trie::getNode",
              "complexity": 0,
              "line_start": 563,
              "line_end": 564
            },
            {
              "name": "Trie::_charToIndex",
              "complexity": 0,
              "line_start": 565,
              "line_end": 566
            },
            {
              "name": "Trie::insert",
              "complexity": 4,
              "line_start": 567,
              "line_end": 575
            },
            {
              "name": "Trie::search",
              "complexity": 5,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 587,
              "line_end": 591
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 0,
              "line_start": 593,
              "line_end": 594
            },
            {
              "name": "BinaryTrie::insert",
              "complexity": 14,
              "line_start": 595,
              "line_end": 609
            },
            {
              "name": "BinaryTrie::query",
              "complexity": 12,
              "line_start": 610,
              "line_end": 625
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0037962779997542384
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.279099994164426e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 72,
        "functions_count": 23,
        "raw_output": {
          "file_complexity": 72,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 86,
              "line_end": 97
            },
            {
              "name": "primeFactorsCount",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 112,
              "line_end": 121
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 124,
              "line_end": 135
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 138,
              "line_end": 146
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 149,
              "line_end": 159
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 162,
              "line_end": 171
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 174,
              "line_end": 179
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 190,
              "line_end": 203
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 206,
              "line_end": 212
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 215,
              "line_end": 219
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 222,
              "line_end": 226
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 228,
              "line_end": 233
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0006943489997865981
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "pro",
              "complexity": 9,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.95530002808664e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.502499996306142e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.456499962339876e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.653799987863749e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.2021000151871704e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.209800019656541e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.231100072298432e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "getsum",
              "complexity": 1,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "updatebit",
              "complexity": 1,
              "line_start": 10,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.893100023968145e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.621700009010965e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.986400017514825e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.5044999751553405e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 6.0123000366729684e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "update",
              "complexity": 3,
              "line_start": 5,
              "line_end": 15
            },
            {
              "name": "get",
              "complexity": 4,
              "line_start": 16,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 8.539099962945329e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "update",
              "complexity": 3,
              "line_start": 5,
              "line_end": 15
            },
            {
              "name": "get",
              "complexity": 4,
              "line_start": 16,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 8.06419993750751e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "arr_inp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "nCr",
              "complexity": 1,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.0474999625294004e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.027700040547643e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00018574099976831349
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 1.9748000340769067e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.041700049128849e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "cmpr",
              "complexity": 5,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011434600037318887
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "GetVal",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "GetNot",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "Dijkstra",
              "complexity": 44,
              "line_start": 23,
              "line_end": 91
            }
          ]
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00031165799919108395
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 28,
              "line_end": 30
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 41,
              "line_end": 42
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 48,
              "line_end": 50
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 52,
              "line_end": 56
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 63,
              "line_end": 89
            },
            {
              "name": "CycleFindDirected::__init__",
              "complexity": 0,
              "line_start": 124,
              "line_end": 127
            },
            {
              "name": "CycleFindDirected::add_edge",
              "complexity": 0,
              "line_start": 129,
              "line_end": 133
            },
            {
              "name": "CycleFindDirected::dfs",
              "complexity": 6,
              "line_start": 135,
              "line_end": 151
            },
            {
              "name": "CycleFindDirected::find",
              "complexity": 12,
              "line_start": 153,
              "line_end": 175
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 183,
              "line_end": 226
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.000398772000153258
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "prepare",
              "complexity": 6,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00011410499973862898
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "my_solve",
              "complexity": 7,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "get_cyclic",
              "complexity": 8,
              "line_start": 14,
              "line_end": 29
            },
            {
              "name": "do_dfs_bool",
              "complexity": 7,
              "line_start": 31,
              "line_end": 37
            },
            {
              "name": "dfs_bool",
              "complexity": 8,
              "line_start": 40,
              "line_end": 50
            },
            {
              "name": "do_dfs",
              "complexity": 8,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 63,
              "line_end": 77
            },
            {
              "name": "test",
              "complexity": 5,
              "line_start": 79,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00021252100032143062
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "get_input",
              "complexity": 1,
              "line_start": 6,
              "line_end": 13
            },
            {
              "name": "dfs",
              "complexity": 6,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "dfs_visit",
              "complexity": 15,
              "line_start": 29,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0001338319998467341
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "detect_cycle",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "dfs_visit",
              "complexity": 7,
              "line_start": 11,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 9.963800039258786e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "detect_cycle",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "dfs_visit",
              "complexity": 7,
              "line_start": 11,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 9.005999982036883e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "transpose",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "reverse_row",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "reverse_column",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "rotate_90",
              "complexity": 0,
              "line_start": 25,
              "line_end": 27
            },
            {
              "name": "rotate_180",
              "complexity": 0,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "rotate_270",
              "complexity": 0,
              "line_start": 32,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00012309199973969953
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "Matrix::__init__",
              "complexity": 6,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "Matrix::__add__",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 6,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "Matrix::dot_mul",
              "complexity": 3,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "Matrix::trace",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 62,
              "line_end": 70
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 72,
              "line_end": 79
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 81,
              "line_end": 88
            },
            {
              "name": "Matrix::mat_pow",
              "complexity": 3,
              "line_start": 90,
              "line_end": 101
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 108,
              "line_end": 112
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 114,
              "line_end": 122
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 124,
              "line_end": 131
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 133,
              "line_end": 136
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 140,
              "line_end": 146
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00046637899959023343
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "Matrix::__init__",
              "complexity": 6,
              "line_start": 15,
              "line_end": 25
            },
            {
              "name": "Matrix::__add__",
              "complexity": 3,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 6,
              "line_start": 36,
              "line_end": 44
            },
            {
              "name": "Matrix::dot_mul",
              "complexity": 3,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "Matrix::trace",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 61,
              "line_end": 69
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 71,
              "line_end": 78
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 80,
              "line_end": 87
            },
            {
              "name": "Matrix::mat_pow",
              "complexity": 3,
              "line_start": 89,
              "line_end": 100
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 107,
              "line_end": 111
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 113,
              "line_end": 121
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 123,
              "line_end": 130
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 132,
              "line_end": 135
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 139,
              "line_end": 145
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.000425691999225819
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "Matrix::__init__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "Matrix::__add__",
              "complexity": 3,
              "line_start": 23,
              "line_end": 30
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 6,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "Matrix::dot_mul",
              "complexity": 3,
              "line_start": 42,
              "line_end": 48
            },
            {
              "name": "Matrix::trace",
              "complexity": 1,
              "line_start": 50,
              "line_end": 55
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 57,
              "line_end": 65
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 67,
              "line_end": 74
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 76,
              "line_end": 83
            },
            {
              "name": "Matrix::mat_pow",
              "complexity": 3,
              "line_start": 85,
              "line_end": 96
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 103,
              "line_end": 107
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 109,
              "line_end": 117
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 119,
              "line_end": 126
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 128,
              "line_end": 131
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 135,
              "line_end": 141
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0004214450000290526
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "Matrix::__init__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 42,
              "line_end": 49
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 57,
              "line_end": 61
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 63,
              "line_end": 71
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 82,
              "line_end": 85
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 89,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002849470001820009
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "Matrix::__init__",
              "complexity": 1,
              "line_start": 16,
              "line_end": 22
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 24,
              "line_end": 32
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 34,
              "line_end": 41
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 57,
              "line_end": 61
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 63,
              "line_end": 71
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 82,
              "line_end": 85
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 89,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002739270003075944
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "rotate90",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "fliphor",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "flipver",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "eq",
              "complexity": 6,
              "line_start": 15,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.284599971375428e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.9694999941275455e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "rotate",
              "complexity": 3,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "v_mirror",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "h_mirror",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 18,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.7667999499244615e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 75,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 75,
          "functions": [
            {
              "name": "rotate",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "flip",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 72,
              "line_start": 17,
              "line_end": 122
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00022500499926536577
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "reverse_array",
              "complexity": 1,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "rotate",
              "complexity": 1,
              "line_start": 14,
              "line_end": 20
            },
            {
              "name": "make_list",
              "complexity": 1,
              "line_start": 22,
              "line_end": 27
            },
            {
              "name": "add_rotations",
              "complexity": 1,
              "line_start": 29,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011619900033110753
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "rotate_90",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "flip",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "compare_matrices",
              "complexity": 6,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "wrap",
              "complexity": 8,
              "line_start": 22,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.987199958530255e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "copy",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 37,
              "line_end": 44
            },
            {
              "name": "vert",
              "complexity": 1,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "gor",
              "complexity": 3,
              "line_start": 52,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001155379995907424
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "flipH",
              "complexity": 3,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "flipV",
              "complexity": 3,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "rotate90",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "check",
              "complexity": 6,
              "line_start": 21,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.364699963043677e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.468299968924839e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "rotate",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "flip_v",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "flip_h",
              "complexity": 1,
              "line_start": 14,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.263600011559902e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.0553999901458155e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "rotate",
              "complexity": 4,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "flipV",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "flipH",
              "complexity": 2,
              "line_start": 23,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010586999997030944
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.590400062123081e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.519599951890996e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "rotate_90",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "flip",
              "complexity": 3,
              "line_start": 9,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.256800043047406e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.4924000323808286e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "check",
              "complexity": 21,
              "line_start": 9,
              "line_end": 35
            },
            {
              "name": "rotate",
              "complexity": 6,
              "line_start": 38,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011187100062670652
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "vFlip",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "hFlip",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "rotate",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "check",
              "complexity": 9,
              "line_start": 14,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.50540007679956e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 100,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 100,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002520850002838415
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "h",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "r",
              "complexity": 3,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.9953000345558394e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.46729997950024e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8695000107982196e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1629999537253752e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.273399993806379e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.1662000360956881e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 31,
              "line_end": 47
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 62
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 71,
              "line_end": 73
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00018971800000144867
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0728999515995383e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.814500046748435e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.34149995574262e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 229,
        "functions_count": 49,
        "raw_output": {
          "file_complexity": 229,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 330
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 332,
              "line_end": 337
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 340,
              "line_end": 344
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 352
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 354,
              "line_end": 366
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 368,
              "line_end": 377
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 379,
              "line_end": 388
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 391,
              "line_end": 404
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 406,
              "line_end": 409
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 418,
              "line_end": 419
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 421,
              "line_end": 437
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 439,
              "line_end": 463
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 465,
              "line_end": 489
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 494,
              "line_end": 495
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 497,
              "line_end": 503
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 505,
              "line_end": 512
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 523,
              "line_end": 532
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 534,
              "line_end": 543
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 545,
              "line_end": 561
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 563,
              "line_end": 574
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 576,
              "line_end": 584
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0033029380001607933
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.10340000296128e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0448999748623464e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.378599972667871e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.772099989873823e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.3412999982829206e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.3012000130838715e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5098999938345514e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6791999769338872e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.2843999684264418e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.222000006848248e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.675800028053345e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "calc1",
              "complexity": 11,
              "line_start": 29,
              "line_end": 38
            },
            {
              "name": "calc2",
              "complexity": 11,
              "line_start": 40,
              "line_end": 49
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 50,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001765830002113944
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013364200003707083
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 250,
        "functions_count": 49,
        "raw_output": {
          "file_complexity": 250,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 330
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 332,
              "line_end": 337
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 340,
              "line_end": 344
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 352
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 354,
              "line_end": 366
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 368,
              "line_end": 377
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 379,
              "line_end": 388
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 391,
              "line_end": 404
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 406,
              "line_end": 409
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 418,
              "line_end": 419
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 421,
              "line_end": 437
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 439,
              "line_end": 463
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 465,
              "line_end": 489
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 494,
              "line_end": 495
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 497,
              "line_end": 503
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 505,
              "line_end": 512
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 523,
              "line_end": 532
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 534,
              "line_end": 543
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 545,
              "line_end": 561
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 563,
              "line_end": 574
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 576,
              "line_end": 584
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0034677079993343796
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.14249999873573e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.864699975674739e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.620099990570452e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.337899958452908e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "get_original_pieces",
              "complexity": 0,
              "line_start": 58,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00024713599941605935
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.843999952048762e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "check_board",
              "complexity": 6,
              "line_start": 14,
              "line_end": 21
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 24,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.9472000430105254e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "nSquaresToRecolorIn",
              "complexity": 0,
              "line_start": 21,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.200400043278933e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "nSquaresToRecolorIn",
              "complexity": 0,
              "line_start": 21,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.121600017650053e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "nSquaresToRecolorIn",
              "complexity": 0,
              "line_start": 21,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.913200064038392e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.7432000024418812e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.595499962713802e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "doxor",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.831799964857055e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 60,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001264180000362103
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.201499986171257e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 7,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.193899985693861e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.7642000532068778e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 16,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.456000003003282e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 73,
        "functions_count": 18,
        "raw_output": {
          "file_complexity": 73,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 27,
              "line_end": 38
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 39,
              "line_end": 49
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 59,
              "line_end": 64
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 67,
              "line_end": 71
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 76,
              "line_end": 77
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 78,
              "line_end": 79
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 83,
              "line_end": 102
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 103,
              "line_end": 109
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 111,
              "line_end": 114
            },
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 125,
              "line_end": 170
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00048401300045952667
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "solution",
              "complexity": 21,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.565399962710217e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.0363999434921425e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.7309999899880495e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 3.97849998989841e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "rt",
              "complexity": 1,
              "line_start": 6,
              "line_end": 9
            },
            {
              "name": "u",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.884200006927131e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 16,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 8.379799965041457e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 2,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 9.109099937631981e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 6,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 8.88579997990746e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.9713999942468945e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.253100087225903e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.3431999984022696e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.200700045155827e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 7.928900049591903e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 8.09619996289257e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.734800015488872e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.783800017728936e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 7.472099969163537e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.007499930798076e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 3.781099985644687e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.511299968929961e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 9.743400005390868e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.2810999730136245e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.414299994299654e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "exists",
              "complexity": 6,
              "line_start": 8,
              "line_end": 15
            },
            {
              "name": "exists2",
              "complexity": 6,
              "line_start": 17,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012451499969756696
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "pi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pl",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ti",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ts",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            },
            {
              "name": "fast_mod_exp",
              "complexity": 3,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "inverseMod",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 38,
              "line_end": 40
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 42,
              "line_end": 43
            },
            {
              "name": "D",
              "complexity": 12,
              "line_start": 46,
              "line_end": 66
            },
            {
              "name": "B",
              "complexity": 13,
              "line_start": 68,
              "line_end": 104
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0002733860001171706
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.606499937333865e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.216799945628736e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.820100002689287e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.524400057765888e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.488199960585916e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.371000017679762e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.409299981489312e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "SG::__init__",
              "complexity": 5,
              "line_start": 11,
              "line_end": 24
            },
            {
              "name": "SG::_update",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "SG::update",
              "complexity": 1,
              "line_start": 27,
              "line_end": 35
            },
            {
              "name": "SG::get",
              "complexity": 0,
              "line_start": 36,
              "line_end": 38
            },
            {
              "name": "SG::check",
              "complexity": 0,
              "line_start": 39,
              "line_end": 40
            },
            {
              "name": "SG::query",
              "complexity": 5,
              "line_start": 41,
              "line_end": 58
            },
            {
              "name": "SG::query_all",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "SG::max_right",
              "complexity": 15,
              "line_start": 64,
              "line_end": 88
            },
            {
              "name": "SG::min_left",
              "complexity": 16,
              "line_start": 89,
              "line_end": 112
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 123,
              "line_end": 124
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0004148819998590625
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.154500053729862e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.882200028077932e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.267799926717998e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.1777999942714814e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00018403699959890218
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 109,
        "functions_count": 43,
        "raw_output": {
          "file_complexity": 109,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 344,
              "line_end": 348
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 350,
              "line_end": 364
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 366,
              "line_end": 380
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 382,
              "line_end": 397
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 401,
              "line_end": 403
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 405,
              "line_end": 410
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 414,
              "line_end": 421
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 425,
              "line_end": 430
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 434,
              "line_end": 438
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 442,
              "line_end": 461
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 465,
              "line_end": 470
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 471,
              "line_end": 473
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 475,
              "line_end": 497
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0024768199991740403
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.525600070337532e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.4855999729188625e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.405199954111595e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.828000030305702e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.402100007107947e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.5015000068815425e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0539000615826808e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "fun",
              "complexity": 9,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.5074999434291385e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.500599996186793e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 31,
              "line_end": 47
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 62
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 71,
              "line_end": 73
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00023218699971039314
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.104600040795049e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.133299979817821e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.5306999961903784e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.346299945405917e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.4454999877198134e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.513499970926205e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.078800000366755e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.670199981163023e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4326999917102512e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.146899962302996e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.914500055339886e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.924900000944035e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.509599991957657e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 1,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.238799985818332e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.2701999771234114e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.322100085119018e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 5.143699945620028e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.9854000280902255e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.151800021645613e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 7.06529999661143e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.764099983527558e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.863300025841454e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.5226999898441136e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 6.920099986018613e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.1338000301038846e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.711000044859247e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 17,
              "line_end": 81
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 90
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 92,
              "line_end": 100
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 102,
              "line_end": 109
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 125,
              "line_end": 128
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 132,
              "line_end": 135
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 0.00031265899997379165
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "SegTree::__init__",
              "complexity": 2,
              "line_start": 2,
              "line_end": 13
            },
            {
              "name": "SegTree::update",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "SegTree::query",
              "complexity": 6,
              "line_start": 22,
              "line_end": 39
            },
            {
              "name": "SegTree::__str__",
              "complexity": 0,
              "line_start": 41,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002003879999392666
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "array_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "vary",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "makedict",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 9.745399984240066e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 6.0272999689914286e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.951400049118092e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.27999993917183e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.514600030030124e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.439400006755022e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 5.246899945632322e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.735999962373171e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.082399977458408e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "main",
              "complexity": 30,
              "line_start": 6,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.542000043438748e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.527200068579987e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.298799937416334e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "get_sign_1",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "get_signs_2",
              "complexity": 14,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010751300033007283
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.159299977705814e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 50,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001270099992325413
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 115,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 115,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "readlist",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "readmap",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00028774200018233387
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.224699973245151e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.029600040666992e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "getTransIntList",
              "complexity": 4,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.649299979879288e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "i_ints",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "calc",
              "complexity": 7,
              "line_start": 7,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.432099962694338e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.135800008953083e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.0266999601735733e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.471999990433687e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 5.488300030265236e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.679899964481592e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.130900040559936e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 55,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013286099965625908
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "check",
              "complexity": 16,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013388299976213602
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.446799958823249e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.7601000258291606e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.5417000617599115e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.491600000415929e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 5.966199933027383e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.596399998670677e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.5176999770337716e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0839999706367962e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9166000129189342e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3716000466956757e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3786000636173412e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.873600012913812e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 18,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 33,
              "line_end": 38
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 40,
              "line_end": 51
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014630500027124071
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.6728999475599267e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7563999790581875e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.145100006600842e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4837999515293632e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4857999303785618e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.4985000386077445e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.757300015015062e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.1401999472582247e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3365000086196233e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3324000721913762e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0669000150519423e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3283999325940385e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3706000572710764e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.6499000088952016e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5317999643448275e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4477000149781816e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7764000403985847e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.484600008756388e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.207000008842442e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 15,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 42,
              "line_end": 50
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00017374799972458277
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.734999972948572e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.826099939236883e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.604999943083385e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.881299926433712e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8474999706086237e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5179000001808163e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2313000297581311e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.698200048849685e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7362999642500654e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5438999980688095e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0668000363220926e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.678099917829968e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "it",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8935000045748893e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "helper",
              "complexity": 3,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.3293000342382584e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.660800004785415e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9976000405440573e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.394499915681081e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "array_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "vary",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "makedict",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.116299977700692e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.953499981435016e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00021553700025833678
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.447500057518482e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3243999748956412e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1830999685334973e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.595899968582671e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.37329993271851e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5227000151062384e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.374499945290154e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00011583900050027296
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "pprint",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "solve",
              "complexity": 22,
              "line_start": 6,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00011920399992959574
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 5,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00015395100035675569
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.963999996718485e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 9.260500064556254e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "main",
              "complexity": 45,
              "line_start": 1,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00015484200048376806
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 1,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.23570001355256e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.13340004949714e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00013293100073497044
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 4,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 8.507000075042015e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "bad",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            },
            {
              "name": "make_branch",
              "complexity": 2,
              "line_start": 8,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 17,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00011362500026734779
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 29,
              "line_start": 1,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012595699990924913
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "main",
              "complexity": 32,
              "line_start": 1,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012425500062818173
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "dfs",
              "complexity": 7,
              "line_start": 20,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 9.021000005304813e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.519199971284252e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 6.98710000506253e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 6.708599994453834e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "construct_tree",
              "complexity": 25,
              "line_start": 2,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 9.461900026508374e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010860400016099447
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "swap",
              "complexity": 0,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.814800028427271e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 8,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.489100062230136e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.8259999605070334e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.8552000407653395e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.4011999964131974e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.7949000620283186e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.7198999709507916e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.0715999602980446e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.016299994371366e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.59069999831263e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.100699970877031e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "spf",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 27,
              "line_end": 27
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "pmat2",
              "complexity": 3,
              "line_start": 32,
              "line_end": 36
            },
            {
              "name": "iseven",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "seive",
              "complexity": 6,
              "line_start": 40,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00016539199987164466
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.188900038570864e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.320300038467394e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001643999994485057
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 106,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 106,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 257
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 259,
              "line_end": 271
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 273,
              "line_end": 285
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 324,
              "line_end": 330
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.001544151999951282
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 67,
          "functions": [
            {
              "name": "solve",
              "complexity": 66,
              "line_start": 7,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00022506400000565918
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 53,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014497299980575917
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011884399918926647
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 46,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014309000016510254
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 39,
              "line_start": 1,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010684100016078446
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 82,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 82,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 82,
              "line_start": 13,
              "line_end": 107
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00028409500009729527
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "main",
              "complexity": 39,
              "line_start": 1,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.601100009604124e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016392900033679325
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "build_grid",
              "complexity": 5,
              "line_start": 21,
              "line_end": 36
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 44,
              "line_end": 51
            },
            {
              "name": "check2",
              "complexity": 7,
              "line_start": 53,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00032236799961538054
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 83,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 83,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00020567800038406858
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 83,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 83,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00022676800017507048
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014989200008130865
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 98,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 98,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 69,
              "line_end": 79
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 87,
              "line_end": 93
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 96
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 98,
              "line_end": 115
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 117,
              "line_end": 118
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 123,
              "line_end": 127
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 129,
              "line_end": 143
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 145,
              "line_end": 159
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 161,
              "line_end": 176
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 180,
              "line_end": 182
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 184,
              "line_end": 189
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 193,
              "line_end": 200
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 204,
              "line_end": 209
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 213,
              "line_end": 217
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 221,
              "line_end": 240
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 244,
              "line_end": 249
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 250,
              "line_end": 252
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 254,
              "line_end": 276
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 315,
              "line_end": 321
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.001364943999760726
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000125217000459088
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "main",
              "complexity": 48,
              "line_start": 1,
              "line_end": 91
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00019936600074288435
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 90,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00021062700034235604
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 90,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001944169998751022
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.008400032442296e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.4733999857271556e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0001169400002254406
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.114500047260663e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.8302000575640704e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.323399985471042e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5839999832678586e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.7772000066761393e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.008700059581315e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.6961000003211666e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "is_center",
              "complexity": 21,
              "line_start": 6,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.001900070870761e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.4994999370828737e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.6348000068974216e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.695899951911997e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.6447000133630354e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.0377999792108312e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.784899985883385e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.474299996421905e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.700800011254614e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.980599947477458e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.577800023573218e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.969400015397696e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.166999977111118e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5749999874969944e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.082600000605453e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 35,
              "line_end": 40
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 55,
              "line_end": 68
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 84,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00027553000018087914
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 8,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.403199975262396e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.139000025636051e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 8.111300030577695e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 7.454099977621809e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.135899987682933e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 2,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.406200034485664e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.7070999749412294e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.196099987690104e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "prefix_func",
              "complexity": 6,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.965500036429148e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "fn",
              "complexity": 4,
              "line_start": 7,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.158000072289724e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.2000999706506263e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.3855999895895366e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.9967999833170325e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.7102000128943473e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.0527999115292914e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.7502999980933964e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.564899932622211e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.786100023717154e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.144999962183647e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.6660999790474307e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.371399998286506e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.2473999959183857e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.265399987460114e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.5378999705717433e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.9707000319613144e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.821700000931742e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.641900002548937e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.243000057613244e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.572400070581352e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 2,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.292599977721693e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.245500066550449e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.781099985644687e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "read_a_num",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "read_a_str",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "check_ticket",
              "complexity": 16,
              "line_start": 18,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.143500079109799e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 7,
              "line_end": 35
            },
            {
              "name": "is_golden",
              "complexity": 4,
              "line_start": 37,
              "line_end": 50
            },
            {
              "name": "get_tests",
              "complexity": 1,
              "line_start": 52,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00013138800022716168
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 24,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010792299963213736
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "chk",
              "complexity": 11,
              "line_start": 4,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.83190000927425e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.023499943490606e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 1,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.329599924967624e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.7238000408688094e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.69969997741282e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "gcd",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "tobinary",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "lowerBound",
              "complexity": 2,
              "line_start": 18,
              "line_end": 23
            },
            {
              "name": "upperBound",
              "complexity": 3,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primesInRange",
              "complexity": 9,
              "line_start": 30,
              "line_end": 42
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 43,
              "line_end": 54
            },
            {
              "name": "isPrime",
              "complexity": 4,
              "line_start": 55,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00018290499974682461
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.497599936963525e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 58,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.078099992620992e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00028634999944188166
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 9.288499950343976e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 58,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00015131500003917608
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 57,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00011492700014059665
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 180,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 180,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0003255829997215187
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 61,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00017108300016843714
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00011992599957011407
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00014710799950989895
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.510299979505362e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 4.9853999371407554e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 8.834700020088349e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.1607000386866275e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "can_win",
              "complexity": 11,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.512300049304031e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "can_win",
              "complexity": 7,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 7.074400036799489e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 4.7529000767099205e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "findans",
              "complexity": 11,
              "line_start": 7,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.62960003662738e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 7.050300064292969e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.3531000048678834e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.508600002533058e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.8422000216087326e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.6209000427334104e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.546700008882908e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.2161000490305014e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.199000002496177e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.1960000089602545e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.261899968900252e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010070000007544877
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.310000051395036e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 8.105300003080629e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "qwe",
              "complexity": 5,
              "line_start": 14,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.897999992361292e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.68459997541504e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.0053999984811526e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.877000032545766e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.297099985706154e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.83190000927425e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.799899918201845e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.9902999964833725e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 3.8162000237207394e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.0675000238697976e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 17,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.525399956241017e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 8.092299958661897e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.2058000619581435e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "main",
              "complexity": 35,
              "line_start": 4,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001031339998007752
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 8.272600007330766e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "lr",
              "complexity": 9,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.5744999372109305e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.688700002792757e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.9042999307857826e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.9743999625206925e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 1,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010222299988527084
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "get_input_list",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 8.517999958712608e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.507500034378609e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "run",
              "complexity": 31,
              "line_start": 13,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.270700007211417e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "find_gcd",
              "complexity": 1,
              "line_start": 16,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011144000018248335
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.242799918254605e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 7.455000013578683e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.8762999793107156e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.221100087102968e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 6,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 7.21260003047064e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 4,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 16,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.222800038813148e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011053799971705303
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "isValid",
              "complexity": 10,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "fill",
              "complexity": 7,
              "line_start": 9,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.527300047309836e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010911600020335754
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "solve",
              "complexity": 30,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.913900026323972e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.53799999479088e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.165300070890225e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.951999941724353e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "dprint",
              "complexity": 1,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 19,
              "line_end": 61
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 64,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014814899986959063
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011457600066933082
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "nexts",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "nextint",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "snexts",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "snextint",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "matrix",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014852999993308913
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010439700054121204
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 9,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014125699999567587
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.827599958749488e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "gene",
              "complexity": 1,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "judge",
              "complexity": 4,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "dye",
              "complexity": 1,
              "line_start": 27,
              "line_end": 30
            },
            {
              "name": "check",
              "complexity": 3,
              "line_start": 31,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011409499984438298
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00012587699984578649
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0004473939998206333
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "rint",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "writable",
              "complexity": 3,
              "line_start": 8,
              "line_end": 20
            },
            {
              "name": "fill_ink",
              "complexity": 0,
              "line_start": 22,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011031800022465177
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.563300005131168e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014336000003822846
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "check",
              "complexity": 7,
              "line_start": 8,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001588200002515805
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "color8",
              "complexity": 2,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014156700035528047
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "transform",
              "complexity": 2,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "take_care",
              "complexity": 4,
              "line_start": 7,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010595999992801808
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "check",
              "complexity": 16,
              "line_start": 11,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.93299998602015e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "is_squad",
              "complexity": 2,
              "line_start": 6,
              "line_end": 10
            },
            {
              "name": "cv",
              "complexity": 9,
              "line_start": 12,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017651300004217774
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 67,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.068100007425528e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001016610003716778
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011450600050011417
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "modInverse",
              "complexity": 3,
              "line_start": 13,
              "line_end": 29
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 36,
              "line_end": 37
            },
            {
              "name": "find_gcd",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001972519994524191
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "hash",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "sol",
              "complexity": 40,
              "line_start": 6,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011529800030984916
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.521799979149364e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.28819996866514e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.822099981538486e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.835000047227368e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "next",
              "complexity": 1,
              "line_start": 6,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.021499964641407e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.0072999986005016e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getUpper",
              "complexity": 3,
              "line_start": 36,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001195049999296316
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.047199960652506e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "max_splits",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.247799956327071e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.943100015632808e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.401700026501203e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.92409994371701e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.283599981950829e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "gen_points",
              "complexity": 0,
              "line_start": 7,
              "line_end": 15
            },
            {
              "name": "mark_points",
              "complexity": 6,
              "line_start": 26,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.928799979912583e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.402500012976816e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.673199949436821e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "stones_after",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7752000278269406e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.433399979257956e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.2492999960377347e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.8725999325397424e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.0001500429998486652
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 55,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00018025999997917097
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.274000002624234e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.7091000447398983e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 8,
              "line_end": 22
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 40,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 59,
              "line_end": 62
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 66,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00018877599995903438
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.7469000492128544e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.582399964827346e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.131600028107641e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.5445999603543896e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.261899968900252e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.8351000259572174e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.430500055401353e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.5026999537658412e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.258299991808599e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00011767199976020493
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.440200013457797e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.1218000660592224e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.916299985779915e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.022700002475176e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.0345999877899885e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00015404999976453837
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.000176712999746087
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 8.569199962948915e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 7.905900019977707e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "countR",
              "complexity": 3,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "countB",
              "complexity": 3,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "countG",
              "complexity": 3,
              "line_start": 16,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.004000003187684e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "givestringsk",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "countdifferences",
              "complexity": 3,
              "line_start": 10,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.982299990137108e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.697699998563621e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 63,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 63,
          "functions": [
            {
              "name": "main",
              "complexity": 63,
              "line_start": 1,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.9729000137595e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 67,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011157100016134791
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "user99",
              "complexity": 15,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.3400999857112765e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.623699987860164e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.153800000494812e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "Read::int",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "Read::list",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            },
            {
              "name": "Read::list_int",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 18,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.509400034497958e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.283800005097874e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.8629999330150895e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.897000002936693e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "mismatch",
              "complexity": 3,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.956300017511239e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.417999950121157e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.97930002186331e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "gen",
              "complexity": 7,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.989300007058773e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "check",
              "complexity": 9,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.279900026129326e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.1883999882848e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.3383000300091226e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.336299960210454e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.138899955956731e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 7.493100019928534e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "f",
              "complexity": 12,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.48960002156673e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 5.830000009154901e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.5777000195812434e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.207099962310167e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.7960000301827677e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00011126000026706606
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.7047999942151364e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "bf",
              "complexity": 8,
              "line_start": 6,
              "line_end": 15
            },
            {
              "name": "max_sum",
              "complexity": 10,
              "line_start": 17,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00012347299980319804
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "brute",
              "complexity": 6,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 7.7546000284201e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "max_subarray",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.763000015373109e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.5988000490760896e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.9425999855448026e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.849199947580928e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "max_sub",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 9.696300003270153e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.238200042687822e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.1878999581967946e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.865300004690653e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.7630999941029586e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.2432000150729436e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.497600027912995e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.449500036367681e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.0236000131699257e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.098799970757682e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.260099947510753e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.2092000108386856e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.8544000088004395e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 5.515399971045554e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.546800078562228e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6900999980862252e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 6,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.698999989865115e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7410999791754875e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.081799968640553e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.949700072145788e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6179999875021167e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "S",
              "complexity": 1,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "IR",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "LIR",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "SR",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "LSR",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "A",
              "complexity": 11,
              "line_start": 28,
              "line_end": 45
            },
            {
              "name": "B",
              "complexity": 0,
              "line_start": 48,
              "line_end": 50
            },
            {
              "name": "C",
              "complexity": 0,
              "line_start": 53,
              "line_end": 55
            },
            {
              "name": "D",
              "complexity": 0,
              "line_start": 58,
              "line_end": 60
            },
            {
              "name": "E",
              "complexity": 0,
              "line_start": 63,
              "line_end": 65
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 68,
              "line_end": 70
            },
            {
              "name": "G",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "H",
              "complexity": 0,
              "line_start": 78,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00013714799933950417
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 14,
              "line_end": 25
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "charIN",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "arrIN",
              "complexity": 0,
              "line_start": 33,
              "line_end": 34
            },
            {
              "name": "eld",
              "complexity": 0,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "lgcd",
              "complexity": 1,
              "line_start": 41,
              "line_end": 45
            },
            {
              "name": "ms",
              "complexity": 6,
              "line_start": 47,
              "line_end": 60
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 62,
              "line_end": 68
            },
            {
              "name": "flush",
              "complexity": 0,
              "line_start": 72,
              "line_end": 73
            },
            {
              "name": "fac",
              "complexity": 1,
              "line_start": 76,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00018832499972631922
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.3964000067499e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2722999347024597e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9575999178632628e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "APaintTheNumbers::solve",
              "complexity": 11,
              "line_start": 6,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.8311999560391996e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 16,
              "line_end": 31
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 40,
              "line_end": 44
            },
            {
              "name": "FastIO::_fill",
              "complexity": 0,
              "line_start": 46,
              "line_end": 49
            },
            {
              "name": "FastIO::read",
              "complexity": 1,
              "line_start": 51,
              "line_end": 54
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 56,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 82
            },
            {
              "name": "get_array",
              "complexity": 0,
              "line_start": 88,
              "line_end": 89
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 92,
              "line_end": 93
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00019684099970618263
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6159999833907932e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2232000446820166e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0608000088250265e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6330000764573924e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.622799977165414e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "nospace",
              "complexity": 0,
              "line_start": 25,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.682599996565841e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2442999579652678e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.360400048928568e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "ri",
              "complexity": 1,
              "line_start": 12,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.065499954071129e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.388500070082955e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8383999304205645e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.320299972780049e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.017799943132559e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5208000806742348e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.106000010826392e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6480999875057023e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.080000012938399e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.973300019628368e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "zz",
              "complexity": 1,
              "line_start": 6,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00035120199936500285
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 7.409899990307167e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 4,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1523_C",
      "tags": "brute force,data structures,greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 7.232600000861567e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 8,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "0008_E",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00016124400008266093
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "calc",
              "complexity": 19,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0008_E",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 9.13419999051257e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "raschot",
              "complexity": 19,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0008_E",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 7.925899990368634e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7551999664865434e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.360500002396293e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 9.441800011700252e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7121000130136963e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.85349999810569e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.3663000067463145e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 7.41300000299816e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.439499960222747e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.9936999706260394e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.680000034160912e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.066899924102472e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 5.443299960461445e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "counter",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 5.861099998583086e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.62889998339233e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.8424000447557773e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "check_x",
              "complexity": 3,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.2159999793511815e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "countall",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.6579000152414665e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.292299996042857e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.05490005100728e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.522500057646539e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 63,
              "line_end": 74
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 92,
              "line_end": 105
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 107,
              "line_end": 114
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.000268986999799381
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.967400036548497e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7021000278182328e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.2281999918050133e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.9436999536992516e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.1781000214105006e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.1670999558409676e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.515800042601768e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.3754999347147532e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.681200046732556e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.949600027728593e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.1860999368072953e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.0108000171603635e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.7964000107895117e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.903499989770353e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "occurrences",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "CodeforcesTask23ASolution::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "CodeforcesTask23ASolution::read_input",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "CodeforcesTask23ASolution::process_task",
              "complexity": 6,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "CodeforcesTask23ASolution::get_result",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 6.04840006417362e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.2451000151922926e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "cic",
              "complexity": 9,
              "line_start": 2,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.320199968788074e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "fun",
              "complexity": 14,
              "line_start": 5,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.510500002652407e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.3223999960464425e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.9576999875425827e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "maxlen",
              "complexity": 6,
              "line_start": 8,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.6390000130049884e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.340399987588171e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.997599949594587e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.988600044773193e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "revn",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "dd",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "ddl",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "sieve",
              "complexity": 10,
              "line_start": 19,
              "line_end": 32
            },
            {
              "name": "divs",
              "complexity": 6,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "divn",
              "complexity": 5,
              "line_start": 42,
              "line_end": 51
            },
            {
              "name": "prime",
              "complexity": 6,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "convn",
              "complexity": 1,
              "line_start": 59,
              "line_end": 64
            },
            {
              "name": "cdiv",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.00020792200029973174
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.088700006832369e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.065900025627343e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.957499964395538e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.8844000553363003e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.6640000214683823e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.988699998240918e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.6691999917384237e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.491799957875628e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "podstroka",
              "complexity": 6,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.9323999772022944e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.0006406370002878248
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.0749000213982072e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.807199937000405e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.28819996866514e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.4185000256693456e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.9877999875461683e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.4916999791457783e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "cnt",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.616799949668348e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.4725999537622556e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 9.381600011693081e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.529700006765779e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.371499977016356e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "TPoint::__init__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "TPoint::__str__",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "TPoint::__eq__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "TPoint::__hash__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "sortKey",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "heuristic",
              "complexity": 3,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "addPoint",
              "complexity": 2,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "extend",
              "complexity": 20,
              "line_start": 42,
              "line_end": 61
            },
            {
              "name": "ReadNext",
              "complexity": 3,
              "line_start": 63,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003459619993009255
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 9,
              "line_end": 38
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002738759994826978
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 9,
              "line_end": 38
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00023877000057836995
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "st",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "pr",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 31,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013035599931754405
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.726500072953058e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.209400013787672e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015299799997592345
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "TPoint::__init__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "TPoint::__str__",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "TPoint::__eq__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "TPoint::__hash__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "sortKey",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "heuristic",
              "complexity": 3,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "addPoint",
              "complexity": 2,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "extend",
              "complexity": 20,
              "line_start": 42,
              "line_end": 61
            },
            {
              "name": "ReadNext",
              "complexity": 3,
              "line_start": 63,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0005574420001721592
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011876400003529852
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010378499973739963
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "distance",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "shorthest_path",
              "complexity": 3,
              "line_start": 12,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011668000024656067
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 9
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.930700070981402e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "matching",
              "complexity": 41,
              "line_start": 6,
              "line_end": 53
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 55,
              "line_end": 73
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 79,
              "line_end": 83
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 84,
              "line_end": 92
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 93,
              "line_end": 100
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 101,
              "line_end": 104
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 106,
              "line_end": 112
            }
          ]
        }
      },
      "problem": "0387_D",
      "tags": "graph matchings",
      "tool": "complexipy",
      "execution_time": 0.00038893300006748177
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "f",
              "complexity": 6,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "g",
              "complexity": 3,
              "line_start": 30,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0888_F",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 9.706299988465616e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 6,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 35,
              "line_end": 39
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 40,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 49,
              "line_end": 56
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00020911400042677997
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 128,
        "functions_count": 50,
        "raw_output": {
          "file_complexity": 128,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0031366339999294723
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 118,
        "functions_count": 35,
        "raw_output": {
          "file_complexity": 118,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 71,
              "line_end": 81
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 87
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 89,
              "line_end": 95
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 97,
              "line_end": 98
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 100,
              "line_end": 117
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 119,
              "line_end": 120
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 123,
              "line_end": 133
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 135,
              "line_end": 136
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 138,
              "line_end": 139
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 141,
              "line_end": 147
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 152,
              "line_end": 169
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 171,
              "line_end": 172
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 176,
              "line_end": 180
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 182,
              "line_end": 196
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 198,
              "line_end": 212
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 214,
              "line_end": 229
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 233,
              "line_end": 235
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 237,
              "line_end": 242
            },
            {
              "name": "LazySegTree::__init__",
              "complexity": 54,
              "line_start": 248,
              "line_end": 354
            },
            {
              "name": "makeNode",
              "complexity": 0,
              "line_start": 360,
              "line_end": 362
            },
            {
              "name": "getTotal",
              "complexity": 0,
              "line_start": 365,
              "line_end": 366
            },
            {
              "name": "getCount",
              "complexity": 0,
              "line_start": 369,
              "line_end": 370
            },
            {
              "name": "nodeOp",
              "complexity": 0,
              "line_start": 376,
              "line_end": 381
            },
            {
              "name": "mapping",
              "complexity": 1,
              "line_start": 387,
              "line_end": 392
            },
            {
              "name": "composition",
              "complexity": 1,
              "line_start": 395,
              "line_end": 397
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 401,
              "line_end": 411
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 413,
              "line_end": 425
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 427,
              "line_end": 439
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0020969939996575704
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.9562000387813896e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.6226000197057147e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 5,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 8.19650003904826e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "func",
              "complexity": 11,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.734600058029173e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.389700062456541e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 73,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.000272333999419061
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 73,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0002597900002001552
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.557399956363952e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.823099970963085e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.394199979491532e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00013186799969844287
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 33,
              "line_start": 10,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00015543300014542183
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "can",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "calc",
              "complexity": 3,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "sm",
              "complexity": 14,
              "line_start": 23,
              "line_end": 58
            },
            {
              "name": "call",
              "complexity": 0,
              "line_start": 60,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00011585900028876495
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "pop_count",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "check",
              "complexity": 2,
              "line_start": 12,
              "line_end": 20
            },
            {
              "name": "prepare",
              "complexity": 8,
              "line_start": 26,
              "line_end": 37
            },
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 39,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00018488900059310254
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "add",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "digitize",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "rec",
              "complexity": 11,
              "line_start": 19,
              "line_end": 43
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 45,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00014726799963682424
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "Graph::addEdge",
              "complexity": 2,
              "line_start": 30,
              "line_end": 43
            },
            {
              "name": "Graph::addVertex",
              "complexity": 0,
              "line_start": 45,
              "line_end": 47
            },
            {
              "name": "Graph::maxFlow",
              "complexity": 15,
              "line_start": 49,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.00015545299993391382
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "edge::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "add",
              "complexity": 0,
              "line_start": 7,
              "line_end": 11
            },
            {
              "name": "addedge",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "bfs",
              "complexity": 7,
              "line_start": 17,
              "line_end": 33
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 35,
              "line_end": 53
            },
            {
              "name": "dinic",
              "complexity": 1,
              "line_start": 55,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.00016305700046359561
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "edge::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "add",
              "complexity": 0,
              "line_start": 7,
              "line_end": 11
            },
            {
              "name": "addedge",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "bfs",
              "complexity": 7,
              "line_start": 17,
              "line_end": 34
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 36,
              "line_end": 54
            },
            {
              "name": "dinic",
              "complexity": 1,
              "line_start": 56,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.00017685300008452032
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "addedge",
              "complexity": 0,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "bfs",
              "complexity": 7,
              "line_start": 31,
              "line_end": 41
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 45,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.00013192799997341353
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "mu",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "calc",
              "complexity": 8,
              "line_start": 12,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1096_E",
      "tags": "combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00011816200003522681
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "inverse",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "C",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "candy",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            },
            {
              "name": "count_game",
              "complexity": 8,
              "line_start": 22,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1096_E",
      "tags": "combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00011182100024598185
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 13,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1111_D",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00016133499957504682
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "add",
              "complexity": 1,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "sub",
              "complexity": 1,
              "line_start": 27,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1111_D",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00016560199946979992
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1141_F2",
      "tags": "data structures,greedy",
      "tool": "complexipy",
      "execution_time": 5.1187000281061046e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "get_gdict",
              "complexity": 3,
              "line_start": 12,
              "line_end": 19
            },
            {
              "name": "initial_check",
              "complexity": 3,
              "line_start": 22,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001404550002916949
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 7,
              "line_end": 27
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 29,
              "line_end": 33
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 39,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 66,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0002466850000928389
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 6,
              "line_end": 24
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00022840099973109318
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0001608239999768557
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00011179099965374917
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "check",
              "complexity": 16,
              "line_start": 21,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00015427099970111158
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00011597899992921157
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve2",
              "complexity": 21,
              "line_start": 5,
              "line_end": 22
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 24,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 7.872900005168049e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 4,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 26,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 9.782400047697593e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "problem",
              "complexity": 11,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 8.256599994638236e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "problem",
              "complexity": 25,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 7.184500009316253e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "find_it",
              "complexity": 23,
              "line_start": 5,
              "line_end": 22
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 24,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00016643399976601359
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 8.20340001155273e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 6.271800066315336e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 93,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 93,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00023315999987971736
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 93,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 93,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0002599700001155725
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 7.785700017848285e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "check",
              "complexity": 8,
              "line_start": 19,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 34,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00011263200030953158
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 58,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00016005100042093545
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "problem",
              "complexity": 25,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 6.574400049430551e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00011940600052184891
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "solve",
              "complexity": 17,
              "line_start": 12,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0001067120001607691
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "NextStringIndex::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "NextStringIndex::__getitem__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "NextStringIndex::make_next",
              "complexity": 6,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 27,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00017627199940761784
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 6.848999964859104e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 67,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00026385799992567627
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013445300010062056
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 4,
              "line_end": 24
            },
            {
              "name": "array_shrinking",
              "complexity": 11,
              "line_start": 27,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010023899994848762
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 6,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00025741500030562747
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 7,
              "line_end": 26
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 32,
              "line_end": 36
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 46,
              "line_end": 53
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 54,
              "line_end": 57
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002447320002829656
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 15,
              "line_end": 32
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 41,
              "line_end": 45
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 47,
              "line_end": 55
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 57,
              "line_end": 64
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 73,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00020343399955891073
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 267,
        "functions_count": 55,
        "raw_output": {
          "file_complexity": 267,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 76,
              "line_end": 103
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 104,
              "line_end": 130
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 132,
              "line_end": 142
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 144,
              "line_end": 155
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 157,
              "line_end": 171
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 173,
              "line_end": 187
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 190,
              "line_end": 193
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 195,
              "line_end": 203
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 205,
              "line_end": 217
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 219,
              "line_end": 220
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 226,
              "line_end": 231
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 233,
              "line_end": 242
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 244,
              "line_end": 262
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 270,
              "line_end": 273
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 275,
              "line_end": 277
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 279,
              "line_end": 281
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 283,
              "line_end": 285
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 287,
              "line_end": 303
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 307,
              "line_end": 327
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 330,
              "line_end": 333
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 335,
              "line_end": 343
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 346,
              "line_end": 353
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 356,
              "line_end": 361
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 363,
              "line_end": 375
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 377,
              "line_end": 386
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 388,
              "line_end": 397
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 400,
              "line_end": 413
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 415,
              "line_end": 418
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 427,
              "line_end": 428
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 430,
              "line_end": 446
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 448,
              "line_end": 472
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 474,
              "line_end": 498
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 503,
              "line_end": 504
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 506,
              "line_end": 512
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 523,
              "line_end": 530
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 532,
              "line_end": 541
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 543,
              "line_end": 552
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 554,
              "line_end": 570
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 572,
              "line_end": 583
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 585,
              "line_end": 593
            },
            {
              "name": "Dinic::__init__",
              "complexity": 0,
              "line_start": 597,
              "line_end": 599
            },
            {
              "name": "Dinic::add_edge",
              "complexity": 0,
              "line_start": 601,
              "line_end": 605
            },
            {
              "name": "Dinic::add_multi_edge",
              "complexity": 0,
              "line_start": 607,
              "line_end": 611
            },
            {
              "name": "Dinic::bfs",
              "complexity": 7,
              "line_start": 613,
              "line_end": 625
            },
            {
              "name": "Dinic::dfs",
              "complexity": 8,
              "line_start": 627,
              "line_end": 639
            },
            {
              "name": "Dinic::flow",
              "complexity": 3,
              "line_start": 641,
              "line_end": 651
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0039057750000210945
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.013200047367718e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.06233758400048828
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018358600027568173
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 8,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014109699986875057
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "f",
              "complexity": 29,
              "line_start": 1,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011901400011993246
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.980199941608589e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.268800007092068e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.802900043112459e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "solve",
              "complexity": 34,
              "line_start": 8,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016066300031525316
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 11,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00015189599980658386
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 32,
              "line_end": 32
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 35,
              "line_end": 35
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 38,
              "line_end": 38
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 41,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013684799978364026
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 54,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 54,
          "functions": [
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 11,
              "line_end": 69
            },
            {
              "name": "tup",
              "complexity": 0,
              "line_start": 72,
              "line_end": 74
            },
            {
              "name": "untup",
              "complexity": 0,
              "line_start": 77,
              "line_end": 79
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 82,
              "line_end": 117
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003061179995711427
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.52120004108292e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "examA",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "examB",
              "complexity": 2,
              "line_start": 14,
              "line_end": 24
            },
            {
              "name": "examC",
              "complexity": 25,
              "line_start": 26,
              "line_end": 62
            },
            {
              "name": "examD",
              "complexity": 6,
              "line_start": 64,
              "line_end": 94
            },
            {
              "name": "examE",
              "complexity": 21,
              "line_start": 96,
              "line_end": 120
            },
            {
              "name": "examF",
              "complexity": 0,
              "line_start": 126,
              "line_end": 129
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 134,
              "line_end": 134
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 135,
              "line_end": 135
            },
            {
              "name": "LSI",
              "complexity": 0,
              "line_start": 136,
              "line_end": 136
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 137,
              "line_end": 137
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 138,
              "line_end": 138
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00041520299964759033
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001591300006111851
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ec",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.264600000984501e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ec",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.379099977493752e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "calcdp",
              "complexity": 7,
              "line_start": 4,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "ip",
              "complexity": 1,
              "line_start": 27,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.420799960935256e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "rr",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "rri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "rrm",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "mus",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "ms",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "ar",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ppm",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "ppa",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "ppl",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "fake_input",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "read",
              "complexity": 0,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "calc_dp",
              "complexity": 7,
              "line_start": 28,
              "line_end": 46
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 48,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001738680002745241
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 17,
              "line_start": 14,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.25850002001971e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 17,
              "line_start": 14,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.572300000902032e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 90,
          "functions": [
            {
              "name": "merge_small",
              "complexity": 32,
              "line_start": 15,
              "line_end": 53
            },
            {
              "name": "merge_main",
              "complexity": 46,
              "line_start": 55,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00035808500069833826
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 11,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012686899935943075
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 24,
              "line_start": 12,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011722100043698447
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.499300070572644e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.76980000914773e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.3761999879498035e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "f",
              "complexity": 6,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.283999962557573e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.9883999963640235e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.38130000475212e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.689600013487507e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.718600045336643e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "tinput",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "rlinput",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 36,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011689999973896192
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.392999966919888e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.8009999520436395e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.031299992377171e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.9682999562937766e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.592399950022809e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.293799990293337e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.533299983857432e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.68369996472029e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.696700009139022e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.9203000344277825e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.404300034366315e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 73,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003276170000390266
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.671199950389564e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.481200034613721e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.15670008098823e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.624699977284763e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.605300015711691e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "II",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "IF",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "IR",
              "complexity": 1,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "LIR",
              "complexity": 1,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "FR",
              "complexity": 1,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "LIR",
              "complexity": 1,
              "line_start": 31,
              "line_end": 35
            },
            {
              "name": "LIR_",
              "complexity": 1,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "SR",
              "complexity": 1,
              "line_start": 41,
              "line_end": 45
            },
            {
              "name": "LSR",
              "complexity": 1,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "solve",
              "complexity": 29,
              "line_start": 55,
              "line_end": 89
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002837550000549527
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 19,
              "line_end": 31
            },
            {
              "name": "cal2",
              "complexity": 2,
              "line_start": 33,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001346239996564691
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.765400045580463e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.263600011559902e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013073700029053725
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.137600030342583e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.176800004846882e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "solve",
              "complexity": 19,
              "line_start": 95,
              "line_end": 116
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002886950005631661
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 10,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.25840004128986e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013794999995297985
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 16,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011977499980275752
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "func",
              "complexity": 10,
              "line_start": 3,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011764200007746695
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.309599954576697e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.830600017972756e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "calc",
              "complexity": 8,
              "line_start": 9,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.115399967005942e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.461000015813624e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010171099984290777
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.800400039239321e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.977899960882496e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00039004500013106735
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014418200044019613
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013898199995310279
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015906999942671973
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011248200007685227
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001645600004849257
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002033040000242181
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001480900000387919
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.000148019000334898
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015449199963768478
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00018916699991677888
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010124099935637787
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dp",
              "complexity": 4,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00016698499985068338
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "nn",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "lm",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 22,
              "line_start": 20,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00024074400062090717
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 18,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013224900067143608
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001267790003112168
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "input_split",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013143799969839165
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "f",
              "complexity": 15,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010943699999188539
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.89459995253128e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "go",
              "complexity": 5,
              "line_start": 9,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010217199996986892
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001260680000996217
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 12,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011144999916723464
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "solveBFS",
              "complexity": 16,
              "line_start": 7,
              "line_end": 48
            },
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 51,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00034349700035818387
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "recSolve",
              "complexity": 5,
              "line_start": 3,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012317199980316218
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "get_max_area",
              "complexity": 7,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.963900017988635e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 14,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013861099978385027
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "add_ns",
              "complexity": 18,
              "line_start": 40,
              "line_end": 56
            },
            {
              "name": "store_ans",
              "complexity": 6,
              "line_start": 58,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00022369199996319367
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.80949998847791e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013707899961445946
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "dfs",
              "complexity": 10,
              "line_start": 6,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.019999924930744e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "main",
              "complexity": 40,
              "line_start": 3,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013887199929740746
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 20,
              "line_end": 37
            },
            {
              "name": "recur",
              "complexity": 9,
              "line_start": 39,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001787569999578409
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "recur",
              "complexity": 9,
              "line_start": 19,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011727099990821443
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 12,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011878400073328521
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "lis",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ma",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "st1",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011870399976032786
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 11,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001130639993789373
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "recursive",
              "complexity": 7,
              "line_start": 14,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.267600060207769e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 80,
              "line_end": 89
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012503499965532683
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "area",
              "complexity": 8,
              "line_start": 8,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.563200051663443e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "union_find::__init__",
              "complexity": 0,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "union_find::union",
              "complexity": 1,
              "line_start": 66,
              "line_end": 76
            },
            {
              "name": "union_find::find",
              "complexity": 1,
              "line_start": 78,
              "line_end": 82
            },
            {
              "name": "main",
              "complexity": 35,
              "line_start": 85,
              "line_end": 124
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00034712500018940773
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011775199982366757
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dp",
              "complexity": 4,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.659200077294372e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011708100009855116
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010890600060520228
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.813699994585477e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001035250006680144
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "recursive",
              "complexity": 8,
              "line_start": 14,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.533899992675288e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010042000030807685
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "recurser",
              "complexity": 13,
              "line_start": 10,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.892699952411931e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.039099975576391e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "power",
              "complexity": 3,
              "line_start": 21,
              "line_end": 28
            },
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "func",
              "complexity": 13,
              "line_start": 41,
              "line_end": 54
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 56,
              "line_end": 74
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 85,
              "line_end": 89
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 91,
              "line_end": 99
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 101,
              "line_end": 108
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 110,
              "line_end": 113
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 117,
              "line_end": 123
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003171980006300146
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.975899982033297e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014433199976338074
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.433999962813687e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012257099933776772
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "prdbg",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "get_str",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "rint",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "oint",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "valid",
              "complexity": 2,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 8,
              "line_start": 27,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00017911700069817016
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "solve",
              "complexity": 27,
              "line_start": 1,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013296099950821372
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "f",
              "complexity": 20,
              "line_start": 4,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015921999965939904
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "dp",
              "complexity": 9,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.48410002415767e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.008100030565402e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.206600002973573e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014306000048236456
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00030711999988852767
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "r",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "rm",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "rl",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010506799935683375
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.676599969068775e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "rec",
              "complexity": 13,
              "line_start": 9,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 28,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011316400014038663
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 62,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 62,
          "functions": [
            {
              "name": "Golf",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "S_",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "IS",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "NI",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "NI_",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "StoLI",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "ItoS",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "LtoS",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "RA",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "RLI",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "RI",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "Rtest",
              "complexity": 3,
              "line_start": 22,
              "line_end": 32
            },
            {
              "name": "GI",
              "complexity": 11,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "GGI",
              "complexity": 6,
              "line_start": 50,
              "line_end": 61
            },
            {
              "name": "TI",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "accum",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "bit_combination",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "gcd",
              "complexity": 3,
              "line_start": 71,
              "line_end": 75
            },
            {
              "name": "YN",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "Yn",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "show",
              "complexity": 1,
              "line_start": 78,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0005647150001095724
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011119900045741815
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "_SortedSeqs::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "_SortedSeqs::__hash__",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "compute_max_area",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "_compute_max_area",
              "complexity": 3,
              "line_start": 25,
              "line_end": 66
            },
            {
              "name": "_how_many_nonempty",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 73,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001703609996184241
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.935700018104399e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00022124800034362124
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.581100039213197e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 12,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.169299937639153e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "Person::__init__",
              "complexity": 0,
              "line_start": 65,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014158700014377246
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dp",
              "complexity": 4,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.854900038888445e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.259499984182185e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.939800045482116e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011417499990784563
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011101899963250617
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.792499920673436e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.52219993955805e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "calc",
              "complexity": 8,
              "line_start": 11,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.968199977563927e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.636100003262982e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.744499973545317e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.171300007437821e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.366799920622725e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 5,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.914700058288872e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "inpt",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 27,
              "line_end": 45
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 54,
              "line_end": 58
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 60,
              "line_end": 68
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 70,
              "line_end": 77
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 79,
              "line_end": 82
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00024440099969069706
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.71629997366108e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "dp",
              "complexity": 5,
              "line_start": 21,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.998999965115217e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "dp",
              "complexity": 5,
              "line_start": 21,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.736600036878372e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "getArray",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "createDP",
              "complexity": 6,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "go",
              "complexity": 8,
              "line_start": 14,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.567100005369866e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 14,
              "line_start": 12,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.996799963118974e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010591000045678811
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 24,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.670300030644285e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 22,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012053699992975453
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.640299984108424e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001004289997581509
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.78549999470124e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.908999966981355e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "rec",
              "complexity": 8,
              "line_start": 35,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015030400027171709
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "pre",
              "complexity": 6,
              "line_start": 59,
              "line_end": 69
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 81,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003329680002934765
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 9,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012707000041700667
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.799500003282446e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "find",
              "complexity": 8,
              "line_start": 84,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002497099994798191
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "rec",
              "complexity": 8,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.669400019949535e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.566100041207392e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "idx",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.756600007269299e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.220499967137584e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.156299984169891e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 14,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013347200001589954
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "idx",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001178030006485642
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012627799969777698
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010150200068892445
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.241499992640456e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.82469996920554e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.186300030705752e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.760499986237846e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 4,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.45300000946736e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "f",
              "complexity": 14,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015736700061097508
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "dict",
              "complexity": 5,
              "line_start": 20,
              "line_end": 27
            },
            {
              "name": "find_gt",
              "complexity": 2,
              "line_start": 28,
              "line_end": 34
            },
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 36,
              "line_end": 47
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 48,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00018232399997941684
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.738300013850676e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.330199953983538e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.2760999602032825e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 7.960000039020088e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 7.545199969172245e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.7460999919858295e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.093800023634685e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 5,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 6.230800045159413e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.2380000195407774e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "sieve::__init__",
              "complexity": 6,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "sieve::isprime",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "sieve::factorize",
              "complexity": 7,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "sieve::modlcm",
              "complexity": 10,
              "line_start": 28,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00020228100038366392
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 22,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001447929998903419
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 22,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00013695899997401284
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 24,
              "line_end": 32
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 83,
              "line_end": 102
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00030817099923297064
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 23,
              "line_end": 30
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 31,
              "line_end": 34
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 43
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 48,
              "line_end": 48
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 49,
              "line_end": 49
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 50,
              "line_end": 50
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 51,
              "line_end": 51
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 52,
              "line_end": 52
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 53,
              "line_end": 53
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00027003899958799593
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 17,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.000158248999468924
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 14,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00012807199982489692
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 8,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011568800073291641
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "ass",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 7,
              "line_end": 16
            },
            {
              "name": "get_mask",
              "complexity": 8,
              "line_start": 19,
              "line_end": 34
            },
            {
              "name": "dump",
              "complexity": 1,
              "line_start": 36,
              "line_end": 38
            },
            {
              "name": "get_left",
              "complexity": 5,
              "line_start": 40,
              "line_end": 53
            },
            {
              "name": "get_dp",
              "complexity": 10,
              "line_start": 56,
              "line_end": 71
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00017626200042286655
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "ass",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 7,
              "line_end": 16
            },
            {
              "name": "get_mask",
              "complexity": 9,
              "line_start": 21,
              "line_end": 39
            },
            {
              "name": "dump",
              "complexity": 1,
              "line_start": 41,
              "line_end": 43
            },
            {
              "name": "get_left",
              "complexity": 5,
              "line_start": 45,
              "line_end": 58
            },
            {
              "name": "get_dp",
              "complexity": 10,
              "line_start": 61,
              "line_end": 76
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 78,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00018172299951402238
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 8.209499992517522e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 7.469100000889739e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "get_mask",
              "complexity": 9,
              "line_start": 18,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001091760004783282
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "get_mask",
              "complexity": 8,
              "line_start": 18,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011705099950631848
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 8.063200039032381e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 7.192599969130242e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "f",
              "complexity": 4,
              "line_start": 22,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00012754999988828786
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 7.470099990314338e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 7.806699977663811e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 271,
        "functions_count": 55,
        "raw_output": {
          "file_complexity": 271,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 76,
              "line_end": 103
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 104,
              "line_end": 130
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 132,
              "line_end": 142
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 144,
              "line_end": 155
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 157,
              "line_end": 171
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 173,
              "line_end": 187
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 190,
              "line_end": 193
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 195,
              "line_end": 203
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 205,
              "line_end": 217
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 219,
              "line_end": 220
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 226,
              "line_end": 231
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 233,
              "line_end": 242
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 244,
              "line_end": 262
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 270,
              "line_end": 273
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 275,
              "line_end": 277
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 279,
              "line_end": 281
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 283,
              "line_end": 285
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 287,
              "line_end": 303
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 307,
              "line_end": 327
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 330,
              "line_end": 333
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 335,
              "line_end": 343
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 346,
              "line_end": 353
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 356,
              "line_end": 361
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 363,
              "line_end": 375
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 377,
              "line_end": 386
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 388,
              "line_end": 397
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 400,
              "line_end": 413
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 415,
              "line_end": 418
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 427,
              "line_end": 428
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 430,
              "line_end": 446
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 448,
              "line_end": 472
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 474,
              "line_end": 498
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 503,
              "line_end": 504
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 506,
              "line_end": 512
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 523,
              "line_end": 530
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 532,
              "line_end": 541
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 543,
              "line_end": 552
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 554,
              "line_end": 570
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 572,
              "line_end": 583
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 585,
              "line_end": 593
            },
            {
              "name": "Dinic::__init__",
              "complexity": 0,
              "line_start": 597,
              "line_end": 599
            },
            {
              "name": "Dinic::add_edge",
              "complexity": 0,
              "line_start": 601,
              "line_end": 605
            },
            {
              "name": "Dinic::add_multi_edge",
              "complexity": 0,
              "line_start": 607,
              "line_end": 611
            },
            {
              "name": "Dinic::bfs",
              "complexity": 7,
              "line_start": 613,
              "line_end": 625
            },
            {
              "name": "Dinic::dfs",
              "complexity": 8,
              "line_start": 627,
              "line_end": 639
            },
            {
              "name": "Dinic::flow",
              "complexity": 3,
              "line_start": 641,
              "line_end": 651
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.005525268999917898
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "make_mod_mul",
              "complexity": 2,
              "line_start": 20,
              "line_end": 32
            },
            {
              "name": "mod_pow",
              "complexity": 4,
              "line_start": 38,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0001977420006369357
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 9.196300015901215e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "getc",
              "complexity": 4,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 8.926800001063384e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LI1",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LLI1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "nHr",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "nPr",
              "complexity": 2,
              "line_start": 22,
              "line_end": 25
            },
            {
              "name": "nCr",
              "complexity": 2,
              "line_start": 27,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00016087299991340842
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 7,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 40,
              "line_end": 44
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 46,
              "line_end": 54
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 56,
              "line_end": 63
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 72,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00021945299977232935
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.310899971140316e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.833899988123449e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 66,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 66,
          "functions": [
            {
              "name": "fft1",
              "complexity": 8,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "fft2",
              "complexity": 8,
              "line_start": 27,
              "line_end": 37
            },
            {
              "name": "fft3",
              "complexity": 8,
              "line_start": 38,
              "line_end": 48
            },
            {
              "name": "ifft1",
              "complexity": 6,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "ifft2",
              "complexity": 6,
              "line_start": 59,
              "line_end": 67
            },
            {
              "name": "ifft3",
              "complexity": 6,
              "line_start": 68,
              "line_end": 76
            },
            {
              "name": "convolve",
              "complexity": 15,
              "line_start": 78,
              "line_end": 114
            },
            {
              "name": "chk",
              "complexity": 0,
              "line_start": 115,
              "line_end": 116
            },
            {
              "name": "chkinv",
              "complexity": 0,
              "line_start": 117,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0006684300005872501
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 127,
        "functions_count": 49,
        "raw_output": {
          "file_complexity": 127,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "A",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "AI",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "A2",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "G",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "GP",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 84,
              "line_end": 101
            },
            {
              "name": "fact",
              "complexity": 5,
              "line_start": 107,
              "line_end": 114
            },
            {
              "name": "ifact",
              "complexity": 1,
              "line_start": 116,
              "line_end": 122
            },
            {
              "name": "per",
              "complexity": 3,
              "line_start": 124,
              "line_end": 128
            },
            {
              "name": "com",
              "complexity": 3,
              "line_start": 130,
              "line_end": 134
            },
            {
              "name": "catalan",
              "complexity": 0,
              "line_start": 136,
              "line_end": 137
            },
            {
              "name": "isprime",
              "complexity": 3,
              "line_start": 139,
              "line_end": 143
            },
            {
              "name": "floorsum",
              "complexity": 3,
              "line_start": 145,
              "line_end": 149
            },
            {
              "name": "inverse",
              "complexity": 1,
              "line_start": 151,
              "line_end": 154
            },
            {
              "name": "lowbit",
              "complexity": 0,
              "line_start": 156,
              "line_end": 157
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 160,
              "line_end": 162
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 164,
              "line_end": 167
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 169,
              "line_end": 174
            },
            {
              "name": "ST::__init__",
              "complexity": 4,
              "line_start": 177,
              "line_end": 185
            },
            {
              "name": "ST::query",
              "complexity": 2,
              "line_start": 186,
              "line_end": 189
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 192,
              "line_end": 193
            },
            {
              "name": "DSU::same",
              "complexity": 0,
              "line_start": 195,
              "line_end": 196
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 198,
              "line_end": 202
            },
            {
              "name": "DSU::union",
              "complexity": 2,
              "line_start": 204,
              "line_end": 212
            },
            {
              "name": "DSU::size",
              "complexity": 1,
              "line_start": 214,
              "line_end": 214
            },
            {
              "name": "UFS::__init__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "UFS::find",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "UFS::union",
              "complexity": 4,
              "line_start": 226,
              "line_end": 235
            },
            {
              "name": "UF::__init__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 242
            },
            {
              "name": "UF::find",
              "complexity": 1,
              "line_start": 244,
              "line_end": 247
            },
            {
              "name": "UF::union",
              "complexity": 4,
              "line_start": 249,
              "line_end": 263
            },
            {
              "name": "Prime",
              "complexity": 12,
              "line_start": 265,
              "line_end": 277
            },
            {
              "name": "dij",
              "complexity": 8,
              "line_start": 279,
              "line_end": 293
            },
            {
              "name": "bell",
              "complexity": 12,
              "line_start": 295,
              "line_end": 308
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 310,
              "line_end": 310
            },
            {
              "name": "lis",
              "complexity": 3,
              "line_start": 311,
              "line_end": 319
            },
            {
              "name": "RP",
              "complexity": 2,
              "line_start": 321,
              "line_end": 332
            },
            {
              "name": "DLN::__init__",
              "complexity": 0,
              "line_start": 335,
              "line_end": 338
            },
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 340,
              "line_end": 343
            },
            {
              "name": "topo",
              "complexity": 9,
              "line_start": 345,
              "line_end": 359
            },
            {
              "name": "gdfs",
              "complexity": 3,
              "line_start": 361,
              "line_end": 366
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0019684420003613923
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.326899983832845e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "Combination::__init__",
              "complexity": 2,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "Combination::inv",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "Combination::fact",
              "complexity": 0,
              "line_start": 16,
              "line_end": 18
            },
            {
              "name": "Combination::inv_fact",
              "complexity": 0,
              "line_start": 20,
              "line_end": 22
            },
            {
              "name": "Combination::perm",
              "complexity": 1,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "Combination::comb",
              "complexity": 1,
              "line_start": 30,
              "line_end": 34
            },
            {
              "name": "combination",
              "complexity": 2,
              "line_start": 37,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00016784599938546307
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 7.352800002990989e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "mod_nCr",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00011892499969690107
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.3480999667954165e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.1397999666514806e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.73880006413674e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 6,
              "line_end": 13
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00013946299986855593
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "precom",
              "complexity": 5,
              "line_start": 33,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00012266100020497106
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 10,
              "line_end": 17
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "C",
              "complexity": 4,
              "line_start": 35,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00015365000035671983
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.97930002186331e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 7.656500019947998e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.88700001774123e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "line",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "powers",
              "complexity": 1,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "binomials",
              "complexity": 4,
              "line_start": 16,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 29,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00010690199997043237
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "line",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "powers",
              "complexity": 1,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "binomials",
              "complexity": 4,
              "line_start": 16,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 29,
              "line_end": 56
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00011409499984438298
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "Exp",
              "complexity": 2,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 9.423800020158524e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 8,
              "line_end": 68
            },
            {
              "name": "Input::__init__",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            },
            {
              "name": "Input::read_typed",
              "complexity": 0,
              "line_start": 76,
              "line_end": 78
            },
            {
              "name": "Input::read",
              "complexity": 0,
              "line_start": 80,
              "line_end": 82
            },
            {
              "name": "Debug::__init__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 88
            },
            {
              "name": "Debug::__delete__",
              "complexity": 0,
              "line_start": 90,
              "line_end": 92
            },
            {
              "name": "run",
              "complexity": 1,
              "line_start": 94,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00019513799998094328
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 7,
              "line_end": 26
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 32,
              "line_end": 36
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 46,
              "line_end": 53
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 54,
              "line_end": 57
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.000201860999368364
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "fastfrac",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "comb",
              "complexity": 2,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "getnext",
              "complexity": 6,
              "line_start": 24,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00013127800048096105
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.766999973071506e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.757500017964048e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.564100062358193e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013996399957250105
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 158,
        "functions_count": 46,
        "raw_output": {
          "file_complexity": 158,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "A",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "AI",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "A2",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "G",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "GP",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 83,
              "line_end": 100
            },
            {
              "name": "fact",
              "complexity": 5,
              "line_start": 106,
              "line_end": 113
            },
            {
              "name": "ifact",
              "complexity": 1,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "per",
              "complexity": 3,
              "line_start": 123,
              "line_end": 127
            },
            {
              "name": "com",
              "complexity": 3,
              "line_start": 129,
              "line_end": 133
            },
            {
              "name": "catalan",
              "complexity": 0,
              "line_start": 135,
              "line_end": 136
            },
            {
              "name": "isprime",
              "complexity": 3,
              "line_start": 138,
              "line_end": 142
            },
            {
              "name": "floorsum",
              "complexity": 3,
              "line_start": 144,
              "line_end": 148
            },
            {
              "name": "inverse",
              "complexity": 1,
              "line_start": 150,
              "line_end": 153
            },
            {
              "name": "lowbit",
              "complexity": 0,
              "line_start": 155,
              "line_end": 156
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 159,
              "line_end": 161
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 163,
              "line_end": 166
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 168,
              "line_end": 173
            },
            {
              "name": "ST::__init__",
              "complexity": 4,
              "line_start": 176,
              "line_end": 184
            },
            {
              "name": "ST::query",
              "complexity": 2,
              "line_start": 185,
              "line_end": 188
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 191,
              "line_end": 192
            },
            {
              "name": "DSU::same",
              "complexity": 0,
              "line_start": 194,
              "line_end": 195
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 197,
              "line_end": 201
            },
            {
              "name": "DSU::union",
              "complexity": 2,
              "line_start": 203,
              "line_end": 211
            },
            {
              "name": "DSU::size",
              "complexity": 1,
              "line_start": 213,
              "line_end": 213
            },
            {
              "name": "UFS::__init__",
              "complexity": 0,
              "line_start": 216,
              "line_end": 218
            },
            {
              "name": "UFS::find",
              "complexity": 1,
              "line_start": 220,
              "line_end": 223
            },
            {
              "name": "UFS::union",
              "complexity": 4,
              "line_start": 225,
              "line_end": 234
            },
            {
              "name": "Prime",
              "complexity": 12,
              "line_start": 236,
              "line_end": 248
            },
            {
              "name": "dij",
              "complexity": 9,
              "line_start": 250,
              "line_end": 264
            },
            {
              "name": "bell",
              "complexity": 12,
              "line_start": 266,
              "line_end": 279
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 281,
              "line_end": 281
            },
            {
              "name": "lis",
              "complexity": 3,
              "line_start": 282,
              "line_end": 290
            },
            {
              "name": "RP",
              "complexity": 2,
              "line_start": 292,
              "line_end": 303
            },
            {
              "name": "DLN::__init__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 309
            },
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 311,
              "line_end": 314
            },
            {
              "name": "topo",
              "complexity": 9,
              "line_start": 316,
              "line_end": 330
            },
            {
              "name": "gdfs",
              "complexity": 3,
              "line_start": 332,
              "line_end": 337
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.001717488000394951
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 56,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001660130001255311
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 77,
        "functions_count": 27,
        "raw_output": {
          "file_complexity": 77,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 257
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 259,
              "line_end": 271
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0012350780007182038
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010673100041458383
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "mfloat",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "solve",
              "complexity": 29,
              "line_start": 70,
              "line_end": 115
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 119,
              "line_end": 123
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000291740000648133
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 13,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001159189996542409
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012697900001512608
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 7,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00020340399987617275
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "sol",
              "complexity": 10,
              "line_start": 2,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011247200018260628
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00018956699932459742
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.594099992682459e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000125456000205304
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "solve",
              "complexity": 28,
              "line_start": 4,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011755099967558635
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "neighbours",
              "complexity": 4,
              "line_start": 13,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.387799971387722e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "f",
              "complexity": 15,
              "line_start": 8,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.247399975720327e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.56900003075134e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "costs",
              "complexity": 4,
              "line_start": 22,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011989599988737609
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "main",
              "complexity": 48,
              "line_start": 6,
              "line_end": 51
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 63,
              "line_end": 67
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 69,
              "line_end": 77
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 79,
              "line_end": 86
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 101
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00034140400020987727
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "helper",
              "complexity": 25,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015414100016641896
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011017700035154121
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012278200028958963
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.394700009579537e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "main",
              "complexity": 34,
              "line_start": 1,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013164800020604162
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "some_random_function",
              "complexity": 0,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "some_random_function5",
              "complexity": 0,
              "line_start": 14,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 26,
              "line_start": 29,
              "line_end": 53
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 64,
              "line_end": 72
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 81,
              "line_end": 84
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 92
            },
            {
              "name": "some_random_function1",
              "complexity": 0,
              "line_start": 96,
              "line_end": 105
            },
            {
              "name": "some_random_function2",
              "complexity": 0,
              "line_start": 107,
              "line_end": 116
            },
            {
              "name": "some_random_function3",
              "complexity": 0,
              "line_start": 118,
              "line_end": 127
            },
            {
              "name": "some_random_function4",
              "complexity": 0,
              "line_start": 129,
              "line_end": 138
            },
            {
              "name": "some_random_function6",
              "complexity": 0,
              "line_start": 140,
              "line_end": 149
            },
            {
              "name": "some_random_function7",
              "complexity": 0,
              "line_start": 151,
              "line_end": 160
            },
            {
              "name": "some_random_function8",
              "complexity": 0,
              "line_start": 162,
              "line_end": 171
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00043801599986181827
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 16,
              "line_end": 21
            },
            {
              "name": "union",
              "complexity": 1,
              "line_start": 24,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001870319993031444
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 59,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000120967999464483
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "around",
              "complexity": 5,
              "line_start": 16,
              "line_end": 21
            },
            {
              "name": "mink",
              "complexity": 6,
              "line_start": 23,
              "line_end": 29
            },
            {
              "name": "solve",
              "complexity": 31,
              "line_start": 31,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001475079998272122
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "process",
              "complexity": 1,
              "line_start": 58,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003086219994656858
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 5,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 16,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001232029999300721
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001275710001209518
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.509100007358938e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 9,
              "line_end": 53
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 74,
              "line_end": 87
            },
            {
              "name": "nouse0",
              "complexity": 0,
              "line_start": 93,
              "line_end": 97
            },
            {
              "name": "nouse1",
              "complexity": 0,
              "line_start": 98,
              "line_end": 102
            },
            {
              "name": "nouse2",
              "complexity": 0,
              "line_start": 103,
              "line_end": 107
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 120,
              "line_end": 124
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 126,
              "line_end": 134
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 136,
              "line_end": 143
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 145,
              "line_end": 148
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 152,
              "line_end": 158
            },
            {
              "name": "nouse3",
              "complexity": 0,
              "line_start": 167,
              "line_end": 171
            },
            {
              "name": "nouse4",
              "complexity": 0,
              "line_start": 172,
              "line_end": 176
            },
            {
              "name": "nouse5",
              "complexity": 0,
              "line_start": 177,
              "line_end": 181
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003973989996666205
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.424800009583123e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "inlt",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "insr",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010723300056270091
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "aburrimin",
              "complexity": 4,
              "line_start": 2,
              "line_end": 23
            },
            {
              "name": "solvecaso",
              "complexity": 22,
              "line_start": 26,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001314270002694684
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "solve",
              "complexity": 17,
              "line_start": 18,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010932599980151281
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 23,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017881699932331685
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 167
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 170,
              "line_end": 204
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0004059150005559786
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 167
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 170,
              "line_end": 211
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00041748700004973216
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 167
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 170,
              "line_end": 212
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00042276700060028816
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 157,
              "line_end": 204
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003784239997912664
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 77,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 77,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00045779300035064807
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 157,
              "line_end": 208
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0004306720002205111
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 169
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 172,
              "line_end": 206
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000403040000492183
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012998500005778624
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001047669993567979
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 71,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00037462599993887125
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 71,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00035572000069805654
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011854400054289727
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012682899978244677
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 31,
              "line_start": 8,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 54,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002526659991417546
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 31,
              "line_start": 9,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 39,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 45,
              "line_end": 53
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 55,
              "line_end": 62
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 64,
              "line_end": 67
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 71,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002478280002833344
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001182630003313534
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 1,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010247299996990478
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "main",
              "complexity": 14,
              "line_start": 8,
              "line_end": 47
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 58,
              "line_end": 62
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 64,
              "line_end": 72
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 74,
              "line_end": 81
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 83,
              "line_end": 86
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 116,
              "line_end": 117
            },
            {
              "name": "i_input",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "l_input",
              "complexity": 0,
              "line_start": 124,
              "line_end": 125
            },
            {
              "name": "li_input",
              "complexity": 0,
              "line_start": 128,
              "line_end": 129
            },
            {
              "name": "il_input",
              "complexity": 0,
              "line_start": 132,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003174090006723418
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001451739999538404
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011875400014105253
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00028472700068959966
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 78,
        "functions_count": 24,
        "raw_output": {
          "file_complexity": 78,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 49,
              "line_end": 55
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 70,
              "line_end": 75
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 78,
              "line_end": 89
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 92,
              "line_end": 101
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 104,
              "line_end": 115
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 118,
              "line_end": 126
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 129,
              "line_end": 139
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 140,
              "line_end": 149
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 150,
              "line_end": 155
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 156,
              "line_end": 161
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 162,
              "line_end": 173
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 174,
              "line_end": 180
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 181,
              "line_end": 185
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 186,
              "line_end": 190
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 191,
              "line_end": 196
            },
            {
              "name": "getVal",
              "complexity": 2,
              "line_start": 197,
              "line_end": 204
            },
            {
              "name": "rec",
              "complexity": 3,
              "line_start": 205,
              "line_end": 221
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0008331509998242836
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 78,
        "functions_count": 24,
        "raw_output": {
          "file_complexity": 78,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 49,
              "line_end": 55
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 70,
              "line_end": 75
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 78,
              "line_end": 89
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 92,
              "line_end": 101
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 104,
              "line_end": 115
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 118,
              "line_end": 126
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 129,
              "line_end": 139
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 140,
              "line_end": 149
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 150,
              "line_end": 155
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 156,
              "line_end": 161
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 162,
              "line_end": 173
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 174,
              "line_end": 180
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 181,
              "line_end": 185
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 186,
              "line_end": 190
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 191,
              "line_end": 196
            },
            {
              "name": "getVal",
              "complexity": 2,
              "line_start": 197,
              "line_end": 204
            },
            {
              "name": "rec",
              "complexity": 3,
              "line_start": 205,
              "line_end": 221
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0008149369996317546
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 55,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001831050003602286
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011223199999221833
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000134913999318087
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "node::__init__",
              "complexity": 2,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "node::mo",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015186699965852313
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "check",
              "complexity": 2,
              "line_start": 56,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003162159991916269
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "check",
              "complexity": 2,
              "line_start": 56,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003183409999110154
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.743300051923143e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.766599967202637e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "main",
              "complexity": 28,
              "line_start": 11,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010835400007636053
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 45,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.511899952485692e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "slv",
              "complexity": 16,
              "line_start": 8,
              "line_end": 42
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 43,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011023800016118912
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.48400004542782e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.582200007367646e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "main",
              "complexity": 36,
              "line_start": 1,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00014008400012244238
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "roll",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.396000000881031e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "sol",
              "complexity": 22,
              "line_start": 35,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015376000010292046
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00028003799980069743
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "main",
              "complexity": 32,
              "line_start": 21,
              "line_end": 66
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 108,
              "line_end": 112
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 114,
              "line_end": 122
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 124,
              "line_end": 131
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 133,
              "line_end": 136
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 140,
              "line_end": 146
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00032656600069458364
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "valid",
              "complexity": 2,
              "line_start": 26,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015013299980637385
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.471899946016492e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "main",
              "complexity": 43,
              "line_start": 4,
              "line_end": 47
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 53,
              "line_end": 54
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 57,
              "line_end": 58
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 60,
              "line_end": 61
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 70,
              "line_end": 73
            },
            {
              "name": "answerInteractive",
              "complexity": 0,
              "line_start": 75,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00025348800045321696
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010742299946286948
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "solve",
              "complexity": 32,
              "line_start": 10,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017104200014728121
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 49,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015589399936288828
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 49,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00016067300020949915
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 39,
              "line_start": 20,
              "line_end": 60
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 81,
              "line_end": 85
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 87,
              "line_end": 95
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 97,
              "line_end": 104
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 106,
              "line_end": 109
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 113,
              "line_end": 119
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 122,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0004145619996052119
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 39,
              "line_start": 20,
              "line_end": 60
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 81,
              "line_end": 85
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 87,
              "line_end": 95
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 97,
              "line_end": 104
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 106,
              "line_end": 109
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 113,
              "line_end": 119
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 122,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000397007999708876
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 33,
              "line_start": 20,
              "line_end": 61
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 82,
              "line_end": 86
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 88,
              "line_end": 96
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 98,
              "line_end": 105
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 107,
              "line_end": 110
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 114,
              "line_end": 120
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 123,
              "line_end": 134
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0005194499999561231
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 46,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002217880000898731
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "readInt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "readInts",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002234210005553905
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "readInt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "readInts",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00020427500021469314
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 60,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0006983769999351352
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "read_matrix",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "around",
              "complexity": 4,
              "line_start": 12,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017855700025393162
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 40,
              "line_start": 3,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00028384500001266133
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "find_cost",
              "complexity": 8,
              "line_start": 18,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00019918599991797237
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "roll",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012288100060686702
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000179267999556032
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "roll",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.930699980031932e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011653999990812736
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012555600005725864
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "answer",
              "complexity": 28,
              "line_start": 3,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001282419998460682
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.674299988342682e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.611099994799588e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "main",
              "complexity": 28,
              "line_start": 10,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012203099959151587
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "main",
              "complexity": 28,
              "line_start": 1,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00014519399974233238
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.331699973496143e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "Node::__str__",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00020047899943165248
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "main",
              "complexity": 25,
              "line_start": 1,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015524299942626385
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.241599971370306e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.375900077022379e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.160499990277458e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001249050001206342
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 60,
          "functions": [
            {
              "name": "solve",
              "complexity": 58,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002964590003102785
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010199200005445164
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "show_ans",
              "complexity": 1,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011780200020439224
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 10,
              "line_end": 16
            },
            {
              "name": "alp",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 31,
              "line_start": 19,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017475999993621372
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011023800016118912
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012047699965478387
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.162300011666957e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "explorer",
              "complexity": 23,
              "line_start": 7,
              "line_end": 27
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "readint",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "readinti",
              "complexity": 0,
              "line_start": 47,
              "line_end": 48
            },
            {
              "name": "readintt",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "readintl",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "readinttl",
              "complexity": 0,
              "line_start": 59,
              "line_end": 60
            },
            {
              "name": "readintll",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "lstr",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "llstr",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "log",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001681869998719776
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 55,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013366199982556282
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.294599956570892e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 42,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012617799984582234
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003585459999158047
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003033820003111032
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002597800003059092
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00026637199971446535
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00024582300011388725
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "permuteDigits",
              "complexity": 10,
              "line_start": 1,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011776199971791357
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00031528499948763056
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003046040001208894
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.773599984124303e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "candidates",
              "complexity": 6,
              "line_start": 5,
              "line_end": 22
            },
            {
              "name": "solution",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.895799990365049e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "f",
              "complexity": 30,
              "line_start": 3,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010687099984352244
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "mx",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 12,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.520199960708851e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.672900038509397e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "rec",
              "complexity": 32,
              "line_start": 3,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001216689997818321
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010419699992780806
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 60,
          "functions": [
            {
              "name": "main",
              "complexity": 51,
              "line_start": 8,
              "line_end": 44
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 55,
              "line_end": 59
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 61,
              "line_end": 69
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 71,
              "line_end": 78
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 80,
              "line_end": 83
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002528570003050845
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "main",
              "complexity": 33,
              "line_start": 8,
              "line_end": 35
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00020747100006701658
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "main",
              "complexity": 33,
              "line_start": 8,
              "line_end": 35
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00020383399987622397
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.4685000173340086e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "pre",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 17,
              "line_start": 18,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.153300015896093e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 2,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.444000013696495e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "lint",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 14,
              "line_end": 21
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "check_prime",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "Bs",
              "complexity": 7,
              "line_start": 31,
              "line_end": 55
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "primefactors",
              "complexity": 5,
              "line_start": 70,
              "line_end": 87
            },
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 98,
              "line_end": 102
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 106,
              "line_end": 117
            },
            {
              "name": "primeFactors",
              "complexity": 2,
              "line_start": 118,
              "line_end": 128
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002563029993325472
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "fs",
              "complexity": 6,
              "line_start": 5,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011714099946402712
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "fs",
              "complexity": 6,
              "line_start": 5,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011520699990796857
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "getPrimes",
              "complexity": 7,
              "line_start": 76,
              "line_end": 88
            },
            {
              "name": "primeFactor",
              "complexity": 6,
              "line_start": 89,
              "line_end": 99
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00034350700025242986
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "getPrimes",
              "complexity": 7,
              "line_start": 76,
              "line_end": 88
            },
            {
              "name": "primeFactor",
              "complexity": 6,
              "line_start": 89,
              "line_end": 99
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003394700006538187
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.7098000070254784e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.481300013343571e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 146,
        "functions_count": 58,
        "raw_output": {
          "file_complexity": 146,
          "functions": [
            {
              "name": "main",
              "complexity": 20,
              "line_start": 1,
              "line_end": 30
            },
            {
              "name": "rant",
              "complexity": 0,
              "line_start": 66,
              "line_end": 110
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 112,
              "line_end": 122
            },
            {
              "name": "memodict",
              "complexity": 0,
              "line_start": 124,
              "line_end": 131
            },
            {
              "name": "pollard_rho",
              "complexity": 25,
              "line_start": 133,
              "line_end": 163
            },
            {
              "name": "prime_factors",
              "complexity": 2,
              "line_start": 165,
              "line_end": 171
            },
            {
              "name": "distinct_factors",
              "complexity": 1,
              "line_start": 173,
              "line_end": 178
            },
            {
              "name": "all_factors",
              "complexity": 5,
              "line_start": 180,
              "line_end": 191
            },
            {
              "name": "make_nCr_mod",
              "complexity": 8,
              "line_start": 193,
              "line_end": 216
            },
            {
              "name": "DisjointSetUnion::__init__",
              "complexity": 0,
              "line_start": 219,
              "line_end": 223
            },
            {
              "name": "DisjointSetUnion::get",
              "complexity": 3,
              "line_start": 225,
              "line_end": 234
            },
            {
              "name": "DisjointSetUnion::union",
              "complexity": 3,
              "line_start": 236,
              "line_end": 246
            },
            {
              "name": "DisjointSetUnion::count_sets",
              "complexity": 0,
              "line_start": 248,
              "line_end": 250
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 256,
              "line_end": 266
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 269
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 271,
              "line_end": 272
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 274,
              "line_end": 280
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 282,
              "line_end": 283
            },
            {
              "name": "SegmentTree::query",
              "complexity": 5,
              "line_start": 285,
              "line_end": 302
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 304,
              "line_end": 305
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 1,
              "line_start": 308,
              "line_end": 315
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 317,
              "line_end": 320
            },
            {
              "name": "SparseTable::__getitem__",
              "complexity": 0,
              "line_start": 322,
              "line_end": 323
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 326,
              "line_end": 335
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 337,
              "line_end": 344
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 346,
              "line_end": 352
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 354,
              "line_end": 364
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 366,
              "line_end": 383
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 385,
              "line_end": 402
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 404,
              "line_end": 432
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 434,
              "line_end": 459
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 461,
              "line_end": 487
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 489,
              "line_end": 495
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 497,
              "line_end": 502
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 504,
              "line_end": 509
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 511,
              "line_end": 514
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 516,
              "line_end": 519
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 521,
              "line_end": 523
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 525,
              "line_end": 527
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 529,
              "line_end": 532
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 534,
              "line_end": 537
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 539,
              "line_end": 545
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 547,
              "line_end": 549
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 551,
              "line_end": 553
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 555,
              "line_end": 557
            },
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 560,
              "line_end": 560
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 561,
              "line_end": 561
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 562,
              "line_end": 562
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 563,
              "line_end": 563
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 564,
              "line_end": 564
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 565,
              "line_end": 565
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 581,
              "line_end": 584
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 586,
              "line_end": 594
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 596,
              "line_end": 603
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 607,
              "line_end": 610
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 612,
              "line_end": 614
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 617,
              "line_end": 620
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 623,
              "line_end": 626
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.003654120000646799
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "listtostring",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.02439997944748e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "listtostring",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.790100072365021e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00017971900069824187
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.0165000175184105e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.281900004978525e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011835300028906204
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.8733000110369176e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "smallest",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "largest",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001010510004562093
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "search",
              "complexity": 10,
              "line_start": 1,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 2,
              "line_start": 19,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.122300005197758e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.948399989894824e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.32079997760593e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.003699930559378e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "dig",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "biggest_left",
              "complexity": 1,
              "line_start": 5,
              "line_end": 9
            },
            {
              "name": "ok",
              "complexity": 2,
              "line_start": 12,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 26,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.876700030668871e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001191850005852757
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.6127999919699505e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "check",
              "complexity": 1,
              "line_start": 10,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012363299993012333
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "check",
              "complexity": 1,
              "line_start": 10,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013512500026990892
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 88,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018048099991574418
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010700100028770976
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.276799988176208e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "DFS",
              "complexity": 10,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.202599954325706e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.2281000130751636e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.620300013717497e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "f",
              "complexity": 10,
              "line_start": 9,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.313000019668834e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.161400000972208e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.3412999982829206e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "gmax",
              "complexity": 3,
              "line_start": 13,
              "line_end": 20
            },
            {
              "name": "gmin",
              "complexity": 3,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "finalize",
              "complexity": 10,
              "line_start": 33,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.889699958876008e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "get_smallest",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.667199992691167e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 46,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012268099999346305
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "possible",
              "complexity": 5,
              "line_start": 1,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 20,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.090399983804673e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 1,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.9361999774409924e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.145799994148547e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "solve",
              "complexity": 39,
              "line_start": 2,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018907699995907024
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "read",
              "complexity": 1,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "permute",
              "complexity": 23,
              "line_start": 33,
              "line_end": 54
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 58,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018742399970506085
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 32,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 65,
              "line_end": 75
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 83,
              "line_end": 89
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 94,
              "line_end": 111
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 113,
              "line_end": 114
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 118,
              "line_end": 128
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 130,
              "line_end": 131
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 133,
              "line_end": 134
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 136,
              "line_end": 142
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 144,
              "line_end": 145
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 147,
              "line_end": 164
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 166,
              "line_end": 167
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 174
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 176,
              "line_end": 190
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 192,
              "line_end": 206
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 208,
              "line_end": 223
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 227,
              "line_end": 229
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 231,
              "line_end": 236
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 238,
              "line_end": 245
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 247,
              "line_end": 252
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 254,
              "line_end": 258
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 260,
              "line_end": 283
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 285,
              "line_end": 290
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 291,
              "line_end": 316
            },
            {
              "name": "findmin",
              "complexity": 3,
              "line_start": 318,
              "line_end": 328
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0014164210006128997
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 78,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 78,
          "functions": [
            {
              "name": "main",
              "complexity": 77,
              "line_start": 1,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00015868900027271593
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 138,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 138,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00029912399986642413
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 19,
              "line_end": 23
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 25,
              "line_end": 33
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 35,
              "line_end": 42
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 44,
              "line_end": 47
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 51,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016307799978676485
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.238499958679313e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "check",
              "complexity": 4,
              "line_start": 10,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.1576999794633593e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.075800032092957e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "comp",
              "complexity": 2,
              "line_start": 7,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.147299988399027e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "inv_mod",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "makenum",
              "complexity": 0,
              "line_start": 40,
              "line_end": 40
            },
            {
              "name": "givemax",
              "complexity": 6,
              "line_start": 42,
              "line_end": 49
            },
            {
              "name": "dp",
              "complexity": 12,
              "line_start": 52,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00021312199987733038
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "rec",
              "complexity": 10,
              "line_start": 15,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.35989997338038e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "make_number",
              "complexity": 4,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "find_number",
              "complexity": 4,
              "line_start": 14,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.60639998386614e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016134399993461557
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001523970004200237
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013556500016420614
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "c",
              "complexity": 26,
              "line_start": 1,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00017141299940703902
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "c",
              "complexity": 26,
              "line_start": 1,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00015813800018804614
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.195400005206466e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "greedy",
              "complexity": 6,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014891099999658763
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.850199937005527e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.73960000515217e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 71,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 71,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 65,
              "line_end": 82
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 84,
              "line_end": 89
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 91,
              "line_end": 103
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 106,
              "line_end": 116
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 119,
              "line_end": 132
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 133,
              "line_end": 139
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 144,
              "line_end": 153
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 154,
              "line_end": 155
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 156,
              "line_end": 159
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 160,
              "line_end": 161
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 162,
              "line_end": 163
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.000599791000240657
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.71550003264565e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "min_sub_array",
              "complexity": 8,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 8.04210003479966e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "calc",
              "complexity": 2,
              "line_start": 59,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00020831200072279898
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.845900043117581e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "int_array",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "float_array",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "str_array",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0001069410000127391
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.317899988061981e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 52,
          "functions": []
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014627600012317998
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 104,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 104,
          "functions": [
            {
              "name": "getCandidates",
              "complexity": 11,
              "line_start": 8,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 92,
              "line_start": 33,
              "line_end": 167
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0004897240005448111
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014982299944676924
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 52,
          "functions": []
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00015215700022963574
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 4,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00015196700041997246
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 11,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00016194599993468728
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 4,
              "line_end": 73
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014553399978467496
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "dfs",
              "complexity": 18,
              "line_start": 14,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014455300060944865
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "dfs",
              "complexity": 18,
              "line_start": 12,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001318989998253528
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 6.282899994403124e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "count_bits",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 5.8489999901212286e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "count",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 13,
              "line_end": 33
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 39,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 66,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00020402399968588725
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 6.793900047341594e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 4.5806999878550414e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "count",
              "complexity": 1,
              "line_start": 4,
              "line_end": 11
            },
            {
              "name": "nc2",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "answer",
              "complexity": 18,
              "line_start": 16,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 7.572300000902032e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 7,
              "line_end": 52
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 67,
              "line_end": 71
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 73,
              "line_end": 81
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 83,
              "line_end": 90
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 92,
              "line_end": 95
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 99,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00022213800002646167
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0002069710008072434
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0002053970001725247
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 7.092400028341217e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "testIfPossible",
              "complexity": 4,
              "line_start": 214,
              "line_end": 222
            },
            {
              "name": "dfs",
              "complexity": 3,
              "line_start": 230,
              "line_end": 242
            },
            {
              "name": "dfs2",
              "complexity": 8,
              "line_start": 248,
              "line_end": 263
            }
          ]
        }
      },
      "problem": "0071_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0003681440002765157
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "find_solution",
              "complexity": 10,
              "line_start": 51,
              "line_end": 62
            },
            {
              "name": "combination_to_recipe",
              "complexity": 3,
              "line_start": 71,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0071_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00021025700061727548
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "calc",
              "complexity": 4,
              "line_start": 15,
              "line_end": 28
            },
            {
              "name": "dfs",
              "complexity": 8,
              "line_start": 31,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0105_B",
      "tags": "brute force,probabilities",
      "tool": "complexipy",
      "execution_time": 9.11819997782004e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 5.873099962627748e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 0.00015943099970172625
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "yn",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 6.693599971185904e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "yn",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 6.03239996053162e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "yn",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "masks::all_masks_sos",
              "complexity": 8,
              "line_start": 68,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 0.0001992960005736677
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0285_D",
      "tags": "bitmasks,combinatorics,dp,implementation,meet-in-the-middle",
      "tool": "complexipy",
      "execution_time": 2.1120000383234583e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0285_D",
      "tags": "bitmasks,combinatorics,dp,implementation,meet-in-the-middle",
      "tool": "complexipy",
      "execution_time": 1.6521999896212947e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0285_D",
      "tags": "bitmasks,combinatorics,dp,implementation,meet-in-the-middle",
      "tool": "complexipy",
      "execution_time": 1.3705999663216062e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0449_D",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 5.567500011238735e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "zeta_super",
              "complexity": 7,
              "line_start": 12,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0449_D",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 7.372900017799111e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "LI2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LS2",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "zeta_transform",
              "complexity": 7,
              "line_start": 22,
              "line_end": 31
            },
            {
              "name": "bit_count",
              "complexity": 0,
              "line_start": 40,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0449_D",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0001300449994232622
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "prsh",
              "complexity": 10,
              "line_start": 11,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0453_B",
      "tags": "bitmasks,brute force,dp",
      "tool": "complexipy",
      "execution_time": 0.00010621100045682397
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.159800002729753e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.440400061866967e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.827199998340802e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.688800072472077e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.593800011003623e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.672500032640528e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.3181999899388757e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.7571000575553626e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.2993000129645225e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.329200055508409e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "per",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.860299966618186e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 2,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.15679996876861e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.24359997548163e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.297900017671054e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.235100029996829e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "combination",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.0404000578273553e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.563199960713973e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "combination",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.916399964509765e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.875000053696567e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.438300038600573e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.166899998381268e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.6419000278110616e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.398300006869249e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.8022000808268785e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "factorial",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 8,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.9112000599270687e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.7301999580231495e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.140999979223125e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.096900061587803e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "giveFactorial",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.877199990005465e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.4374999813735485e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "c",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 8,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.7971999518049415e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "probToMove",
              "complexity": 2,
              "line_start": 29,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.184600078995572e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.107799966528546e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.620599949907046e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.1658999432693236e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.292200017313007e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.687700013368158e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.7479999921051785e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.001500019512605e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.23389999216306e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.761800002801465e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.113599920354318e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.1278000026068185e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "wifi",
              "complexity": 7,
              "line_start": 4,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.469399937079288e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.1970999771147035e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "calc_arrangement",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc_combination",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.709899985755328e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.9294000089284964e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 9.489900003245566e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "C",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.8422000216087326e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "n_choose_k",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 10,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.299899996520253e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.620700019586366e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.3232000280113425e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.8880999858956784e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.26500000685337e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.4723000175727066e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.2920999476336874e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.45850000687642e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "C",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.602700028044637e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.0937000449048355e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "cm",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.789000013261102e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.7089999750605784e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.618600062007317e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.185800000617746e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.318200080888346e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.6499000341573264e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.137499960663263e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.889300023729447e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.742200013017282e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.751799992343877e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.6298999475548044e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "find_nCr",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.476400019688299e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "sequence_split_up",
              "complexity": 3,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "probability",
              "complexity": 5,
              "line_start": 14,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.803799962857738e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.100700036564376e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.2141999579616822e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.785799996578135e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.4563999836100265e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.6877999920980074e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.3163000150816515e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "C",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.6389000595372636e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.1550000383285806e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 3.428399941185489e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 2.9786000595777296e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 2.9786000595777296e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 4.1758000406844076e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 6.987199958530255e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 6.555399977514753e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 5.6615999710629694e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 4.276099934941158e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 3.785099943343084e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 116,
        "functions_count": 50,
        "raw_output": {
          "file_complexity": 116,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0030679350002174033
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.254900042928057e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.748999981529778e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "ctd",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 75,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00029867299963370897
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 9.659199986344902e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "inv_mod",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00012267100009921705
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.959500008932082e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.6256999667093623e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.148800053371815e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.539499968814198e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 3.993599966634065e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.339099996286677e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.0706000618229154e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 4.064699987793574e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.1980999918014277e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.1871000171813648e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 3.506600023683859e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 2.8683999516943004e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 2.2142000489111524e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 2.0929000129399356e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 2.9926000024715904e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "read_input",
              "complexity": 1,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "sol",
              "complexity": 5,
              "line_start": 15,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 38,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 0.00012696900012088008
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 4.42040000052657e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0513_C",
      "tags": "bitmasks,probabilities",
      "tool": "complexipy",
      "execution_time": 4.714899932878325e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 98,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 98,
          "functions": []
        }
      },
      "problem": "0513_C",
      "tags": "bitmasks,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0003004569998665829
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 66,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 66,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 28,
              "line_end": 43
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 45,
              "line_end": 69
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 71,
              "line_end": 79
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 84,
              "line_end": 88
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 90,
              "line_end": 99
            }
          ]
        }
      },
      "problem": "0547_C",
      "tags": "bitmasks,combinatorics,dp,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003875599995808443
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 7,
              "line_end": 22
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 24,
              "line_end": 48
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 60,
              "line_end": 61
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 63,
              "line_end": 67
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 69,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0547_C",
      "tags": "bitmasks,combinatorics,dp,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00030679900009999983
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "fun",
              "complexity": 7,
              "line_start": 24,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.00012118900031055091
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.6889000512019265e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.277199994045077e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.036800080735702e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.274200025771279e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "diff",
              "complexity": 1,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "LI2",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 27,
              "line_end": 27
            },
            {
              "name": "LS2",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 8.776499998930376e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.141799945500679e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.7862000024470035e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check_combination",
              "complexity": 3,
              "line_start": 3,
              "line_end": 8
            },
            {
              "name": "go",
              "complexity": 2,
              "line_start": 11,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.760000047099311e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "recurse",
              "complexity": 7,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.9264000406546984e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.9195999811927322e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.420299956109375e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "backtracking",
              "complexity": 7,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 11,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.756800055678468e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 9.038100051839137e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 15,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.113399988156743e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.545600040728459e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.1507999412715435e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.494400011230027e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.51270000464865e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.916399964509765e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "combine",
              "complexity": 2,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 14,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 8.094299937511096e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.403300044941716e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "func",
              "complexity": 9,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.356299996288726e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "set",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "isOn",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.92429999212618e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.8634999833011534e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.6669999897421803e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "subsets",
              "complexity": 3,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "computeValidProblemsets",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.344199987826869e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.6371000128856394e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.0345999877899885e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.531899943074677e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.559999964229064e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "subsets",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.821199970843736e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.7160999707120936e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.3595000129716936e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.00010386499980086228
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.6967999878688715e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "gen",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.876200000580866e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.5447000300337095e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "isValid",
              "complexity": 1,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.205799971008673e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.028800008702092e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.8301999666146e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.965500036429148e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.0116000743873883e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.9245000405353494e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.565699989849236e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.0266999601735733e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "check",
              "complexity": 7,
              "line_start": 11,
              "line_end": 22
            },
            {
              "name": "brute",
              "complexity": 3,
              "line_start": 24,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.87009999435395e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.5046000448346604e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.7092999769374728e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.707699983759085e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.788600032654358e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.440399970917497e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "fastio",
              "complexity": 0,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "debug",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.717599964962574e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.3614000130910426e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.8680000620370265e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.748799958382733e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.391200011217734e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.809699945937609e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.518100028391927e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.077299960656092e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.492200009233784e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.437299958226504e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.132800040679285e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.7883000257133972e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.889300023729447e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.547799977037357e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.340399987588171e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.511599970806856e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.732900015369523e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.338099981599953e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.02529999014223e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "check_combos",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "prog",
              "complexity": 1,
              "line_start": 14,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 9.364699963043677e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "swaparr",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 13,
              "line_end": 16
            },
            {
              "name": "nCr",
              "complexity": 2,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "upper_bound",
              "complexity": 3,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "primefs",
              "complexity": 5,
              "line_start": 40,
              "line_end": 54
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 57,
              "line_end": 67
            },
            {
              "name": "swap",
              "complexity": 0,
              "line_start": 70,
              "line_end": 74
            },
            {
              "name": "find",
              "complexity": 2,
              "line_start": 84,
              "line_end": 93
            },
            {
              "name": "union",
              "complexity": 2,
              "line_start": 98,
              "line_end": 105
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 108,
              "line_end": 116
            },
            {
              "name": "spf_sieve",
              "complexity": 12,
              "line_start": 120,
              "line_end": 130
            },
            {
              "name": "factoriazation",
              "complexity": 1,
              "line_start": 136,
              "line_end": 141
            },
            {
              "name": "int_array",
              "complexity": 0,
              "line_start": 146,
              "line_end": 147
            },
            {
              "name": "str_array",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.0006879970005684299
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "find",
              "complexity": 11,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 9.726300049806014e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.2409999878145754e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.85429993912112e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.104600040795049e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "combinations",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 13,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 8.747500032768585e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "GSB",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 9.287499960919376e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.923000000824686e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.556500036618672e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.5636000322701875e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.932099950063275e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.362199979368597e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "suma_o_resta",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "diferencia",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "no_sets",
              "complexity": 12,
              "line_start": 15,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.0001051580002240371
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "isValidSet",
              "complexity": 4,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "countValidSubsets",
              "complexity": 4,
              "line_start": 9,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.00010451700018165866
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.146799983573146e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.1307999708806165e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "lower_bound",
              "complexity": 4,
              "line_start": 7,
              "line_end": 19
            },
            {
              "name": "upper_bound",
              "complexity": 4,
              "line_start": 20,
              "line_end": 34
            },
            {
              "name": "abs",
              "complexity": 2,
              "line_start": 36,
              "line_end": 37
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 38,
              "line_end": 50
            },
            {
              "name": "kadane",
              "complexity": 3,
              "line_start": 51,
              "line_end": 60
            },
            {
              "name": "pref",
              "complexity": 1,
              "line_start": 61,
              "line_end": 65
            },
            {
              "name": "graph",
              "complexity": 2,
              "line_start": 66,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.00032618499972159043
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.8681000155047514e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.8173000828246586e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.5135999496560544e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.098800061707152e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.07160002598539e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.460299962578574e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 16,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0580_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011312300011923071
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "main",
              "complexity": 25,
              "line_start": 5,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 37,
              "line_end": 41
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 62,
              "line_end": 65
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0580_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00025625400030548917
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "main",
              "complexity": 25,
              "line_start": 5,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 37,
              "line_end": 41
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 62,
              "line_end": 65
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0580_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0003415340006540646
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011974500012001954
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "ok",
              "complexity": 38,
              "line_start": 67,
              "line_end": 101
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00044472799982031574
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "possible",
              "complexity": 50,
              "line_start": 1,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00023144599981606007
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00014100600037636468
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 50,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002070599994112854
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.793400022317655e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00020546800078591332
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012542700005724328
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 116,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 116,
          "functions": [
            {
              "name": "func",
              "complexity": 97,
              "line_start": 5,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00033157500001834705
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "chnge",
              "complexity": 1,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012822200005757622
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.561000024405075e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011897499916813103
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "dfs",
              "complexity": 9,
              "line_start": 29,
              "line_end": 38
            },
            {
              "name": "hnbhai",
              "complexity": 12,
              "line_start": 40,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0001918620000651572
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 14,
              "line_start": 6,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 48,
              "line_end": 55
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 61,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00029911399997217814
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00010268400001223199
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.634400026290677e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.965200009290129e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00010294399999111192
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 87,
        "functions_count": 28,
        "raw_output": {
          "file_complexity": 87,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 72,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 98,
              "line_end": 99
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 101,
              "line_end": 118
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 125,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 140,
              "line_end": 141
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 143,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 151,
              "line_end": 152
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 154,
              "line_end": 171
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 173,
              "line_end": 174
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 181,
              "line_end": 185
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 187,
              "line_end": 201
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 203,
              "line_end": 217
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 219,
              "line_end": 234
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 242,
              "line_end": 247
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 257,
              "line_end": 267
            },
            {
              "name": "binarySearch",
              "complexity": 4,
              "line_start": 271,
              "line_end": 282
            },
            {
              "name": "binarySearch1",
              "complexity": 4,
              "line_start": 283,
              "line_end": 294
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.0017902760000652052
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "bit",
              "complexity": 2,
              "line_start": 22,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00010199200005445164
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "dfs",
              "complexity": 9,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "setting",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "hnbhai",
              "complexity": 22,
              "line_start": 50,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00017802499951358186
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "lvl",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 7.939900024211966e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "find",
              "complexity": 5,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 9.821500043472042e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 7.656399975530803e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "maxx",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 5.1407000682957005e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "prime2",
              "complexity": 4,
              "line_start": 1,
              "line_end": 13
            },
            {
              "name": "arrivo",
              "complexity": 13,
              "line_start": 15,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 9.5610999778728e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "hgt",
              "complexity": 3,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "up",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "left",
              "complexity": 2,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "right",
              "complexity": 2,
              "line_start": 35,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 9.738399967318401e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 5.096600034448784e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "find_level",
              "complexity": 3,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "move_U",
              "complexity": 1,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "move_L",
              "complexity": 1,
              "line_start": 28,
              "line_end": 38
            },
            {
              "name": "move_R",
              "complexity": 1,
              "line_start": 40,
              "line_end": 50
            },
            {
              "name": "move",
              "complexity": 2,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "process",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.0001636179995330167
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 7.075400026224088e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 4.81610004499089e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 4.2069000301125925e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "l",
              "complexity": 5,
              "line_start": 1,
              "line_end": 11
            },
            {
              "name": "r",
              "complexity": 5,
              "line_start": 13,
              "line_end": 23
            },
            {
              "name": "u",
              "complexity": 7,
              "line_start": 25,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00013536499955080217
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.0002243530007035588
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 33,
              "line_start": 32,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00018281499978911597
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "main",
              "complexity": 24,
              "line_start": 8,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 6.202699933055555e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 5.8260000514565036e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 160,
        "functions_count": 45,
        "raw_output": {
          "file_complexity": 160,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 72,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 98,
              "line_end": 99
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 101,
              "line_end": 118
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 124,
              "line_end": 134
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 136,
              "line_end": 137
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 139,
              "line_end": 140
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 142,
              "line_end": 148
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 150,
              "line_end": 151
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 153,
              "line_end": 170
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 172,
              "line_end": 173
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 177,
              "line_end": 181
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 183,
              "line_end": 197
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 199,
              "line_end": 213
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 215,
              "line_end": 230
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 234,
              "line_end": 236
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 238,
              "line_end": 243
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 250,
              "line_end": 260
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 263,
              "line_end": 267
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 269,
              "line_end": 272
            },
            {
              "name": "DSU::union",
              "complexity": 3,
              "line_start": 274,
              "line_end": 283
            },
            {
              "name": "DSU::size",
              "complexity": 0,
              "line_start": 285,
              "line_end": 286
            },
            {
              "name": "DSU::top",
              "complexity": 0,
              "line_start": 288,
              "line_end": 291
            },
            {
              "name": "LazySegTree::__init__",
              "complexity": 54,
              "line_start": 295,
              "line_end": 401
            },
            {
              "name": "makeNode",
              "complexity": 0,
              "line_start": 407,
              "line_end": 409
            },
            {
              "name": "getTotal",
              "complexity": 0,
              "line_start": 412,
              "line_end": 413
            },
            {
              "name": "getCount",
              "complexity": 0,
              "line_start": 416,
              "line_end": 417
            },
            {
              "name": "nodeOp",
              "complexity": 0,
              "line_start": 423,
              "line_end": 428
            },
            {
              "name": "mapping",
              "complexity": 1,
              "line_start": 434,
              "line_end": 439
            },
            {
              "name": "composition",
              "complexity": 1,
              "line_start": 442,
              "line_end": 444
            },
            {
              "name": "memodict",
              "complexity": 0,
              "line_start": 446,
              "line_end": 453
            },
            {
              "name": "pollard_rho",
              "complexity": 25,
              "line_start": 456,
              "line_end": 486
            },
            {
              "name": "prime_factors",
              "complexity": 2,
              "line_start": 489,
              "line_end": 495
            },
            {
              "name": "distinct_factors",
              "complexity": 1,
              "line_start": 498,
              "line_end": 503
            },
            {
              "name": "all_factors",
              "complexity": 5,
              "line_start": 506,
              "line_end": 517
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 520,
              "line_end": 532
            },
            {
              "name": "binarySearch1",
              "complexity": 4,
              "line_start": 534,
              "line_end": 546
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.0031276680001610657
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 5.7158000345225446e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.00034021200008282904
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003036919997612131
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.00029877399992983555
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.0002914590004365891
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 5.992299975332571e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "getMul",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 9.953799963113852e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "bino",
              "complexity": 0,
              "line_start": 8,
              "line_end": 11
            },
            {
              "name": "find",
              "complexity": 15,
              "line_start": 14,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 9.052099994732998e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "do",
              "complexity": 16,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 6.918100007169414e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "Calculate_Mobius",
              "complexity": 13,
              "line_start": 13,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 9.061099990503863e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 4.471400006877957e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 3.8933999348955695e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 67,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.00023274899922398617
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1038_F",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 9.108199992624577e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 6,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0003953160003220546
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014962200020818273
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.46810001146514e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.518299960589502e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.9262999709753785e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.807899990235455e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.252599945990369e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010462699992785929
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.872999983897898e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "count_k",
              "complexity": 4,
              "line_start": 9,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.642400032636942e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.512199954362586e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.3711999751394615e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 3.872300021612318e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011068899948440958
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.236700028239284e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.239899928710656e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.136700019647833e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.492900062468834e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 72,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.000322978999975021
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 72,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0003169980000166106
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011630900007730816
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.774499994819053e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 19,
              "line_end": 23
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 25,
              "line_end": 33
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 35,
              "line_end": 42
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 44,
              "line_end": 47
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 51,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00024741600009292597
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.098400055838283e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.663600015599513e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.8340000578027684e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.676700038748095e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.6507000408601016e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.551100017939461e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.789600022078957e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.619300024292897e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00021057699996163137
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001391829991916893
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011478699980216334
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "reads",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "calc",
              "complexity": 6,
              "line_start": 27,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012762100050167646
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "Hamilton",
              "complexity": 17,
              "line_start": 49,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00021297200055414578
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "reads",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "calc",
              "complexity": 6,
              "line_start": 23,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012241100012033712
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 10,
              "line_end": 28
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 31,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00014469300003838725
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "to_bits",
              "complexity": 1,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "count_sat_users",
              "complexity": 1,
              "line_start": 45,
              "line_end": 52
            },
            {
              "name": "main",
              "complexity": 27,
              "line_start": 55,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1185_F",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.00025983999967138516
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "recur",
              "complexity": 11,
              "line_start": 8,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 8.40680004330352e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "main",
              "complexity": 24,
              "line_start": 6,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 43,
              "line_end": 47
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 48,
              "line_end": 56
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 57,
              "line_end": 64
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00023150700053520268
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 8.219499977712985e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "lol",
              "complexity": 3,
              "line_start": 4,
              "line_end": 14
            },
            {
              "name": "sp",
              "complexity": 9,
              "line_start": 17,
              "line_end": 56
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0001846980003392673
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "calc",
              "complexity": 11,
              "line_start": 11,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 6.664499960606918e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 20,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 9.536000015941681e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "calc",
              "complexity": 9,
              "line_start": 11,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 5.680699996446492e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 8.99500000741682e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "main",
              "complexity": 28,
              "line_start": 37,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00013182899965613615
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "out1",
              "complexity": 4,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "out2",
              "complexity": 4,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "out3",
              "complexity": 4,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "column",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00011437600005592685
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "out1",
              "complexity": 4,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "out2",
              "complexity": 4,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "out3",
              "complexity": 4,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "column",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 9.806500020204112e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "out1",
              "complexity": 4,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "out2",
              "complexity": 4,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "out3",
              "complexity": 4,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "column",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 9.385700013808673e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "findsum",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "finda",
              "complexity": 3,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "findb",
              "complexity": 3,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "findc",
              "complexity": 3,
              "line_start": 25,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00013292099993122974
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 1,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.250400034943596e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "main",
              "complexity": 43,
              "line_start": 6,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 35,
              "line_end": 39
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 40,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 49,
              "line_end": 56
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00022266000087256543
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.668400030524936e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "naiveSolve",
              "complexity": 0,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "main",
              "complexity": 38,
              "line_start": 10,
              "line_end": 64
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 72,
              "line_end": 73
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 76,
              "line_end": 77
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 84,
              "line_end": 87
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 89,
              "line_end": 92
            },
            {
              "name": "answerInteractive",
              "complexity": 6,
              "line_start": 94,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00022662700030195992
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "rnd",
              "complexity": 0,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "randrange",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.993300055706641e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 42,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012152899944339879
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010437699984322535
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.568400021933485e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.724699960614089e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.0034999983618036e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.0845999794546515e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.7928000134998e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "maxsa",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "fu",
              "complexity": 10,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014018499950907426
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "maxsa",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "fu",
              "complexity": 10,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013132799995219102
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.030499960412271e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 4,
              "line_end": 37
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 39,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011881400041602319
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 73,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00027443799990578555
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 73,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002813809996951022
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.147400058078347e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.501000047544949e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.820700011507142e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.9442000747367274e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.80779994581826e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "cord",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 74,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002910089997385512
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 72,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 72,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 2,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 53,
              "line_start": 23,
              "line_end": 75
            },
            {
              "name": "build_num_map",
              "complexity": 3,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "find_cycle",
              "complexity": 5,
              "line_start": 86,
              "line_end": 98
            },
            {
              "name": "calc_sums",
              "complexity": 4,
              "line_start": 101,
              "line_end": 109
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00038265199964371277
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 70,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 70,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 2,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 46,
              "line_start": 23,
              "line_end": 67
            },
            {
              "name": "build_answer",
              "complexity": 5,
              "line_start": 70,
              "line_end": 82
            },
            {
              "name": "build_num_map",
              "complexity": 3,
              "line_start": 85,
              "line_end": 90
            },
            {
              "name": "find_cycle",
              "complexity": 5,
              "line_start": 93,
              "line_end": 105
            },
            {
              "name": "calc_sums",
              "complexity": 4,
              "line_start": 108,
              "line_end": 116
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00032015399938245537
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 94,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 94,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 2,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 68,
              "line_start": 23,
              "line_end": 86
            },
            {
              "name": "calc_last_one",
              "complexity": 2,
              "line_start": 89,
              "line_end": 94
            },
            {
              "name": "build_answer",
              "complexity": 5,
              "line_start": 97,
              "line_end": 109
            },
            {
              "name": "build_num_map",
              "complexity": 3,
              "line_start": 112,
              "line_end": 117
            },
            {
              "name": "find_cycle",
              "complexity": 5,
              "line_start": 120,
              "line_end": 132
            },
            {
              "name": "calc_sums",
              "complexity": 4,
              "line_start": 135,
              "line_end": 143
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00045457699980033794
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 27
            },
            {
              "name": "compute_mask2i2cp",
              "complexity": 12,
              "line_start": 30,
              "line_end": 43
            },
            {
              "name": "output",
              "complexity": 11,
              "line_start": 46,
              "line_end": 64
            },
            {
              "name": "compute_mask_i2cp",
              "complexity": 20,
              "line_start": 67,
              "line_end": 97
            },
            {
              "name": "compute_previous_mask",
              "complexity": 16,
              "line_start": 100,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.0002832239997587749
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 73,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 73,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 27
            },
            {
              "name": "compute_mask2i2cp",
              "complexity": 24,
              "line_start": 30,
              "line_end": 50
            },
            {
              "name": "output",
              "complexity": 11,
              "line_start": 53,
              "line_end": 71
            },
            {
              "name": "compute_mask_i2cp",
              "complexity": 20,
              "line_start": 74,
              "line_end": 104
            },
            {
              "name": "compute_previous_mask",
              "complexity": 16,
              "line_start": 107,
              "line_end": 125
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00029231100052129477
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "build_mask",
              "complexity": 4,
              "line_start": 16,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.0001867420005510212
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "get_graph",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "chain",
              "complexity": 7,
              "line_start": 12,
              "line_end": 39
            },
            {
              "name": "helper",
              "complexity": 13,
              "line_start": 41,
              "line_end": 59
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 61,
              "line_end": 82
            },
            {
              "name": "result",
              "complexity": 3,
              "line_start": 84,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.0003302429995528655
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "get_graph",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "chain",
              "complexity": 7,
              "line_start": 12,
              "line_end": 39
            },
            {
              "name": "helper",
              "complexity": 13,
              "line_start": 41,
              "line_end": 59
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 60,
              "line_end": 84
            },
            {
              "name": "result",
              "complexity": 3,
              "line_start": 86,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.0003976399993916857
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "check",
              "complexity": 13,
              "line_start": 6,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 20,
              "line_end": 32
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 60,
              "line_end": 63
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 65,
              "line_end": 71
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0004169569992882316
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "ok",
              "complexity": 14,
              "line_start": 67,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0005787009995401604
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 2,
              "line_end": 55
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 61,
              "line_end": 62
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 73,
              "line_end": 83
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 85,
              "line_end": 88
            },
            {
              "name": "answerInteractive",
              "complexity": 0,
              "line_start": 90,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.000398551999751362
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 69,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 69,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 257
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 259,
              "line_end": 271
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 273,
              "line_end": 285
            },
            {
              "name": "find",
              "complexity": 14,
              "line_start": 292,
              "line_end": 310
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0027898409998670104
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "find_pair",
              "complexity": 15,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "backtracking",
              "complexity": 12,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 31,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00024658499933138955
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "solve",
              "complexity": 19,
              "line_start": 9,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00016824700014694827
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "solve",
              "complexity": 19,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.000166113999512163
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00012265099940123037
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "check",
              "complexity": 20,
              "line_start": 9,
              "line_end": 27
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 28,
              "line_end": 40
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 47,
              "line_end": 51
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 53,
              "line_end": 61
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 79,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00047010700018290663
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "possible",
              "complexity": 23,
              "line_start": 69,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0004643050006052363
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.000141146000714798
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00040715800059842877
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 76,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002932130000772304
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 76,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0003173180002704612
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.853000013506971e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "isPoss",
              "complexity": 14,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.35989997338038e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 11,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.776599952398101e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "main",
              "complexity": 37,
              "line_start": 4,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010419600039313082
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 4,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001673460001256899
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "ya",
              "complexity": 3,
              "line_start": 27,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00013017600031162146
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.7578999985707924e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 2,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.342700039065676e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.663799973059213e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "check",
              "complexity": 13,
              "line_start": 18,
              "line_end": 34
            },
            {
              "name": "getAnswer",
              "complexity": 13,
              "line_start": 37,
              "line_end": 53
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 56,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001150070002040593
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "bs",
              "complexity": 16,
              "line_start": 5,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.329900017793989e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "bisearch_max",
              "complexity": 3,
              "line_start": 21,
              "line_end": 31
            },
            {
              "name": "check",
              "complexity": 17,
              "line_start": 33,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001832349998949212
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 19,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.664399981877068e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "binarySearch",
              "complexity": 4,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.960899958765367e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 18,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.471999990433687e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014163700052449713
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 14,
              "line_start": 10,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.485100013582269e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 11,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.79259996509063e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 14,
              "line_start": 13,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.505099983973196e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "check",
              "complexity": 16,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.44490004965337e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "prof",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "report",
              "complexity": 0,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "mcheck",
              "complexity": 25,
              "line_start": 26,
              "line_end": 65
            },
            {
              "name": "go",
              "complexity": 15,
              "line_start": 68,
              "line_end": 111
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00018826500036084326
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "can_upper",
              "complexity": 12,
              "line_start": 16,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.674399967072532e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "check",
              "complexity": 20,
              "line_start": 2,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 33,
              "line_end": 45
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014014399948791834
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "find_pair",
              "complexity": 15,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "backtracking",
              "complexity": 12,
              "line_start": 21,
              "line_end": 30
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 32,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00012555600005725864
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "getminmax",
              "complexity": 3,
              "line_start": 7,
              "line_end": 19
            },
            {
              "name": "existsequalorbig",
              "complexity": 14,
              "line_start": 21,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.91870001598727e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.7138999434537254e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.233700059965486e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.385800083487993e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.384300063975388e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.0674999329203274e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "check",
              "complexity": 21,
              "line_start": 5,
              "line_end": 25
            },
            {
              "name": "meowmeow321",
              "complexity": 4,
              "line_start": 26,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.655300007376354e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.347099977370817e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 15,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.838700003048871e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 15,
              "line_start": 5,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.758700030535692e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 6,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.9472000430105254e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 6,
              "line_end": 21
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 90,
              "line_end": 90
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00019600900031946367
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.754800051567145e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "check",
              "complexity": 12,
              "line_start": 63,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00019571899974835105
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 6,
              "line_end": 35
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 90,
              "line_end": 90
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00020865300029981881
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.48400004542782e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 73,
              "line_end": 111
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002739370002018404
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.034400030330289e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "vanguda",
              "complexity": 12,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.383000072673894e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.969799975806382e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "bisect_f",
              "complexity": 10,
              "line_start": 9,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 30,
              "line_start": 26,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00013101700005790917
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "cal",
              "complexity": 12,
              "line_start": 18,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.962799958884716e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.181699973240029e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.200999956083251e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 163,
        "functions_count": 61,
        "raw_output": {
          "file_complexity": 163,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            },
            {
              "name": "TrieNode::__init__",
              "complexity": 0,
              "line_start": 557,
              "line_end": 559
            },
            {
              "name": "Trie::__init__",
              "complexity": 0,
              "line_start": 561,
              "line_end": 562
            },
            {
              "name": "Trie::getNode",
              "complexity": 0,
              "line_start": 563,
              "line_end": 564
            },
            {
              "name": "Trie::_charToIndex",
              "complexity": 0,
              "line_start": 565,
              "line_end": 566
            },
            {
              "name": "Trie::insert",
              "complexity": 4,
              "line_start": 567,
              "line_end": 575
            },
            {
              "name": "Trie::search",
              "complexity": 5,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 587,
              "line_end": 591
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 0,
              "line_start": 593,
              "line_end": 594
            },
            {
              "name": "BinaryTrie::insert",
              "complexity": 14,
              "line_start": 595,
              "line_end": 609
            },
            {
              "name": "BinaryTrie::query",
              "complexity": 12,
              "line_start": 610,
              "line_end": 625
            },
            {
              "name": "find",
              "complexity": 14,
              "line_start": 632,
              "line_end": 650
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.004027674999633746
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 10,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001039159997162642
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010099999963131268
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.443799990549451e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "MinCostFlow::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "MinCostFlow::add_edge",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "MinCostFlow::flow",
              "complexity": 22,
              "line_start": 15,
              "line_end": 61
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 64,
              "line_end": 67
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 69,
              "line_end": 77
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 79,
              "line_end": 91
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 93,
              "line_end": 94
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 149,
              "line_end": 156
            },
            {
              "name": "add",
              "complexity": 4,
              "line_start": 158,
              "line_end": 163
            }
          ]
        }
      },
      "problem": "1430_G",
      "tags": "bitmasks,dfs and similar,dp,flows,graphs,math",
      "tool": "complexipy",
      "execution_time": 0.00046456600011879345
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 5.818000045110239e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.5617000321508385e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.208999987691641e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 4,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 5.1125999561918434e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bitcount",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 18,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 7.010300032561645e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 4,
              "line_end": 20
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 22,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 8.391800020035589e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "convert_files_to_json",
              "complexity": 3,
              "line_start": 5,
              "line_end": 12
            },
            {
              "name": "extract_list",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 0.000274306999926921
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 9.609100015950389e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 4.279000040696701e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 4.002599962404929e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.701999958138913e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.6409000131243374e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.460500010987744e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.192999974999111e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.200100036337972e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.446499977144413e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.164999998261919e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.085899970756145e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.219999962311704e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.484499939077068e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.280200053268345e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.215000015188707e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.000310004000311892
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003156850007144385
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0002951870001197676
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0002853380001397454
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0002912990003096638
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001319190005233395
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "match",
              "complexity": 6,
              "line_start": 11,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 9.601100009604124e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 127,
        "functions_count": 41,
        "raw_output": {
          "file_complexity": 127,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "fact",
              "complexity": 5,
              "line_start": 100,
              "line_end": 107
            },
            {
              "name": "ifact",
              "complexity": 1,
              "line_start": 109,
              "line_end": 115
            },
            {
              "name": "per",
              "complexity": 3,
              "line_start": 117,
              "line_end": 121
            },
            {
              "name": "com",
              "complexity": 3,
              "line_start": 123,
              "line_end": 127
            },
            {
              "name": "catalan",
              "complexity": 0,
              "line_start": 129,
              "line_end": 130
            },
            {
              "name": "isprime",
              "complexity": 3,
              "line_start": 132,
              "line_end": 136
            },
            {
              "name": "floorsum",
              "complexity": 3,
              "line_start": 138,
              "line_end": 142
            },
            {
              "name": "inverse",
              "complexity": 1,
              "line_start": 144,
              "line_end": 147
            },
            {
              "name": "lowbit",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 153,
              "line_end": 155
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 157,
              "line_end": 160
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 162,
              "line_end": 167
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "DSU::same",
              "complexity": 0,
              "line_start": 223,
              "line_end": 224
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 226,
              "line_end": 230
            },
            {
              "name": "DSU::union",
              "complexity": 2,
              "line_start": 232,
              "line_end": 240
            },
            {
              "name": "DSU::size",
              "complexity": 1,
              "line_start": 242,
              "line_end": 242
            },
            {
              "name": "UFS::__init__",
              "complexity": 0,
              "line_start": 245,
              "line_end": 247
            },
            {
              "name": "UFS::find",
              "complexity": 1,
              "line_start": 249,
              "line_end": 252
            },
            {
              "name": "UFS::union",
              "complexity": 4,
              "line_start": 254,
              "line_end": 263
            },
            {
              "name": "Prime",
              "complexity": 12,
              "line_start": 265,
              "line_end": 278
            },
            {
              "name": "dij",
              "complexity": 9,
              "line_start": 280,
              "line_end": 294
            },
            {
              "name": "GP",
              "complexity": 0,
              "line_start": 296,
              "line_end": 296
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 297,
              "line_end": 297
            },
            {
              "name": "lis",
              "complexity": 3,
              "line_start": 298,
              "line_end": 306
            },
            {
              "name": "DLN::__init__",
              "complexity": 0,
              "line_start": 309,
              "line_end": 312
            },
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 314,
              "line_end": 317
            },
            {
              "name": "topo",
              "complexity": 9,
              "line_start": 319,
              "line_end": 333
            },
            {
              "name": "gdfs",
              "complexity": 5,
              "line_start": 335,
              "line_end": 342
            },
            {
              "name": "match",
              "complexity": 4,
              "line_start": 345,
              "line_end": 350
            },
            {
              "name": "pos",
              "complexity": 0,
              "line_start": 352,
              "line_end": 357
            },
            {
              "name": "dfs",
              "complexity": 1,
              "line_start": 359,
              "line_end": 371
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.001533060999463487
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 8,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 33,
              "line_start": 30,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0002101460004269029
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "match",
              "complexity": 4,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "cycleCheck",
              "complexity": 3,
              "line_start": 15,
              "line_end": 28
            },
            {
              "name": "toposort",
              "complexity": 3,
              "line_start": 30,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00018265400012751343
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "main",
              "complexity": 36,
              "line_start": 1,
              "line_end": 71
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00013903200033382745
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011992600047960877
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 4,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011214099959033774
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00010912600009760354
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 2,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00010442700022395002
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 2,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00010138099969481118
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "gen",
              "complexity": 7,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "Graph::__init__",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Graph::addEdge",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Graph::isCyclicUtil",
              "complexity": 6,
              "line_start": 31,
              "line_end": 41
            },
            {
              "name": "Graph::isCyclic",
              "complexity": 6,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "Graph::topologicalSortUtil",
              "complexity": 3,
              "line_start": 51,
              "line_end": 56
            },
            {
              "name": "Graph::topologicalSort",
              "complexity": 4,
              "line_start": 58,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00019857400002365466
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 8.346800041181268e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 9.961799969460117e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 7.652500062249601e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 20,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001499029995102319
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 20,
              "line_start": 21,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00013165899963496486
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011512699984450592
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011628900028881617
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001300549993175082
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "push",
              "complexity": 3,
              "line_start": 18,
              "line_end": 25
            },
            {
              "name": "match",
              "complexity": 7,
              "line_start": 27,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001849390000643325
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011498599997139536
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "patterns",
              "complexity": 1,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00012161999984527938
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "binary",
              "complexity": 6,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "dfs",
              "complexity": 7,
              "line_start": 18,
              "line_end": 30
            },
            {
              "name": "topo",
              "complexity": 5,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001225810001415084
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 9.022999984154012e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 28,
              "line_end": 83
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 94,
              "line_end": 98
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 100,
              "line_end": 108
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 110,
              "line_end": 117
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 119,
              "line_end": 122
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 126,
              "line_end": 132
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 135,
              "line_end": 146
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0003664309997475357
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 62,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 62,
          "functions": [
            {
              "name": "solve",
              "complexity": 45,
              "line_start": 28,
              "line_end": 114
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 126,
              "line_end": 130
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 132,
              "line_end": 140
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 142,
              "line_end": 149
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 151,
              "line_end": 154
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 158,
              "line_end": 164
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 167,
              "line_end": 178
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0004322849999880418
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 40,
              "line_start": 18,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00019839400010823738
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "main",
              "complexity": 34,
              "line_start": 5,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011255200024606893
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "get_hash",
              "complexity": 3,
              "line_start": 14,
              "line_end": 20
            },
            {
              "name": "matches",
              "complexity": 8,
              "line_start": 22,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00013266000041767256
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "Graph::__init__",
              "complexity": 1,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "Graph::add_edge",
              "complexity": 9,
              "line_start": 15,
              "line_end": 24
            },
            {
              "name": "Graph::topo_sort",
              "complexity": 13,
              "line_start": 26,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001788970002962742
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011349400028848322
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 61,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0002495100006854045
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "cal",
              "complexity": 1,
              "line_start": 34,
              "line_end": 40
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00014246800037653884
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "parse",
              "complexity": 0,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "match",
              "complexity": 4,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 15,
              "line_end": 48
            },
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 51,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00014450199978455203
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 306,
        "functions_count": 45,
        "raw_output": {
          "file_complexity": 306,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 31,
              "line_end": 40
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 62,
              "line_end": 74
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 75,
              "line_end": 102
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 103,
              "line_end": 129
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 131,
              "line_end": 141
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 143,
              "line_end": 154
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 156,
              "line_end": 170
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 172,
              "line_end": 186
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 189,
              "line_end": 192
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 194,
              "line_end": 202
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 204,
              "line_end": 216
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 218,
              "line_end": 219
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 221,
              "line_end": 222
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 225,
              "line_end": 230
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 232,
              "line_end": 241
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 243,
              "line_end": 261
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 269,
              "line_end": 272
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 274,
              "line_end": 276
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 278,
              "line_end": 280
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 282,
              "line_end": 284
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 286,
              "line_end": 302
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 306,
              "line_end": 326
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 329,
              "line_end": 332
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 334,
              "line_end": 342
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 345,
              "line_end": 352
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 355,
              "line_end": 360
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 362,
              "line_end": 374
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 376,
              "line_end": 385
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 387,
              "line_end": 396
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 399,
              "line_end": 412
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 414,
              "line_end": 417
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 426,
              "line_end": 427
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 429,
              "line_end": 445
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 447,
              "line_end": 471
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 473,
              "line_end": 497
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 2,
              "line_start": 500,
              "line_end": 510
            },
            {
              "name": "SegmentTree::update",
              "complexity": 1,
              "line_start": 512,
              "line_end": 517
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 519,
              "line_end": 535
            },
            {
              "name": "SegmentTree::bisect_l",
              "complexity": 28,
              "line_start": 537,
              "line_end": 570
            },
            {
              "name": "cond",
              "complexity": 66,
              "line_start": 590,
              "line_end": 650
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0036040060003870167
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "calc",
              "complexity": 21,
              "line_start": 7,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010617999942041934
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 8.362700009456603e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "judge",
              "complexity": 16,
              "line_start": 22,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011991600058536278
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010170199948333902
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010067000039271079
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011222200009797234
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010524900062591769
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.749399941938464e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.469799988437444e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 7.972999992489349e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 7.279800047399476e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LI1",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LLI1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "ok",
              "complexity": 21,
              "line_start": 19,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00013846099955117097
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 7.841800015739864e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 18,
              "line_start": 5,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.427700024389196e-05
    }
  ],
  "metrics": {
    "accuracy": 0.23408163265306123,
    "precision_macro": 0.1368030024687109,
    "recall_macro": 0.19080158401160593,
    "f1_macro": 0.15142965047017434,
    "precision_weighted": 0.15944334985623398,
    "recall_weighted": 0.23408163265306123,
    "f1_weighted": 0.1811851107002463,
    "confusion_matrix": [
      [
        519,
        0,
        157,
        0,
        44,
        15,
        56
      ],
      [
        349,
        0,
        206,
        0,
        55,
        4,
        55
      ],
      [
        315,
        0,
        300,
        0,
        125,
        41,
        72
      ],
      [
        253,
        0,
        299,
        0,
        120,
        37,
        87
      ],
      [
        98,
        0,
        243,
        0,
        177,
        71,
        68
      ],
      [
        10,
        0,
        152,
        0,
        226,
        151,
        67
      ],
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ]
    ],
    "per_class_metrics": {
      "constant": {
        "precision": 0.3189920098340504,
        "recall": 0.6561314791403287,
        "f1": 0.4292803970223325,
        "support": 791
      },
      "logn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1": 0.0,
        "support": 669
      },
      "linear": {
        "precision": 0.1984126984126984,
        "recall": 0.3516998827667057,
        "f1": 0.2536997885835095,
        "support": 853
      },
      "nlogn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1": 0.0,
        "support": 796
      },
      "quadratic": {
        "precision": 0.19666666666666666,
        "recall": 0.2694063926940639,
        "f1": 0.22736030828516376,
        "support": 657
      },
      "cubic": {
        "precision": 0.380352644836272,
        "recall": 0.24917491749174916,
        "f1": 0.30109670987038883,
        "support": 606
      },
      "exponential": {
        "precision": 0.0,
        "recall": 0.0,
        "f1": 0.0,
        "support": 0
      }
    },
    "classification_report": {
      "constant": {
        "precision": 0.3189920098340504,
        "recall": 0.6561314791403287,
        "f1-score": 0.4292803970223325,
        "support": 791.0
      },
      "logn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1-score": 0.0,
        "support": 669.0
      },
      "linear": {
        "precision": 0.1984126984126984,
        "recall": 0.3516998827667057,
        "f1-score": 0.2536997885835095,
        "support": 853.0
      },
      "nlogn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1-score": 0.0,
        "support": 796.0
      },
      "quadratic": {
        "precision": 0.19666666666666666,
        "recall": 0.2694063926940639,
        "f1-score": 0.22736030828516376,
        "support": 657.0
      },
      "cubic": {
        "precision": 0.380352644836272,
        "recall": 0.24917491749174916,
        "f1-score": 0.30109670987038883,
        "support": 606.0
      },
      "exponential": {
        "precision": 0.0,
        "recall": 0.0,
        "f1-score": 0.0,
        "support": 0.0
      },
      "micro avg": {
        "precision": 0.23408163265306123,
        "recall": 0.2623513266239707,
        "f1-score": 0.24741156169111303,
        "support": 4372.0
      },
      "macro avg": {
        "precision": 0.15634628853566965,
        "recall": 0.2180589531561211,
        "f1-score": 0.1730624576801992,
        "support": 4372.0
      },
      "weighted avg": {
        "precision": 0.17869908835671236,
        "recall": 0.2623513266239707,
        "f1-score": 0.20306656963202352,
        "support": 4372.0
      }
    }
  },
  "error_distribution": {
    "constant_as_linear": 157,
    "constant_as_quadratic": 44,
    "constant_as_exponential": 56,
    "constant_as_cubic": 15,
    "logn_as_linear": 206,
    "logn_as_constant": 349,
    "logn_as_exponential": 55,
    "logn_as_cubic": 4,
    "logn_as_quadratic": 55,
    "linear_as_quadratic": 125,
    "linear_as_exponential": 72,
    "linear_as_constant": 315,
    "linear_as_cubic": 41,
    "nlogn_as_linear": 299,
    "nlogn_as_constant": 253,
    "nlogn_as_cubic": 37,
    "nlogn_as_exponential": 87,
    "nlogn_as_quadratic": 120,
    "quadratic_as_linear": 243,
    "quadratic_as_cubic": 71,
    "quadratic_as_constant": 98,
    "quadratic_as_exponential": 68,
    "cubic_as_exponential": 67,
    "cubic_as_quadratic": 226,
    "cubic_as_linear": 152,
    "cubic_as_constant": 10,
    "np_as_cubic": 78,
    "np_as_exponential": 59,
    "np_as_quadratic": 153,
    "np_as_linear": 155,
    "np_as_constant": 83
  },
  "complexity_distance": {
    "mean_distance": 1.5096065873741995,
    "median_distance": 1.0,
    "max_distance": 6,
    "std_distance": 1.3485274171196162
  },
  "class_distribution": {
    "constant": {
      "true_count": 791,
      "predicted_count": 1627,
      "correct_predictions": 519,
      "true_percentage": 16.142857142857142,
      "predicted_percentage": 33.20408163265306,
      "accuracy_for_class": 65.61314791403287
    },
    "logn": {
      "true_count": 669,
      "predicted_count": 0,
      "correct_predictions": 0,
      "true_percentage": 13.653061224489797,
      "predicted_percentage": 0.0,
      "accuracy_for_class": 0.0
    },
    "linear": {
      "true_count": 853,
      "predicted_count": 1512,
      "correct_predictions": 300,
      "true_percentage": 17.408163265306122,
      "predicted_percentage": 30.857142857142854,
      "accuracy_for_class": 35.16998827667057
    },
    "nlogn": {
      "true_count": 796,
      "predicted_count": 0,
      "correct_predictions": 0,
      "true_percentage": 16.244897959183675,
      "predicted_percentage": 0.0,
      "accuracy_for_class": 0.0
    },
    "quadratic": {
      "true_count": 657,
      "predicted_count": 900,
      "correct_predictions": 177,
      "true_percentage": 13.408163265306122,
      "predicted_percentage": 18.367346938775512,
      "accuracy_for_class": 26.94063926940639
    },
    "cubic": {
      "true_count": 606,
      "predicted_count": 397,
      "correct_predictions": 151,
      "true_percentage": 12.36734693877551,
      "predicted_percentage": 8.10204081632653,
      "accuracy_for_class": 24.917491749174918
    },
    "exponential": {
      "true_count": 0,
      "predicted_count": 464,
      "correct_predictions": 0,
      "true_percentage": 0.0,
      "predicted_percentage": 9.46938775510204,
      "accuracy_for_class": 0
    }
  },
  "time_statistics": {
    "total_execution_time": 0.5524161210005332,
    "mean_time_per_sample": 0.00011055256714621928,
    "median_time_per_sample": 4.7124000047915615e-05,
    "min_time_per_sample": 1.993999831029214e-06,
    "max_time_per_sample": 0.06233758400048828,
    "std_time_per_sample": 0.0009329198603178914,
    "percentile_95_time": 0.0002739275003023067,
    "percentile_99_time": 0.0008151191396336838,
    "samples_per_second": 8870.124918014966,
    "total_samples": 4900
  },
  "total_samples": 4900,
  "valid_predictions": 4900
}