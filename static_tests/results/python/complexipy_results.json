{
  "predictions": [
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "findt",
              "complexity": 1,
              "line_start": 6,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 12,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00022942300029171747
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011788300025727949
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 72,
              "line_end": 73
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 78,
              "line_end": 79
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 90,
              "line_end": 91
            },
            {
              "name": "t_from_s_a_u",
              "complexity": 0,
              "line_start": 113,
              "line_end": 114
            },
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 117,
              "line_end": 158
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0004513210001277912
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010215300017080153
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.86269999682554e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "get_data",
              "complexity": 10,
              "line_start": 19,
              "line_end": 45
            },
            {
              "name": "time",
              "complexity": 3,
              "line_start": 50,
              "line_end": 61
            },
            {
              "name": "dist",
              "complexity": 2,
              "line_start": 64,
              "line_end": 73
            },
            {
              "name": "vel",
              "complexity": 2,
              "line_start": 76,
              "line_end": 85
            },
            {
              "name": "can_ignore_sign",
              "complexity": 1,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "ignore_sign",
              "complexity": 1,
              "line_start": 91,
              "line_end": 95
            },
            {
              "name": "get_time",
              "complexity": 3,
              "line_start": 98,
              "line_end": 122
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002731250001488661
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.409100024029613e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.41199999336095e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.954000011523021e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "DecimalPow",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "getLastT",
              "complexity": 1,
              "line_start": 10,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00014224899996406748
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "DecimalPow",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "getLastT",
              "complexity": 1,
              "line_start": 10,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00016025300010369392
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "time_distance",
              "complexity": 0,
              "line_start": 11,
              "line_end": 14
            },
            {
              "name": "time_accelerating",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "time_speed",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "distance_travelled",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 25,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00043830599997818354
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "gett",
              "complexity": 1,
              "line_start": 7,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00016295700015689363
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.266700004038285e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "func",
              "complexity": 1,
              "line_start": 2,
              "line_end": 8
            },
            {
              "name": "efficient",
              "complexity": 1,
              "line_start": 9,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 2,
              "line_start": 22,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012902300022687996
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.861700007400941e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dist",
              "complexity": 0,
              "line_start": 4,
              "line_end": 11
            },
            {
              "name": "travelTime",
              "complexity": 1,
              "line_start": 14,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.579300017823698e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.409200002759462e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getdt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "go",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0005_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.70690001748153e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 9.977999980037566e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.590000000665896e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.6640000214683823e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.641999789280817e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.129999863129342e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.397999873617664e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.4690000322589185e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.299999884300632e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.438999894773588e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.1963000360992737e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.5379997573036235e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.347999947640346e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.371000042941887e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 8.775999958743341e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.639000053430209e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.738999905384844e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.9899999794433825e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.917999947589124e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0084_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.948999958287459e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "luck",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "lucky",
              "complexity": 5,
              "line_start": 13,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 4.6597999698860804e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.0296999739221064e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.299199988759938e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.6638999972637976e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.2150999939185567e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 9.8489999800222e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.8014000033872435e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.4057000043976586e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "islucky",
              "complexity": 7,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 5.5604999943170696e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.374300013092579e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.091899978040601e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.711099978114362e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "lucky",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.101899983448675e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 2.3734000023978297e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "q121a_v2",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "generate_47_arr",
              "complexity": 2,
              "line_start": 13,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.641800003606477e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "luckynumber",
              "complexity": 9,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.920400013157632e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.071799983445089e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 3.1259000024874695e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0122_A",
      "tags": "brute force,number theory",
      "tool": "complexipy",
      "execution_time": 1.9657999928313075e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 5.4300003284879494e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.813299988702056e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 9.116999990510521e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.0328000320878346e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 8,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.0217999917804264e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.629000159184216e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.929999704472721e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.487999831326306e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.3360001907567494e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.8853999992861645e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.2993000129645225e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.267100030119764e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.97900009577279e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "valid",
              "complexity": 1,
              "line_start": 44,
              "line_end": 45
            },
            {
              "name": "div",
              "complexity": 7,
              "line_start": 48,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 61,
              "line_end": 72
            },
            {
              "name": "s",
              "complexity": 1,
              "line_start": 74,
              "line_end": 80
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 83,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 0.00017884700037029688
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.031900021393085e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "fib",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 4.9593000312597724e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0199_A",
      "tags": "brute force,constructive algorithms,implementation,number theory",
      "tool": "complexipy",
      "execution_time": 5.2099999265919905e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.4215999928856036e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.0378999832028057e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.1832000129506923e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.014800020333496e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 4.694900007962133e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.1008999940240756e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.144999982396257e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "Solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.3735000013402896e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.3134000002755783e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 4.28010002906376e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.9446000098687364e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "NOD",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "NOK",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 4.646800016416819e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.7461000172479544e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 30,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 0.00013583600002675666
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.8683999971690355e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.168000012010452e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 122,
              "line_end": 150
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 6.152600008135778e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 122,
              "line_end": 150
            }
          ]
        }
      },
      "problem": "0235_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 5.4292000186251244e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.165100022466504e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.482699983374914e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.0186999993020436e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.6660999790474307e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.547799977037357e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.059700020457967e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "read_lines",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "numz",
              "complexity": 4,
              "line_start": 17,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.015399983676616e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.788299980238662e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.3034000150801148e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.916599967444199e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "max1",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "minus",
              "complexity": 0,
              "line_start": 6,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.267899996397318e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.778700026188744e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "substraction",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.553299999723095e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.402000008165487e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "operations",
              "complexity": 2,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 6.06439998591668e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "num_ops",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.196800020712544e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.623999989737058e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.163999963362585e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0267_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.51260000570619e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.284299989696592e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 0.00019560800001272582
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.0610000117594609e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.603900020403671e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.6329999855079222e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.6371000128856394e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.340300008858321e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.230099991924362e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.077999988614465e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.4948000170988962e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.1823000022559427e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 5.21080000908114e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.0868999854428694e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 9.42799988479237e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 1.4557999747921713e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.90829995922104e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.3724000129732303e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 3.528699971866445e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0313_A",
      "tags": "implementation,number theory",
      "tool": "complexipy",
      "execution_time": 2.8353999823593767e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.0369999927206663e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "resistors",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.8475000160833588e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "seive",
              "complexity": 6,
              "line_start": 34,
              "line_end": 42
            },
            {
              "name": "rec",
              "complexity": 2,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00014407200023924815
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.2061999970901525e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.001800001176889e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 8.765999609749997e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.14010001400311e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.2802999865234597e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 9.808999948290875e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "it",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 11,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.115800018349546e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 81,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 81,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 38,
              "line_end": 44
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 46,
              "line_end": 56
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 58,
              "line_end": 75
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 96,
              "line_end": 124
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 126,
              "line_end": 151
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 153,
              "line_end": 179
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 181,
              "line_end": 187
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 189,
              "line_end": 194
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 196,
              "line_end": 201
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 203,
              "line_end": 206
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 208,
              "line_end": 211
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 213,
              "line_end": 215
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 226,
              "line_end": 229
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 231,
              "line_end": 237
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 239,
              "line_end": 241
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 245
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 247,
              "line_end": 249
            },
            {
              "name": "SegTree::__init__",
              "complexity": 0,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "SegTree::update",
              "complexity": 5,
              "line_start": 257,
              "line_end": 263
            },
            {
              "name": "SegTree::query",
              "complexity": 1,
              "line_start": 265,
              "line_end": 271
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 273,
              "line_end": 283
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 285,
              "line_end": 476
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 482,
              "line_end": 485
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 487,
              "line_end": 495
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 497,
              "line_end": 504
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 509,
              "line_end": 512
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 514,
              "line_end": 516
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 520,
              "line_end": 523
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 527,
              "line_end": 530
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0020019149997096974
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 81,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 81,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 38,
              "line_end": 44
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 46,
              "line_end": 56
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 58,
              "line_end": 75
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 96,
              "line_end": 124
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 126,
              "line_end": 151
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 153,
              "line_end": 179
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 181,
              "line_end": 187
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 189,
              "line_end": 194
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 196,
              "line_end": 201
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 203,
              "line_end": 206
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 208,
              "line_end": 211
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 213,
              "line_end": 215
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 226,
              "line_end": 229
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 231,
              "line_end": 237
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 239,
              "line_end": 241
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 245
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 247,
              "line_end": 249
            },
            {
              "name": "SegTree::__init__",
              "complexity": 0,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "SegTree::update",
              "complexity": 5,
              "line_start": 257,
              "line_end": 263
            },
            {
              "name": "SegTree::query",
              "complexity": 1,
              "line_start": 265,
              "line_end": 271
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 273,
              "line_end": 283
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 285,
              "line_end": 477
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 483,
              "line_end": 486
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 488,
              "line_end": 496
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 498,
              "line_end": 505
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 510,
              "line_end": 513
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 515,
              "line_end": 517
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 521,
              "line_end": 524
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 528,
              "line_end": 531
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.002103144999637152
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 81,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 81,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 38,
              "line_end": 44
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 46,
              "line_end": 56
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 58,
              "line_end": 75
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 96,
              "line_end": 124
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 126,
              "line_end": 151
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 153,
              "line_end": 179
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 181,
              "line_end": 187
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 189,
              "line_end": 194
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 196,
              "line_end": 201
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 203,
              "line_end": 206
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 208,
              "line_end": 211
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 213,
              "line_end": 215
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 226,
              "line_end": 229
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 231,
              "line_end": 237
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 239,
              "line_end": 241
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 245
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 247,
              "line_end": 249
            },
            {
              "name": "SegTree::__init__",
              "complexity": 0,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "SegTree::update",
              "complexity": 5,
              "line_start": 257,
              "line_end": 263
            },
            {
              "name": "SegTree::query",
              "complexity": 1,
              "line_start": 265,
              "line_end": 271
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 273,
              "line_end": 283
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 285,
              "line_end": 498
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 504,
              "line_end": 507
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 509,
              "line_end": 517
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 519,
              "line_end": 526
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 531,
              "line_end": 534
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 536,
              "line_end": 538
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 542,
              "line_end": 545
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 549,
              "line_end": 552
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.002196471999923233
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 15,
              "line_end": 23
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 25,
              "line_end": 32
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 34,
              "line_end": 37
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 41,
              "line_end": 47
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 52,
              "line_end": 52
            },
            {
              "name": "getint",
              "complexity": 0,
              "line_start": 53,
              "line_end": 53
            },
            {
              "name": "getints",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "getint1",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 57,
              "line_end": 59
            },
            {
              "name": "result",
              "complexity": 3,
              "line_start": 61,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0343_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0002216080001744558
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 5.07959998685692e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "primecheck",
              "complexity": 4,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.344300012031454e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "is_prime",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.8563999876496382e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "IIs",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.7771000279462896e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.055999973686994e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "is_prime",
              "complexity": 6,
              "line_start": 105,
              "line_end": 113
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00017427900002076058
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 8.897000043361913e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.1411999821575591e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 4.500500017456943e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.0288999874319416e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 8.796000201982679e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 8.024999715416925e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 9.647999831940979e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 1.1161000202264404e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "Is_prime",
              "complexity": 3,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.6448999960848596e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "iscomposite",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.6509999770496506e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.172000015183585e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 2.422599982310203e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "resheto",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0472_A",
      "tags": "math,number theory",
      "tool": "complexipy",
      "execution_time": 3.481500016278005e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.0266999601735733e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.436600016153534e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.483500015339814e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.4967000172182452e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.6488000205281423e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 8.858699993652408e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "get_array",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.781199984587147e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 69,
        "functions_count": 40,
        "raw_output": {
          "file_complexity": 69,
          "functions": [
            {
              "name": "increase_stack",
              "complexity": 0,
              "line_start": 43,
              "line_end": 45
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 56,
              "line_end": 57
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 60,
              "line_end": 61
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "maxfactor",
              "complexity": 4,
              "line_start": 72,
              "line_end": 78
            },
            {
              "name": "factors",
              "complexity": 3,
              "line_start": 81,
              "line_end": 87
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 90,
              "line_end": 102
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 105,
              "line_end": 114
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 117,
              "line_end": 130
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 133,
              "line_end": 144
            },
            {
              "name": "countchar",
              "complexity": 3,
              "line_start": 147,
              "line_end": 155
            },
            {
              "name": "str_counter",
              "complexity": 1,
              "line_start": 158,
              "line_end": 162
            },
            {
              "name": "lis",
              "complexity": 7,
              "line_start": 165,
              "line_end": 175
            },
            {
              "name": "lcm",
              "complexity": 1,
              "line_start": 178,
              "line_end": 188
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 191,
              "line_end": 192
            },
            {
              "name": "npr",
              "complexity": 0,
              "line_start": 195,
              "line_end": 196
            },
            {
              "name": "IF",
              "complexity": 1,
              "line_start": 202,
              "line_end": 203
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 206,
              "line_end": 207
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 210,
              "line_end": 211
            },
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 214,
              "line_end": 215
            },
            {
              "name": "JA",
              "complexity": 0,
              "line_start": 218,
              "line_end": 219
            },
            {
              "name": "JAA",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "PS",
              "complexity": 0,
              "line_start": 226,
              "line_end": 227
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 233,
              "line_end": 234
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 237,
              "line_end": 238
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 241,
              "line_end": 242
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 245,
              "line_end": 246
            },
            {
              "name": "MATI",
              "complexity": 0,
              "line_start": 249,
              "line_end": 250
            },
            {
              "name": "MATS",
              "complexity": 0,
              "line_start": 253,
              "line_end": 254
            },
            {
              "name": "IV",
              "complexity": 0,
              "line_start": 257,
              "line_end": 258
            },
            {
              "name": "FV",
              "complexity": 0,
              "line_start": 261,
              "line_end": 262
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 265,
              "line_end": 266
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 269,
              "line_end": 270
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 281,
              "line_end": 285
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 287,
              "line_end": 295
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 297,
              "line_end": 304
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 306,
              "line_end": 309
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 313,
              "line_end": 319
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 346,
              "line_end": 358
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 364,
              "line_end": 389
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0010688649999792688
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 1.7202999970322708e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.1278000026068185e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.3924999823066173e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 1.7472999843448633e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 1.9536999843694502e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "func",
              "complexity": 10,
              "line_start": 60,
              "line_end": 74
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 78,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0001936859998750151
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "func",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 78,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00018321599964110646
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.405599980193074e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.197899988866993e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.6599999728205148e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0483_A",
      "tags": "brute force,implementation,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.0228999801474856e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 7.734999599051662e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 2.7549999686016236e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.993999831029214e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.8929999896499794e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.56700002157595e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 5.330000021785963e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.507000201352639e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.5069997466052882e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.015999936906155e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.9230001271353103e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.8330001694266684e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 1.9230001271353103e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 8.395999884669436e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 5.089000296720769e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0630_A",
      "tags": "number theory",
      "tool": "complexipy",
      "execution_time": 3.376999757165322e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.184800011193147e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.196800020712544e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.24110001201916e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.919399978258298e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.41949998983182e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.079799989791354e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.240799984880141e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 292,
        "functions_count": 56,
        "raw_output": {
          "file_complexity": 292,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 331
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 333,
              "line_end": 341
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 344,
              "line_end": 351
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 354,
              "line_end": 359
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 361,
              "line_end": 373
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 375,
              "line_end": 384
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 386,
              "line_end": 395
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 398,
              "line_end": 411
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 413,
              "line_end": 416
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 425,
              "line_end": 426
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 428,
              "line_end": 444
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 446,
              "line_end": 470
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 472,
              "line_end": 496
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 501,
              "line_end": 502
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 504,
              "line_end": 510
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 512,
              "line_end": 519
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 521,
              "line_end": 528
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 530,
              "line_end": 539
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 541,
              "line_end": 550
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 552,
              "line_end": 568
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 570,
              "line_end": 581
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 583,
              "line_end": 591
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 2,
              "line_start": 594,
              "line_end": 603
            },
            {
              "name": "SegmentTree::update",
              "complexity": 1,
              "line_start": 605,
              "line_end": 610
            },
            {
              "name": "SegmentTree::query",
              "complexity": 5,
              "line_start": 612,
              "line_end": 625
            },
            {
              "name": "SegmentTree::bisect_l",
              "complexity": 28,
              "line_start": 627,
              "line_end": 660
            },
            {
              "name": "MinCostFlow::__init__",
              "complexity": 0,
              "line_start": 666,
              "line_end": 668
            },
            {
              "name": "MinCostFlow::add_edge",
              "complexity": 1,
              "line_start": 670,
              "line_end": 674
            },
            {
              "name": "MinCostFlow::flow",
              "complexity": 22,
              "line_start": 676,
              "line_end": 722
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.004529260999788676
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "fun",
              "complexity": 3,
              "line_start": 16,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 7.934899986139499e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.185900024822331e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.888000007165829e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.354299997226917e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.7600999803544255e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.117799997198745e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.5607999759813538e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.600900006655138e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.0906000069517177e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.9014000119786942e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0911_C",
      "tags": "brute force,constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.9986000299686566e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0138000309088966e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.4916999791457783e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7142000160674797e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8856000224332092e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9516000065777916e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.049899992722203e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.0579999980109278e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1601000298687723e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.1519999993179226e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.51990002450475e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.419100009225076e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5048000022943597e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5147999874898233e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.1992000054306118e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.047000023390865e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 3,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.715899967777659e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "req_num",
              "complexity": 2,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.421500014155754e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.366499984418624e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0912_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3886000033380697e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1671000013157027e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.492000011348864e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4536999970005127e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.438000233785715e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.72500015955302e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "Fast_power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4205000045185443e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1550000383285806e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1470999652374303e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.450000116979936e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5378999705717433e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.181000117067015e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.741000222769799e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.783999990351731e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.194999736588215e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.280000095808646e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9546999737940496e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.440000222733943e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.105000233626924e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "read_lines",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0913_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.168899977230467e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.9135000204405515e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.371499977016356e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.3664000056887744e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2903000171936583e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.782799982829602e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.04770003115118e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6871000298124272e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.171100004488835e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.99269998120144e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.694900007962133e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1971000023768283e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 25,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 36,
              "line_end": 37
            },
            {
              "name": "binarytodecimal",
              "complexity": 0,
              "line_start": 39,
              "line_end": 40
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 42,
              "line_end": 58
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 60,
              "line_end": 72
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 74,
              "line_end": 81
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 82,
              "line_end": 84
            },
            {
              "name": "getProduct",
              "complexity": 1,
              "line_start": 88,
              "line_end": 96
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 100,
              "line_end": 102
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 104,
              "line_end": 105
            },
            {
              "name": "checkisap",
              "complexity": 3,
              "line_start": 107,
              "line_end": 113
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 119,
              "line_end": 120
            },
            {
              "name": "di",
              "complexity": 0,
              "line_start": 122,
              "line_end": 122
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 123,
              "line_end": 123
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 124,
              "line_end": 124
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "indict",
              "complexity": 1,
              "line_start": 126,
              "line_end": 130
            },
            {
              "name": "frqdict",
              "complexity": 3,
              "line_start": 131,
              "line_end": 139
            }
          ]
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0005150709998815728
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.910400027962169e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.2690000100265024e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.0504999762779335e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.45980000324198e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.306799989237334e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0915_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010398599988548085
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1212000117666321e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.621000127575826e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2013000286970055e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.1800002438540105e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.610000243905233e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.639000053430209e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.6889999794075266e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.424000159517163e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.022999852779321e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.099900004599476e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.611800002545351e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.748000264953589e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.227000191458501e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.569000338960905e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.84700024369522e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3155000033293618e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.560999852605164e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.2579999899317045e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0964_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.896999714925187e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0089000170410145e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.436000371148111e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5449999864358688e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0399000075267395e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.987000001070555e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.3474000045098364e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "paper",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.85349999810569e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0089000170410145e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9244999950606143e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.645999969303375e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4488000033452408e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3674999991053483e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.073799962294288e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.48879998960183e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.486000297125429e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.486500029088347e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3735999800701393e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.126999884756515e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0965_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0440000096423319e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "fn",
              "complexity": 5,
              "line_start": 4,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.987400006939424e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.587300024169963e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.1587999930925434e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.261899968900252e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 21,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 46,
              "line_end": 47
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 49,
              "line_end": 50
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 62,
              "line_end": 71
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 77,
              "line_end": 82
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 84,
              "line_end": 95
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 97,
              "line_end": 110
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 112,
              "line_end": 114
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 117,
              "line_end": 117
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 119,
              "line_end": 119
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 121,
              "line_end": 121
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 123,
              "line_end": 123
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 126,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0005023879998589109
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.559700007826905e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "even_sum",
              "complexity": 3,
              "line_start": 5,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.00139999530802e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.406300013215514e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.934400001526228e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.484599983494263e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00016484099978697486
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.558400036738021e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.896199970971793e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.287100000510691e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "f",
              "complexity": 7,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.649799984690617e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "score",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.481400012286031e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.240099977119826e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.5818000014842255e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0975_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.9304999770829454e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5639000139344716e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00022388199977285694
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.003700001296238e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4477000149781816e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.137000233749859e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.544000254711136e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1863000054290751e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4537999959429726e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.004900013867882e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.628000043448992e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2022999726468697e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.317000149167143e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2554000022646505e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0320000001229346e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.868000233836938e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0599999768601265e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.001900000119349e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1280999842711026e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 51,
              "line_end": 64
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 65,
              "line_end": 72
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "0979_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00022051599989936221
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.6570000045467168e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.273299969601794e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5759999769215938e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.726299979054602e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.274199980296544e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3665999631484738e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3675000193179585e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8885999907070072e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8043999716610415e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.168100036215037e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 18,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 33,
              "line_end": 38
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 40,
              "line_end": 51
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017831599961937172
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8994999865972204e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.481300013343571e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.547799977037357e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.975500021624612e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2963999981584493e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2012000044924207e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8415000340610277e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8724999790720176e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8975999864778714e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.185099992857431e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.052700003536302e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014740799997525755
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.4223000259080436e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8104999981005676e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5999999959603883e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.723300010780804e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6279999726975802e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.785299991752254e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6851000054884935e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.836499995988561e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.90899980024551e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.423699995939387e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7413000023225322e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 34,
              "line_end": 45
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 50,
              "line_end": 60
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 65,
              "line_end": 73
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017401800005245605
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2431999695982086e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.573999998072395e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0991_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.879599994936143e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.2737999996898e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011520699990796857
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.889600005408283e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.114299998851493e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 68,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 68,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00019184199982191785
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.5806000343873166e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 16,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00024978099963846034
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 16,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00024908899968068
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 16,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002586479999990843
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.58349997845653e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.407099999705679e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.391800020035589e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.831799985069665e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 11,
              "line_end": 31
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 42,
              "line_end": 46
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 48,
              "line_end": 56
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 58,
              "line_end": 65
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00024276800013467437
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.505000005243346e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 83,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 83,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 86,
              "line_end": 97
            },
            {
              "name": "primeFactorsCount",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 112,
              "line_end": 121
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 124,
              "line_end": 135
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 138,
              "line_end": 146
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 149,
              "line_end": 159
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 162,
              "line_end": 171
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 174,
              "line_end": 179
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 190,
              "line_end": 203
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 206,
              "line_end": 212
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 215,
              "line_end": 219
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 222,
              "line_end": 226
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 228,
              "line_end": 233
            },
            {
              "name": "chk1",
              "complexity": 2,
              "line_start": 234,
              "line_end": 242
            },
            {
              "name": "chk2",
              "complexity": 2,
              "line_start": 243,
              "line_end": 251
            },
            {
              "name": "chk3",
              "complexity": 2,
              "line_start": 252,
              "line_end": 256
            },
            {
              "name": "chk4",
              "complexity": 2,
              "line_start": 257,
              "line_end": 261
            },
            {
              "name": "check1",
              "complexity": 4,
              "line_start": 264,
              "line_end": 268
            },
            {
              "name": "check2",
              "complexity": 2,
              "line_start": 271,
              "line_end": 274
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000994915999854129
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "ch_x",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.152600008135778e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010595000003377208
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0991_D",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.32619997607253e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.6268000258132815e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 8.80959996720776e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "inn1",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "inn2",
              "complexity": 6,
              "line_start": 10,
              "line_end": 18
            },
            {
              "name": "conv",
              "complexity": 1,
              "line_start": 19,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.0003062570003748988
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "onseg",
              "complexity": 1,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "orientation",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "doint",
              "complexity": 10,
              "line_start": 12,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00033142499978566775
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "check",
              "complexity": 1,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 46,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.0001305769997088646
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "sol",
              "complexity": 33,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00011300299956928939
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 5.876099976376281e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "in_sqr",
              "complexity": 1,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "in_tri",
              "complexity": 1,
              "line_start": 30,
              "line_end": 35
            },
            {
              "name": "solve_sqr_tri",
              "complexity": 1,
              "line_start": 37,
              "line_end": 46
            },
            {
              "name": "rotate90",
              "complexity": 1,
              "line_start": 48,
              "line_end": 49
            },
            {
              "name": "iterate_rot",
              "complexity": 1,
              "line_start": 51,
              "line_end": 54
            },
            {
              "name": "solve_sqr_sqr45",
              "complexity": 3,
              "line_start": 56,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.0001910700002554222
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "in_one",
              "complexity": 1,
              "line_start": 13,
              "line_end": 16
            },
            {
              "name": "in_two",
              "complexity": 1,
              "line_start": 19,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00010961699990730267
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "Point::__init__",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            },
            {
              "name": "Point::print",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "Line::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "Line::on",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "Line::print",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            },
            {
              "name": "Square::__init__",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "Square::area",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Square::lines",
              "complexity": 1,
              "line_start": 31,
              "line_end": 36
            },
            {
              "name": "Square::midpoint",
              "complexity": 0,
              "line_start": 38,
              "line_end": 39
            },
            {
              "name": "Square::print",
              "complexity": 1,
              "line_start": 41,
              "line_end": 43
            },
            {
              "name": "distance",
              "complexity": 0,
              "line_start": 46,
              "line_end": 47
            },
            {
              "name": "tri_area",
              "complexity": 0,
              "line_start": 50,
              "line_end": 56
            },
            {
              "name": "inter",
              "complexity": 1,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00024041300002863863
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "nextline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "types",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "strs",
              "complexity": 1,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "signum",
              "complexity": 3,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "range_includes",
              "complexity": 0,
              "line_start": 20,
              "line_end": 22
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 24,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00016131399979713024
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "vec::__init__",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "vec::__mod__",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "vec::__sub__",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "vec::__repr__",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "lines_cross",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "rot",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.00013192899996283813
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_C",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 6.121599972175318e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6351000340364408e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.26510000579583e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.0487000003631692e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8664999970496865e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00036320400022304966
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0003492189998723916
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 30,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 34,
              "line_end": 39
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 54,
              "line_end": 67
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 69,
              "line_end": 71
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0002591279999251128
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.217999983462505e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1561000266956398e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.234399996974389e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2393999895721208e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6551000044273678e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7161999949166784e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.077700032212306e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.57600025483407e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.409700007570791e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4617000033467775e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1023_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.865500007625087e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.74700026542996e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 25,
              "line_end": 33
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 34,
              "line_end": 41
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 0.00016052299997681985
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.827199998340802e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.3735000013402896e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.437700029782718e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.7552999906911282e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.1391000043659005e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.19800004339777e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.6681000033713644e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.05699971553986e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.581999969057506e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.818999842536869e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.972999926802004e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.385000000998843e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.1812999673566082e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.34499996926752e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.570999746851157e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.568000223225681e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1028_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.828000202105613e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.5057999664568342e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.4927000140451128e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.636800031221355e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.3182999686687253e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.689800016421941e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.9614999877812807e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.2882999928697245e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.3184000383480452e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.2111999896878842e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 1.8325000382901635e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.2170999727677554e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.525600024862797e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.0810000023629982e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "x",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 5.601500015472993e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "done",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "complete",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.130600013420917e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 2.714199990805355e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sign",
              "complexity": 2,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "which_square",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.6948999877495226e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "quadrant",
              "complexity": 4,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.934400001526228e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.844900008218247e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.323999852815177e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.6410003708151635e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.786000307736685e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.410000085248612e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.252000275708269e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.169999894860666e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.060000148660038e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.5608999749238137e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.64500009609037e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.623999863426434e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.294000170077197e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.206999948219163e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.49000014871126e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.216899990045931e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.9030002123326994e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.472000222856877e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.79300001138472e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.820999831485096e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0139000096387463e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9315000119822798e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.8459999763726955e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.1829999898036476e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.514500005825539e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.7662000320560765e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.8150000111490954e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "nextline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "types",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "strs",
              "complexity": 1,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.05619997663598e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.374400012035039e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.7940999845886836e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.80169998506608e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.130999994027661e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 7,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.776099993046955e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.438399992068298e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.8794000172638334e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9275000088091474e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "m",
              "complexity": 4,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.4162999984109774e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.455399994185427e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.89240001620783e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "go",
              "complexity": 14,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1036_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.494499989959877e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.154000003429246e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3294999916979577e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9265999981143977e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4587000350729795e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3625000065076165e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3825999758410035e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4737000128661748e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3305000265972922e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.2873999821749749e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.2883999715995742e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3335999938135501e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.2794000213034451e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1180000203457894e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4807999832555652e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3976999980513938e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4257000202633208e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.591000000189524e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3645999842992751e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1054_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5750000329717295e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.1190000097703887e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.588000011717668e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.4239997047698125e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.650999810313806e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.655999863549368e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.845000254746992e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0690000181057258e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.900999894947745e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.475999948132085e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.524000011471799e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6751999737607548e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7372999991493998e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2492000425700098e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.182000000379048e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.182000106491614e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0199000371358125e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.9169998318539e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3144000149623025e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.572000074811513e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.449999662232585e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "ac",
              "complexity": 2,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "work",
              "complexity": 11,
              "line_start": 10,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 9.172299996862421e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2943999990966404e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1020000076532597e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3115000001562294e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8153999917558394e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3214999853516929e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3646000297740102e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7512999875179958e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0248000055289594e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2323999726504553e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.715200005492079e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 3,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.326300000277115e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.3261999962851405e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0197999674564926e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7141999705927446e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 6,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.271099987818161e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6520999906788347e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0639999800332589e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.106000010826392e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.440699998056516e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5389000054710777e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.471799987484701e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4276999991125194e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2403000255289953e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3504999969882192e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0879999738099286e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3706000117963413e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2583999705384485e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2883999715995742e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.049899992722203e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3516000308300136e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0006000088178553e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 5,
              "line_end": 17
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.152900010012672e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "d",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4186000246118056e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3495999610313447e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "go",
              "complexity": 2,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.623899990794598e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4527000075759133e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1571999948500888e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1075_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.259300006495323e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0058000043500215e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.4236000172095373e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2342000193020795e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4868000107526314e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8233999981021043e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2784000318788458e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1360999906173674e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.586000149080064e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.5138000182778342e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.923500005636015e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4648000160377705e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.227000191458501e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2132999927416677e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.304999937536195e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2774999959219713e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.215100014131167e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3465999927575467e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.616999821242644e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1080_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.246999979950488e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "s",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0679000044765417e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.5999000172305387e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.3164000140241114e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 2,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.193099999203696e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "get",
              "complexity": 2,
              "line_start": 5,
              "line_end": 12
            },
            {
              "name": "solution",
              "complexity": 2,
              "line_start": 15,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.888200010100263e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.1308000163553515e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.5999000172305387e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "ss",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "sol",
              "complexity": 1,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 16,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.089699996256968e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.8042999929311918e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.645900005722069e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "SUM",
              "complexity": 0,
              "line_start": 10,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9655999696842628e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.441399960342096e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.0997000269271666e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.756800030416343e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "getsum",
              "complexity": 0,
              "line_start": 3,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9304999770829454e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getsum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.3651999931171304e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 20,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00012185000014142133
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.6419999812787864e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1080_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2762999833503272e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "pre",
              "complexity": 0,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "count",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010781300034068408
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.414000037897495e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 20,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001592809999237943
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "color",
              "complexity": 1,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "white",
              "complexity": 5,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "black",
              "complexity": 2,
              "line_start": 23,
              "line_end": 28
            },
            {
              "name": "intersect_1D",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "intersect_2D",
              "complexity": 0,
              "line_start": 36,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014730800012330292
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "getcol",
              "complexity": 4,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.960100017749937e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "quer",
              "complexity": 4,
              "line_start": 6,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 17,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.814499981075642e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "area",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "get_w",
              "complexity": 2,
              "line_start": 8,
              "line_end": 20
            },
            {
              "name": "intersect_rects",
              "complexity": 3,
              "line_start": 23,
              "line_end": 30
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 33,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010649099976944854
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "isin",
              "complexity": 2,
              "line_start": 34,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00023244799967869767
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "num_sq",
              "complexity": 3,
              "line_start": 1,
              "line_end": 11
            },
            {
              "name": "pt_in",
              "complexity": 1,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "intc",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017143299965027836
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "get_colors",
              "complexity": 14,
              "line_start": 1,
              "line_end": 22
            },
            {
              "name": "get_intersection",
              "complexity": 4,
              "line_start": 24,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00016969000034805504
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00018380700021225493
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "getBW",
              "complexity": 7,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00016593300006206846
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "read_line",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "solve2",
              "complexity": 10,
              "line_start": 7,
              "line_end": 26
            },
            {
              "name": "rnd_test",
              "complexity": 0,
              "line_start": 28,
              "line_end": 40
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 44,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0003441289995862462
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "wb",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00012418400001479313
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "interact",
              "complexity": 8,
              "line_start": 19,
              "line_end": 31
            },
            {
              "name": "area",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "winrect",
              "complexity": 5,
              "line_start": 38,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017642299962972174
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "black_count",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "black_count2",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "white_count2",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            },
            {
              "name": "intersection",
              "complexity": 2,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "intersection2",
              "complexity": 4,
              "line_start": 21,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 34,
              "line_end": 43
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 45,
              "line_end": 52
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001713830001790484
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "COMMON",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            },
            {
              "name": "BtoW",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "WtoB",
              "complexity": 1,
              "line_start": 22,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014969299991207663
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "whb",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "insegment",
              "complexity": 4,
              "line_start": 10,
              "line_end": 19
            },
            {
              "name": "inrect",
              "complexity": 3,
              "line_start": 21,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014539500034516095
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fis",
              "complexity": 5,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1080_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001211279995914083
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.269700017786818e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "eval_",
              "complexity": 11,
              "line_start": 6,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.94170000012673e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.285699985004612e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 8,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00020247199972800445
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.733000014311983e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "get_path_hv",
              "complexity": 4,
              "line_start": 1,
              "line_end": 22
            },
            {
              "name": "get_path_vh",
              "complexity": 4,
              "line_start": 24,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00017462899995734915
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getpath",
              "complexity": 10,
              "line_start": 41,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00016421999998783576
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001885960000436171
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011245199993936694
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "path",
              "complexity": 21,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00014107600009083399
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.6137000026647e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "abs",
              "complexity": 2,
              "line_start": 9,
              "line_end": 12
            },
            {
              "name": "calcLen",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 49,
              "line_start": 19,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0003197030000592349
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00015264699959516292
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.5746000068902504e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00013304100002642372
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "solve",
              "complexity": 27,
              "line_start": 12,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00014298999985840055
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 62,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00022101599961388274
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00014736799994352623
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "mock_query",
              "complexity": 2,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "query2",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "query",
              "complexity": 0,
              "line_start": 21,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 27,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 9.59909998528019e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.470599995125667e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010798399989653262
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010082000017064274
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.944099959582672e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 2,
              "line_start": 16,
              "line_end": 31
            },
            {
              "name": "get_ans",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00011020800002370379
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.176600027174572e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "qu",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.509599991957657e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "ask",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.162599993331241e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "interact",
              "complexity": 1,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 5.212799987930339e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.1880000278761145e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.217800000740681e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 7.745599987174501e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.7369999972725054e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "query",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.902299977198709e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.468800019210903e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.3005000255361665e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.0238999948342098e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.2984000022697728e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.1140999959025066e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.3395000223681564e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 2.8663999728451017e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.996999895316549e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "p",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 2.6310000066587236e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.2083000001439359e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 9.608999789634254e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.1510999684105627e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.2684000012086472e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.2233000234118663e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.85600002220599e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.275000254798215e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 9.458000022277702e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 8.587000138504663e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1100_C",
      "tags": "binary search,geometry,math",
      "tool": "complexipy",
      "execution_time": 1.513799998065224e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.3555999885284109e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.1301000085950363e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.9887000235030428e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.2243000128364656e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 0.0005535740001505474
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.5738000204000855e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.6931999653024832e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.0948999917891342e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.4386999737325823e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.474800001233234e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.3124000361131039e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.118099999075639e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 3.174999983457383e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.0809000034205383e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.1701000150642358e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.8944999939994887e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.622800022640149e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.518599987728521e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9285999769635964e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.7533999653096544e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.744000014194171e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.126899991912069e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.4916999791457783e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.426699964213185e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.878499981306959e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 5,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.4071999784355285e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.746900003738119e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.8752000111562666e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.0276999950729078e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9456000245554605e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.7671999760059407e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.586900018286542e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.797400000214111e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.6539999907981837e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.3935000172059517e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.3940000220318325e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.639999926643213e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.2699997468153015e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.024999715416925e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.9690002015267964e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.089999831398018e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.447999799594982e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.437999905348988e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.338000053394353e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.848500005507958e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.061000021873042e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3344999842956895e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.743999958620407e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.029000021750107e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.228999725659378e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.7190001168928575e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.959000307280803e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.913000106578693e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.742000095982803e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00019896499998139916
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.186000003552181e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.630099995963974e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.4918000033503631e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.482800007579499e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.616000008652918e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.2163000064902008e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.1611999980232213e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 9.768999916559551e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 8.486000297125429e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.0338999800296733e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 9.358000170323066e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.3996000234328676e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 9.467999916523695e-06
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "find",
              "complexity": 0,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.4345999918296002e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.4787000256765168e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.6347000079549616e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.1611999980232213e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.9796999822574435e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sq",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.549699977156706e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.059800019400427e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.1900999854551628e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 261,
        "functions_count": 55,
        "raw_output": {
          "file_complexity": 261,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 76,
              "line_end": 103
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 104,
              "line_end": 130
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 132,
              "line_end": 142
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 144,
              "line_end": 155
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 157,
              "line_end": 171
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 173,
              "line_end": 187
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 190,
              "line_end": 193
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 195,
              "line_end": 203
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 205,
              "line_end": 217
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 219,
              "line_end": 220
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 226,
              "line_end": 231
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 233,
              "line_end": 242
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 244,
              "line_end": 262
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 270,
              "line_end": 273
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 275,
              "line_end": 277
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 279,
              "line_end": 281
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 283,
              "line_end": 285
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 287,
              "line_end": 303
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 307,
              "line_end": 327
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 330,
              "line_end": 333
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 335,
              "line_end": 343
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 346,
              "line_end": 353
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 356,
              "line_end": 361
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 363,
              "line_end": 375
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 377,
              "line_end": 386
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 388,
              "line_end": 397
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 400,
              "line_end": 413
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 415,
              "line_end": 418
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 427,
              "line_end": 428
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 430,
              "line_end": 446
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 448,
              "line_end": 472
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 474,
              "line_end": 498
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 503,
              "line_end": 504
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 506,
              "line_end": 512
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 523,
              "line_end": 530
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 532,
              "line_end": 541
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 543,
              "line_end": 552
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 554,
              "line_end": 570
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 572,
              "line_end": 583
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 585,
              "line_end": 593
            },
            {
              "name": "Dinic::__init__",
              "complexity": 0,
              "line_start": 597,
              "line_end": 599
            },
            {
              "name": "Dinic::add_edge",
              "complexity": 0,
              "line_start": 601,
              "line_end": 605
            },
            {
              "name": "Dinic::add_multi_edge",
              "complexity": 0,
              "line_start": 607,
              "line_end": 611
            },
            {
              "name": "Dinic::bfs",
              "complexity": 7,
              "line_start": 613,
              "line_end": 625
            },
            {
              "name": "Dinic::dfs",
              "complexity": 8,
              "line_start": 627,
              "line_end": 639
            },
            {
              "name": "Dinic::flow",
              "complexity": 3,
              "line_start": 641,
              "line_end": 651
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0039007350001156738
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "chk",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.4162999984109774e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.2823000108473934e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 5,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.4114000047557056e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00016150400006154086
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.4837000182742486e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.9275000088091474e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.7741999929276062e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "checksq",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 10,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.3821999952342594e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.195999988747644e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.3765000150888227e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "inpi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "issq",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            },
            {
              "name": "g",
              "complexity": 3,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.054500024925801e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.2871999792405404e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.6359999992564553e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "is_square",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.2250999993266305e-05
    },
    {
      "true_complexity": "constant",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.143799969824613e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "field",
              "complexity": 0,
              "line_start": 4,
              "line_end": 17
            },
            {
              "name": "right_field",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "up_field",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "base_field",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "CodeforcesTask256BSolution::__init__",
              "complexity": 0,
              "line_start": 39,
              "line_end": 41
            },
            {
              "name": "CodeforcesTask256BSolution::read_input",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "CodeforcesTask256BSolution::process_task",
              "complexity": 7,
              "line_start": 46,
              "line_end": 65
            },
            {
              "name": "CodeforcesTask256BSolution::get_result",
              "complexity": 0,
              "line_start": 67,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0256_B",
      "tags": "binary search,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00015962099996613688
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.239299965367536e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4967999959480949e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4136999652691884e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5039000118122203e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2913999853481073e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.762000339222141e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.009800027735764e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0250000286760041e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 2,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8794000172638334e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 9,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 42,
              "line_end": 49
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 51,
              "line_end": 54
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 58,
              "line_end": 64
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001580580001245835
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2653000087302644e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.230099991924362e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 15,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8603999908227706e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "f",
              "complexity": 13,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.085400036681676e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.3583000004000496e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7161000161868287e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2201999854587484e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.374499990764889e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 37,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010821400019267458
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.4284000068728346e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4747000225033844e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.556999995955266e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.0485999761585845e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9196000266674673e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5799999800947262e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.2310999813489616e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 18,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 62,
              "line_end": 79
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 81,
              "line_end": 86
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 88,
              "line_end": 100
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 103,
              "line_end": 113
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 116,
              "line_end": 129
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 130,
              "line_end": 136
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 141,
              "line_end": 150
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 151,
              "line_end": 152
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 153,
              "line_end": 156
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 157,
              "line_end": 158
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 159,
              "line_end": 160
            },
            {
              "name": "has",
              "complexity": 0,
              "line_start": 171,
              "line_end": 172
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 174,
              "line_end": 179
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0005442360002234636
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.4564000290847616e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 7,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.166900023643393e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "cntbit",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.377500004513422e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.912499985541217e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "maxXor",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9737000002351124e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7382000098441495e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4147000001685228e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "maxXor",
              "complexity": 4,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.999700018335716e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "maxor",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.966699983313447e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bin",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "convBin",
              "complexity": 1,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "maxi",
              "complexity": 1,
              "line_start": 15,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.0784999732277356e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.073699983564438e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6018999960797373e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.197299980049138e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.5726999815087765e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7893000151379965e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "fi2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "fi3",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "fo",
              "complexity": 1,
              "line_start": 23,
              "line_end": 26
            },
            {
              "name": "puts",
              "complexity": 1,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "mask",
              "complexity": 1,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "getn",
              "complexity": 2,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.168299993689288e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "fastio",
              "complexity": 0,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.927700011758134e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.55969996235217e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1459999970829813e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.5026000205107266e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3956000202597352e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.483999979740474e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.829000191530213e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 3,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.787200012084213e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 22,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.149599994387245e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 22,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.796899995402782e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "Maxxor",
              "complexity": 3,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.1569999919156544e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.258999979356304e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.414499977021478e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.036999927047873e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.416500021558022e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0339000002422836e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.31200009593158e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.821299995048321e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.229599987113033e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.891300002578646e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "bina",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "con",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.669199971540365e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "fill",
              "complexity": 1,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "check",
              "complexity": 3,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "Engine1",
              "complexity": 1,
              "line_start": 20,
              "line_end": 23
            },
            {
              "name": "Engine2",
              "complexity": 1,
              "line_start": 24,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.30559997666569e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.755099987756694e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.1939999644237105e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7453000054956647e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8993999876547605e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.580799991847016e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012865200005762745
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6480000087758526e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2914000055607175e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "number",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.395299993120716e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.6408000141818775e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3354999737202888e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.5678000131156296e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "maxXORInRange",
              "complexity": 2,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3964999854797497e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.255100000387756e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3313999918173067e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9737999991775723e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001095770003303187
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.79979998494673e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.902199998468859e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.8984000184427714e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.051500011177268e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "mod_expo",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            },
            {
              "name": "is_square",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "find_div",
              "complexity": 6,
              "line_start": 16,
              "line_end": 25
            },
            {
              "name": "find_x",
              "complexity": 4,
              "line_start": 27,
              "line_end": 33
            },
            {
              "name": "find_base_side",
              "complexity": 7,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "str_add",
              "complexity": 3,
              "line_start": 43,
              "line_end": 52
            },
            {
              "name": "str_sub",
              "complexity": 3,
              "line_start": 54,
              "line_end": 63
            },
            {
              "name": "find_massive_x",
              "complexity": 1,
              "line_start": 65,
              "line_end": 76
            },
            {
              "name": "find_triples",
              "complexity": 1,
              "line_start": 77,
              "line_end": 92
            },
            {
              "name": "find_max_xor",
              "complexity": 1,
              "line_start": 94,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00030878200004735845
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "dec_to_bin",
              "complexity": 1,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "max_xor",
              "complexity": 12,
              "line_start": 15,
              "line_end": 57
            },
            {
              "name": "bin_to_dec",
              "complexity": 3,
              "line_start": 59,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00015458100006071618
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 30,
              "line_end": 30
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 31,
              "line_end": 31
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 32,
              "line_end": 32
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 33,
              "line_end": 33
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 34,
              "line_end": 34
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 35,
              "line_end": 35
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 36,
              "line_end": 36
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 37,
              "line_end": 37
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 38,
              "line_end": 38
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 39,
              "line_end": 39
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 44,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002085129999613855
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.276000001686043e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.331999975373037e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.497300000773976e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.710399970368599e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3354999737202888e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "max_xor_naive",
              "complexity": 6,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "max_xor_efficient",
              "complexity": 4,
              "line_start": 15,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.79450003594684e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.720700002915692e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.426000001942157e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 1,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011508699981277459
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.1046999942627735e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4286999885371188e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2633000298810657e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9807999706245027e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3505999959306791e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.092000022457796e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.1512000128277577e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5939000352082076e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5659999917261302e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1380000362114515e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.000400005883421e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.668699986927095e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0018000213894993e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00022227899989957223
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 9,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001666339999246702
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5638999886723468e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1741000182373682e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 107,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00022195900010046898
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "ncr_util",
              "complexity": 2,
              "line_start": 9,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 20,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001477079999858688
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 20,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "eprint",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "string",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "fori",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "inc",
              "complexity": 1,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "fli",
              "complexity": 0,
              "line_start": 33,
              "line_end": 34
            },
            {
              "name": "comp",
              "complexity": 2,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "gi",
              "complexity": 0,
              "line_start": 39,
              "line_end": 40
            },
            {
              "name": "gtc",
              "complexity": 0,
              "line_start": 41,
              "line_end": 42
            },
            {
              "name": "cil",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "pro",
              "complexity": 0,
              "line_start": 47,
              "line_end": 48
            },
            {
              "name": "swap",
              "complexity": 0,
              "line_start": 49,
              "line_end": 50
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 53,
              "line_end": 54
            },
            {
              "name": "gh",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "isvalid",
              "complexity": 1,
              "line_start": 57,
              "line_end": 58
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 59,
              "line_end": 60
            },
            {
              "name": "graph",
              "complexity": 1,
              "line_start": 61,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0276_D",
      "tags": "bitmasks,dp,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.000344760000189126
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 5,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.695699994452298e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.247099994041491e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "suma",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "sumaij",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "bin_search_solution",
              "complexity": 5,
              "line_start": 9,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 23,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.938099977560341e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.455399994185427e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ok",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.7992000216036104e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.1649000195320696e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.416399977140827e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "sum_from_to",
              "complexity": 1,
              "line_start": 11,
              "line_end": 14
            },
            {
              "name": "min_splitters",
              "complexity": 3,
              "line_start": 17,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.941200015513459e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "bsearch",
              "complexity": 3,
              "line_start": 7,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.6878000123106176e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "s",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "diff",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "bs",
              "complexity": 5,
              "line_start": 9,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.759899977419991e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.6106000101863174e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sum_from1",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "sum_of_subtraction",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.310899971140316e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.7520999740081606e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.501700009815977e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "valid",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.956499995183549e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "valid",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.600800027925288e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.5238000034732977e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "minSplitters",
              "complexity": 12,
              "line_start": 7,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.918199985899264e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.169000001435052e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.705000017362181e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "range_sum",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 9,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.409200002759462e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "reach_max",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.079800035266089e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.786099998455029e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.491400022743619e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.698900011135265e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.705900028056931e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.49750000370841e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "sum2",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "sum1",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.138799977226881e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.383499986535753e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.4716000098123914e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "normal_sum",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "bs_sum",
              "complexity": 3,
              "line_start": 11,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.487299970103777e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.2331000056728953e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getSum",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            },
            {
              "name": "getSumOfTwo",
              "complexity": 1,
              "line_start": 5,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.336999993232894e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "sum_1",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "sum_2",
              "complexity": 1,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "mini_splitter",
              "complexity": 3,
              "line_start": 10,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.17260002400144e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "sum_range",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 9,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.139700033396366e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "sm",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "summ",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 9,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.167599985928973e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "reach_max",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.109900035269675e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "multi_input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "sum",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "function",
              "complexity": 7,
              "line_start": 9,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.175699991217698e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "lower_bound",
              "complexity": 3,
              "line_start": 1,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 14,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.1619000057835365e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.4717000087548513e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "findValue",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.267999995339778e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.666700008077896e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.362299958098447e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "in_bounds",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.160900041621062e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "inlist",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "instr",
              "complexity": 0,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "getSum",
              "complexity": 0,
              "line_start": 38,
              "line_end": 43
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 46,
              "line_end": 67
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 76,
              "line_end": 80
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 82,
              "line_end": 90
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 92,
              "line_end": 99
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 101,
              "line_end": 104
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 108,
              "line_end": 114
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 118,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.0004118169999856036
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.280999994283775e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 4.9764000323193613e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "total_count",
              "complexity": 6,
              "line_start": 9,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00011548799966476508
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "total_count",
              "complexity": 6,
              "line_start": 9,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00010914500035141828
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.901099984839675e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "readlines",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "read",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "solve_naive",
              "complexity": 20,
              "line_start": 17,
              "line_end": 38
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 41,
              "line_end": 56
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 59,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00020370400034153135
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "sum_from_two",
              "complexity": 0,
              "line_start": 4,
              "line_end": 8
            },
            {
              "name": "sum_last",
              "complexity": 1,
              "line_start": 10,
              "line_end": 22
            },
            {
              "name": "possible",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 27,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00012451500015231431
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "bin_search",
              "complexity": 4,
              "line_start": 9,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.083299988153158e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "is_good",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.082399997671018e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "bs",
              "complexity": 6,
              "line_start": 1,
              "line_end": 50
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 55,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00011830299990833737
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "bs",
              "complexity": 4,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 12,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.578299982924364e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 1,
              "line_end": 14
            },
            {
              "name": "min_splitters",
              "complexity": 3,
              "line_start": 17,
              "line_end": 29
            },
            {
              "name": "sum_consecutive",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "sum_consecutive2",
              "complexity": 0,
              "line_start": 36,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0287_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00010517800001252908
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0338_A",
      "tags": "greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.305199970782269e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "fast_power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0338_A",
      "tags": "greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.2629000037995866e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "contain",
              "complexity": 1,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "ask",
              "complexity": 3,
              "line_start": 7,
              "line_end": 17
            },
            {
              "name": "binsearch",
              "complexity": 3,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "shrink",
              "complexity": 0,
              "line_start": 27,
              "line_end": 35
            },
            {
              "name": "go",
              "complexity": 10,
              "line_start": 36,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0713_B",
      "tags": "binary search,constructive algorithms,interactive",
      "tool": "complexipy",
      "execution_time": 0.00032998200003930833
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "balance",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "get_lr",
              "complexity": 12,
              "line_start": 5,
              "line_end": 55
            },
            {
              "name": "get_ud",
              "complexity": 12,
              "line_start": 58,
              "line_end": 108
            }
          ]
        }
      },
      "problem": "0713_B",
      "tags": "binary search,constructive algorithms,interactive",
      "tool": "complexipy",
      "execution_time": 0.0005948420002823696
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "req",
              "complexity": 0,
              "line_start": 5,
              "line_end": 14
            },
            {
              "name": "bin",
              "complexity": 11,
              "line_start": 17,
              "line_end": 34
            },
            {
              "name": "find_rec",
              "complexity": 0,
              "line_start": 37,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0713_B",
      "tags": "binary search,constructive algorithms,interactive",
      "tool": "complexipy",
      "execution_time": 0.0002206760000262875
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.395300038595451e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.802000012205099e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "func",
              "complexity": 2,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 6.35799997326103e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.3834000078059034e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 15,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 54,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00031531500007986324
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "digit",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "big",
              "complexity": 3,
              "line_start": 8,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 6.120599982750718e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "digit",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "big",
              "complexity": 3,
              "line_start": 8,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.639799999495153e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.345300001456053e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.858199988826527e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 8.832699995764415e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "bin",
              "complexity": 6,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 6.929000028321752e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 9.563000003254274e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "dfs",
              "complexity": 9,
              "line_start": 31,
              "line_end": 40
            },
            {
              "name": "dfs2",
              "complexity": 3,
              "line_start": 45,
              "line_end": 50
            },
            {
              "name": "hnbhai",
              "complexity": 3,
              "line_start": 51,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00019259300006524427
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "binsearch",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.693699995390489e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.0405999698123196e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "find",
              "complexity": 7,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00010297400012859725
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "digitsum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.168699999558157e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "BIG",
              "complexity": 2,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.813999996462371e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.1587999930925434e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.1838000217685476e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.9906000236223917e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "ok",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "check",
              "complexity": 3,
              "line_start": 21,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 7.823700025255675e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.490600010991329e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "summing",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "result",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.548500010059797e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.0738999864988727e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "digit",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.857299998344388e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.073799962294288e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "digs",
              "complexity": 1,
              "line_start": 3,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.0728999970742734e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "getval",
              "complexity": 1,
              "line_start": 4,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.100800015294226e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "mus",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.3754000267217634e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sum_of_digits",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.2312000055535464e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "really_big",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.3614999918208923e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "somadig",
              "complexity": 1,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 16,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.00149999425048e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "somaDigitos",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "isReallyBigNumber",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.7079000069061294e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "ok",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.69099998351885e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "nine",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "prosh",
              "complexity": 1,
              "line_start": 7,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.30400002389797e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "nine",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "prosh",
              "complexity": 1,
              "line_start": 7,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.871200007983134e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "d",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 10,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.3560999731416814e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "d",
              "complexity": 1,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 9,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.646699971999624e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "digisum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 6.230799999684677e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.4856000183935976e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "case",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.3450999985216185e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "ver",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.78500001008797e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "sum_of_digits",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.121899999314337e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "dsum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.850400005627307e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.678799996327143e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "forninho",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.30420000157028e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "qtd",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "digitos",
              "complexity": 1,
              "line_start": 8,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.156900013185805e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "bigNumber",
              "complexity": 5,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.7382000098441495e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.1249999917927198e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "get_decimal_value_digits",
              "complexity": 1,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "is_big_num",
              "complexity": 1,
              "line_start": 17,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.674800038628746e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.9596999663917813e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.769399978002184e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 1.6932000107772183e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.8332000258378685e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.3344000055658398e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.1952000224700896e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "really_big",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 12,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.0004999846132705e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 2.3363999844150385e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "digit_sum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "bsearch",
              "complexity": 6,
              "line_start": 9,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.0035999973042635e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 31,
              "line_end": 36
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 39,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00011063900001317961
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0817_C",
      "tags": "binary search,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.534600020633661e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "pow2",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "calc",
              "complexity": 2,
              "line_start": 15,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.944400032196427e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 23,
              "line_end": 28
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 33,
              "line_end": 44
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 49,
              "line_end": 59
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 64,
              "line_end": 72
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 77,
              "line_end": 82
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 87,
              "line_end": 90
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 95,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00019405600005484303
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.3244000203703763e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.437700029782718e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2773999969795113e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8996000108018052e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "BinarySearch",
              "complexity": 3,
              "line_start": 10,
              "line_end": 15
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "linput",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "fiinput",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "fminput",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "flinput",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.241599996632431e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 63,
        "functions_count": 23,
        "raw_output": {
          "file_complexity": 63,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 86,
              "line_end": 97
            },
            {
              "name": "primeFactorsCount",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 112,
              "line_end": 121
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 124,
              "line_end": 135
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 138,
              "line_end": 146
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 149,
              "line_end": 159
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 162,
              "line_end": 171
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 174,
              "line_end": 179
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 190,
              "line_end": 203
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 206,
              "line_end": 212
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 215,
              "line_end": 219
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 222,
              "line_end": 226
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 228,
              "line_end": 233
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0007238550001602562
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6480999875057023e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 69,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00026863699986279244
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2251999780564802e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.734200031933142e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9777000034082448e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6682000023138244e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8645999716682127e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.17180001224915e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bpow",
              "complexity": 2,
              "line_start": 5,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.8302000120893354e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pot",
              "complexity": 2,
              "line_start": 9,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.772100035348558e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.6357999761094106e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "bin_pow",
              "complexity": 3,
              "line_start": 7,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.52230000923737e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.588800018405891e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0749000213982072e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pwr",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.493599979265127e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8695000107982196e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "get2k",
              "complexity": 3,
              "line_start": 13,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.623699987860164e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.997800018216367e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "my_pow",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.371399998286506e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4677999843115686e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fastexp",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.335199992056005e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6901999970286852e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4045999705558643e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "somaPa",
              "complexity": 1,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "diminui",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.672899993034662e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.890600015030941e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4797999938309658e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.483599994069664e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.283099997337558e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.664899986688397e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.220000027999049e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pow",
              "complexity": 2,
              "line_start": 11,
              "line_end": 18
            },
            {
              "name": "_main",
              "complexity": 1,
              "line_start": 20,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.4874999730382115e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "bin_pow",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.3183000141434604e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "a",
              "complexity": 1,
              "line_start": 4,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.064799966523424e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pow2",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.728199979173951e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "pw",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.7842999770655297e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1379999907367164e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "bin",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.886399963448639e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.932600000349339e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1531000129471067e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.773200003503007e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4516999726765789e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5499999790336005e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4678000297863036e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get",
              "complexity": 2,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9626000014104648e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5829999938432593e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "modulus",
              "complexity": 3,
              "line_start": 12,
              "line_end": 24
            },
            {
              "name": "pow_mod",
              "complexity": 3,
              "line_start": 26,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.569400011358084e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "mul",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "pows",
              "complexity": 2,
              "line_start": 9,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.8351000259572174e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.308199984530802e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.848500005507958e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.659099962125765e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "modularExponentiation",
              "complexity": 1,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.0906999856815673e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "modularExponentiation",
              "complexity": 1,
              "line_start": 2,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.637899999375804e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8615000044519547e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "power",
              "complexity": 3,
              "line_start": 4,
              "line_end": 11
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.694900007962133e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "binary_exp",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.6798000312264776e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9095999959972687e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9126000097458018e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4627999917138368e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "repow",
              "complexity": 2,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.189800003790879e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "fast_power",
              "complexity": 3,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.261999993104837e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "pow1",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.030600030091591e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.6792000224086223e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.993600037370925e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.547900001241942e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.269199987698812e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.519799980087555e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3905999821872683e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5869999970163917e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.502799977970426e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "po",
              "complexity": 2,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.452499959166744e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 6.897999992361292e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5689999599999283e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7844000012701144e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5018999874882866e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3164999927539611e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3214999853516929e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0468000002438203e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.0516999686369672e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3996999769005924e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.1782000001403503e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1629999992001103e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7482999737694627e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "binpow",
              "complexity": 3,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.146999961245456e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8124000234820414e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "binar",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.9895999887230573e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.882600008684676e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0649000362027436e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0028000108140986e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "pow_mod",
              "complexity": 3,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.29620002048614e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2915000297653023e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.591000000189524e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.3666000086232089e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 20,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 8.499000023221015e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "mat_oz",
              "complexity": 2,
              "line_start": 4,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.4587000098108547e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0449000001244713e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.2873999821749749e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 9.878000128082931e-06
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "modpow",
              "complexity": 3,
              "line_start": 3,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.176899983576732e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.0547000025981106e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "calcpower",
              "complexity": 5,
              "line_start": 4,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 5.553400023927679e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.0979000055376673e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.8393000068026595e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5559000075882068e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.0799999927257886e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.1180000203457894e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8163999811804388e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.7483000192441978e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.3273000099143246e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.323399985471042e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.5368000024172943e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.565000002301531e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.842099997404148e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.876500027719885e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "fp",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.883199972027796e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "fp",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.7109000206546625e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8263999663759023e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "powr",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "MODI",
              "complexity": 0,
              "line_start": 23,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 4.5136000153434e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.504699998302385e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.5890000213403255e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4016000022820663e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.64409998433257e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "power",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.538700002536643e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0001405849998263875
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "modInverse",
              "complexity": 2,
              "line_start": 11,
              "line_end": 19
            },
            {
              "name": "modDivide",
              "complexity": 0,
              "line_start": 23,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 7.307700025194208e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.8714999896474183e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "fast_power",
              "complexity": 3,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.971500018451479e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9366000287845964e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.631800018411013e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.9576999875425827e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_C",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.4878000001772307e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 3.542700005709776e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "getnum",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 7.709600004091044e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "answer",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "has_intersection",
              "complexity": 4,
              "line_start": 12,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 9.983800009649713e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 6.748700025127619e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 5.786900010207319e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "ans",
              "complexity": 0,
              "line_start": 22,
              "line_end": 24
            },
            {
              "name": "opposite",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 7.08040001882182e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 5.246899991107057e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "Solver::solve",
              "complexity": 2,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "Solver::find_zero_pair",
              "complexity": 4,
              "line_start": 11,
              "line_end": 29
            },
            {
              "name": "Solver::func",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "Solver::get_value",
              "complexity": 0,
              "line_start": 35,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 6.656599998677848e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "Solver::solve",
              "complexity": 2,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "Solver::find_zero_pair",
              "complexity": 4,
              "line_start": 11,
              "line_end": 29
            },
            {
              "name": "Solver::func",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "Solver::get_value",
              "complexity": 0,
              "line_start": 35,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 6.649500028288458e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 3.371299999344046e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 2.9104999612172833e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "qry",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "qry2",
              "complexity": 1,
              "line_start": 9,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1019_B",
      "tags": "binary search,interactive",
      "tool": "complexipy",
      "execution_time": 4.3310999899404123e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.701200017123483e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "area",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "bin_search",
              "complexity": 5,
              "line_start": 7,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1036_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.1178999961412046e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.88529997508158e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.0466999760392355e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 2.6700000034907134e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.980700017156778e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            },
            {
              "name": "comp",
              "complexity": 5,
              "line_start": 37,
              "line_end": 46
            },
            {
              "name": "gg",
              "complexity": 12,
              "line_start": 49,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 0.00015394000001833774
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "func",
              "complexity": 2,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.0614999711106066e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.700100003494299e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1068_A",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.8143000236013904e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.7260000226524426e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.871200007983134e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.201699989105691e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "get_max",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001093359996957588
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getUpper",
              "complexity": 3,
              "line_start": 36,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001864009996097593
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 4,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.640400008313009e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.532200015702983e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "A",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.741600029476103e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011614900040513021
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mypw2",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "sol",
              "complexity": 4,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.976000026450492e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.852599987425492e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.509000008416479e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "tonum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "check",
              "complexity": 0,
              "line_start": 5,
              "line_end": 12
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 14,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010495799961063312
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001206570000249485
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "max_splits",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00010242300004392746
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.474200017692056e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.824899992352584e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.000200002948986e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.387099983840017e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "main",
              "complexity": 13,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.08820000202104e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.809900014559389e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "solve",
              "complexity": 16,
              "line_start": 1,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.094400007190416e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "pow",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "rate",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 14,
              "line_end": 33
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.39090000934084e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 9,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.0072999986005016e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "eval_",
              "complexity": 11,
              "line_start": 6,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.250400034943596e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.913099994359072e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "bi",
              "complexity": 4,
              "line_start": 8,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.096200008367305e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "getsum",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "b",
              "complexity": 6,
              "line_start": 4,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.409999989249627e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.842099997404148e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.584299964946695e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "read_num",
              "complexity": 1,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 89,
              "line_end": 119
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002075209999929939
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "is_valid",
              "complexity": 1,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "solve_mini",
              "complexity": 10,
              "line_start": 9,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 27,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.211400038111606e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "calc",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.600299977639224e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 16,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.738300013850676e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "f_pow",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "get_c",
              "complexity": 1,
              "line_start": 12,
              "line_end": 15
            },
            {
              "name": "get_cc",
              "complexity": 1,
              "line_start": 17,
              "line_end": 20
            },
            {
              "name": "ans",
              "complexity": 9,
              "line_start": 22,
              "line_end": 43
            },
            {
              "name": "read",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001428400000804686
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.28859997454856e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.51409999995667e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "run",
              "complexity": 10,
              "line_start": 3,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.748600000923034e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.194600038928911e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.987099979800405e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.481100010409136e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sol",
              "complexity": 7,
              "line_start": 3,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.86200003453996e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sol",
              "complexity": 7,
              "line_start": 3,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.28079999134934e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "sol",
              "complexity": 7,
              "line_start": 3,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.1709000015544007e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.279099994164426e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "precompute",
              "complexity": 1,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "getAns",
              "complexity": 8,
              "line_start": 15,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.137400027408148e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.013299980622833e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.325699991473812e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.983300025036442e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.596600001605111e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.3561000186164165e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.486500029088347e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0001214389999404375
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "solve",
              "complexity": 27,
              "line_start": 12,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0001343240001006052
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 62,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0002331800001229567
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00015100500013431883
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "mock_query",
              "complexity": 2,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "query2",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "query",
              "complexity": 0,
              "line_start": 21,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 27,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 9.676300032879226e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.374399966560304e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.0001065510000444192
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010005900003307033
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 9.188299964080215e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 2,
              "line_start": 16,
              "line_end": 31
            },
            {
              "name": "get_ans",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00010958700022456469
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.150599983811844e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "qu",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.495600003589061e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "ask",
              "complexity": 3,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.28089997007919e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "interact",
              "complexity": 1,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 5.9962999785057036e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.167999966535717e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.650499972238322e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 7.678499969188124e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.6748999718838604e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "query",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 3.9524000385426916e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 4.502499996306142e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 3,
              "line_start": 6,
              "line_end": 16
            },
            {
              "name": "get_ans_",
              "complexity": 0,
              "line_start": 18,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 6.666599983873311e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "solve",
              "complexity": 47,
              "line_start": 4,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1088_D",
      "tags": "bitmasks,constructive algorithms,implementation,interactive",
      "tool": "complexipy",
      "execution_time": 0.00016116400001919828
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.843300009975792e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "st",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 27,
              "line_end": 27
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "pr",
              "complexity": 0,
              "line_start": 30,
              "line_end": 30
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 37,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 8.772499995757244e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 56,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00019740299967452302
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "slv",
              "complexity": 8,
              "line_start": 8,
              "line_end": 35
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 38,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 8.0883000009635e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.39730001744465e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.000699987547705e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.462300032377243e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "dfs2",
              "complexity": 9,
              "line_start": 31,
              "line_end": 40
            },
            {
              "name": "dfs",
              "complexity": 3,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "hnbhai",
              "complexity": 1,
              "line_start": 54,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011812299999292009
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.069699980391306e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.219199996034149e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main_function",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.6510000225243857e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.9724999624013435e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.6068000099476194e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.154800035394146e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.59779996870202e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9656999938888475e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.698999989865115e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.098900015174877e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.7050999960920308e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.5509999684582e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.608900013001403e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 5,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.143800015299348e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.568599979393184e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.7359000291180564e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.016600021510385e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9687000076373806e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.7351999960956164e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.558799997132155e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.0799999674636638e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.0476999654638348e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.623699987860164e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 9.662200000093435e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.449400012163096e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.083599990030052e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.375300022729789e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_kth_digit",
              "complexity": 2,
              "line_start": 1,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.3391000164992874e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.747900038637454e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011202100040463847
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "read_int_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "read_string",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "read_string_list",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 8.430899970335304e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 7.153400019888068e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.6177000058378326e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 7.195599982878775e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 8.474000014757621e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.3704999875917565e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.7449000248889206e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.3924999823066173e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.5349000022979453e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "size_of_group",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "find_group",
              "complexity": 1,
              "line_start": 4,
              "line_end": 8
            },
            {
              "name": "get_number",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "get_sequence_number",
              "complexity": 0,
              "line_start": 13,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.128699967826833e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "size_of_group",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "find_group_data",
              "complexity": 1,
              "line_start": 4,
              "line_end": 8
            },
            {
              "name": "get_sequence_number",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.449499990892946e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.8044000171357766e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.591800032154424e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.9426999642746523e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "solution",
              "complexity": 1,
              "line_start": 2,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.8113000098528573e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.68310000137717e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "countDigit",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 6.624499974350329e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 6.082500021875603e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "totaller",
              "complexity": 1,
              "line_start": 3,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 5.0194999857922085e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ADigitsSequenceEasyEdition::solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.3290999656164786e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.812099996343022e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.8453000140871154e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.850400005627307e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "getnum",
              "complexity": 5,
              "line_start": 9,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.748999981529778e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.5727000067709014e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.4788000044063665e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.9054999686195515e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.735100017365767e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.8072999612049898e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.666000000317581e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.190200029872358e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.286099965611356e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.127899981336668e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.7202999970322708e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.703999982462847e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.710999999384512e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.9135000204405515e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 7.100299990270287e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.3573999897053e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.3545000001613516e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.258199992866139e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.3353000162605895e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.287100000510691e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.1119000141188735e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.5848999939626083e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.659199961068225e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.3956000202597352e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_digit",
              "complexity": 1,
              "line_start": 3,
              "line_end": 10
            },
            {
              "name": "find_digit",
              "complexity": 2,
              "line_start": 12,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.5355999645835254e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.4727999769093003e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.6771999980846886e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.858299987768987e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "pow",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.3774000257835723e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.330199999458273e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.7079000069061294e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "fmi",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "lsi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010192199988523498
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.0728999970742734e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.1701000150642358e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.840199997284799e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 1.5810000149940606e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 0.00014627599966843263
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 4.290100014259224e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.0136999612295767e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 2.3222999971039826e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.950500013161218e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.4374999813735485e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "cnt_digit_order",
              "complexity": 2,
              "line_start": 5,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1177_B",
      "tags": "binary search,divide and conquer,implementation",
      "tool": "complexipy",
      "execution_time": 3.9835000279708765e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.408499994999147e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "formula",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 4,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.26509998558322e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solutions",
              "complexity": 3,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.222899997330387e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "prime_factors",
              "complexity": 4,
              "line_start": 53,
              "line_end": 64
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 1,
              "line_start": 67,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0001202769999508746
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 16,
              "line_end": 383
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 389,
              "line_end": 392
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 394,
              "line_end": 402
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 404,
              "line_end": 411
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 416,
              "line_end": 419
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 421,
              "line_end": 423
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 427,
              "line_end": 430
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 434,
              "line_end": 437
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0004334970003583294
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.2983000437525334e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 30,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 34,
              "line_end": 39
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 54,
              "line_end": 67
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 69,
              "line_end": 71
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00023325000029217335
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.360299979249248e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.0447999961324967e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 23,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00010550900015005027
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "quadratic",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.5044999751553405e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.347300025779987e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "scan",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "solution",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.4265999854833353e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.191999985574512e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.575799999249284e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.9535999601648655e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.0057999790878966e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.7082999875128735e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.5349000022979453e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "validation",
              "complexity": 2,
              "line_start": 11,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.548600009002257e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.6158999844483333e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "estimate",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "dicho",
              "complexity": 3,
              "line_start": 9,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.3462000121508026e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.2501000077900244e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "binary",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.985200004943181e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "minPut",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "nCandies",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.240099977119826e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "binary_search",
              "complexity": 6,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.608799988796818e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.0539000161079457e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.360399957979098e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "find_gcd",
              "complexity": 1,
              "line_start": 21,
              "line_end": 24
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 27,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 36,
              "line_end": 54
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 58,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 9.131199976764037e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "maximum_candies_after_n_movies",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "solve1",
              "complexity": 1,
              "line_start": 5,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 18,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 7.040199989205576e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.8964999728486873e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "valid",
              "complexity": 2,
              "line_start": 3,
              "line_end": 11
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.945500020563486e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.7032999949151417e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "candy_eaten",
              "complexity": 3,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.0007000077603152e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.6810000235855114e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.653900012068334e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.3115000001562294e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sumTillN",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7242000214755535e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "isqrt",
              "complexity": 1,
              "line_start": 7,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.675099995030905e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "Read::int",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            },
            {
              "name": "Read::list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "Read::list_int",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "Read::calc",
              "complexity": 3,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.270099998393562e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.220799994276604e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.427499996178085e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.8092999855289236e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "binary",
              "complexity": 6,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.5898000078304904e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7883000257133972e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "binarySearch",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.370400008861907e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "AP_Term",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.576800008886494e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.720100019359961e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gaosi",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "calc",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 12,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.4271999943011906e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7953000426350627e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "cal",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.2300000384566374e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.3244000203703763e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "split_k",
              "complexity": 0,
              "line_start": 13,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.8764000035153003e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 6,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.541799995015026e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.1630999981425703e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.68300000243471e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.346400015085237e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sol",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.45859998560627e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.120900009889738e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "sportMafia",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.185199991799891e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.4345000130997505e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.6620999758742983e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "Solution2::solve",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "Solution::solve",
              "complexity": 1,
              "line_start": 18,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.472599973974866e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.891400001521106e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "wr",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "revn",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "dd",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "ddl",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "sieve",
              "complexity": 10,
              "line_start": 17,
              "line_end": 30
            },
            {
              "name": "divs",
              "complexity": 6,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "divn",
              "complexity": 5,
              "line_start": 40,
              "line_end": 49
            },
            {
              "name": "prime",
              "complexity": 6,
              "line_start": 50,
              "line_end": 56
            },
            {
              "name": "convn",
              "complexity": 1,
              "line_start": 57,
              "line_end": 62
            },
            {
              "name": "cdiv",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00018437700009599212
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "find",
              "complexity": 4,
              "line_start": 5,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.6007000037207035e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "wzor",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mafia",
              "complexity": 3,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.477600012047333e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.597899992906605e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.654999980222783e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "inara",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "insr",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "possible",
              "complexity": 0,
              "line_start": 26,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 5.8740999975270825e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 3.0046000119909877e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.0569000298564788e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.343400001336704e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 52,
              "line_end": 52
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 53,
              "line_end": 53
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "possible",
              "complexity": 0,
              "line_start": 62,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00021142900004633702
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "func",
              "complexity": 3,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.3741999888879946e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "linput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.345099978309008e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "inlist",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "instr",
              "complexity": 0,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "getReamin",
              "complexity": 0,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 44,
              "line_end": 62
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 78,
              "line_end": 86
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 88,
              "line_end": 95
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 97,
              "line_end": 100
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 104,
              "line_end": 110
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 114,
              "line_end": 114
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0002387600002293766
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 8.570099998905789e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "fn",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "search",
              "complexity": 4,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.165900008956669e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.0004999846132705e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "pf",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "pe",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "JA",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "JAA",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "IF",
              "complexity": 1,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 29,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00014986299993324792
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 27,
              "line_end": 35
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 37,
              "line_end": 44
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 46,
              "line_end": 49
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 53,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0001360969999950612
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "ncr_util",
              "complexity": 2,
              "line_start": 7,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 15,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 7.134499992389465e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.7922999834117945e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 32,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.633699973055627e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.9457000234979205e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.824299963322119e-05
    },
    {
      "true_complexity": "logn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1515_B",
      "tags": "brute force,geometry,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.743999988932046e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.769699984943145e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "convert_num",
              "complexity": 1,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "convert_alpha",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.308599990414223e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "decimal_to_26",
              "complexity": 3,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "RXCY_to_Excel",
              "complexity": 0,
              "line_start": 14,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012601799971889704
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "numtostr",
              "complexity": 3,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "strtonum",
              "complexity": 6,
              "line_start": 14,
              "line_end": 29
            },
            {
              "name": "method1",
              "complexity": 0,
              "line_start": 31,
              "line_end": 34
            },
            {
              "name": "method2",
              "complexity": 5,
              "line_start": 36,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001331510002273717
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.202800002734875e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "letter_to_decimal",
              "complexity": 4,
              "line_start": 13,
              "line_end": 32
            },
            {
              "name": "letters_to_deci",
              "complexity": 1,
              "line_start": 35,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001285120001739415
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "parse",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.502299993371707e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "solution",
              "complexity": 21,
              "line_start": 1,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.133200001087971e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "solution",
              "complexity": 18,
              "line_start": 1,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0001_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.411899989368976e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.321200003687409e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.379199981485726e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "prime",
              "complexity": 3,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "check",
              "complexity": 6,
              "line_start": 12,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 6.38999999864609e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 2.7501999738888117e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.741899985878263e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 3.25720002365415e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 4.554600036499323e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 22,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 7.508099997721729e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0017_A",
      "tags": "brute force,math,number theory",
      "tool": "complexipy",
      "execution_time": 5.927199981670128e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.2621999707771465e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.3083999622031115e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "judge",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.877299968735315e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.8895999801316066e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 8.315999821206788e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.652000011948985e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.5810000149940606e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.6608999835152645e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0025_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.872400000342168e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 1.2693000371655216e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 2.1720999939134344e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.069699980391306e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 2.320400017197244e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "process",
              "complexity": 13,
              "line_start": 1,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.556600015348522e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 2.7472000056150137e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 1.1472000096546253e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 1.0889999884966528e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "steps",
              "complexity": 11,
              "line_start": 11,
              "line_end": 24
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 27,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0046_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 7.402899973385502e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "find_segment",
              "complexity": 9,
              "line_start": 4,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.058700005771243e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.853199970966671e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.3541999730223324e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.430399965509423e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.429399976084824e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.47449999935634e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.1449000036664074e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.460299962578574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0224_B",
      "tags": "bitmasks,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 2.2823000108473934e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "process",
              "complexity": 37,
              "line_start": 1,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018273500018040068
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 7.672499987165793e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "DisjointSet::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "DisjointSet::union",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            },
            {
              "name": "DisjointSet::get_father",
              "complexity": 1,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "DisjointSet::__repr__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 22,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001346239996564691
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 7.44510002732568e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 6,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 7.012200012468384e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 6.29589999334712e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "union",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 5.323000004864298e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "unionSet",
              "complexity": 2,
              "line_start": 7,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 8.002000004125875e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "makeSet",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "findSet",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "unionSet",
              "complexity": 0,
              "line_start": 14,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0468_B",
      "tags": "2-sat,dfs and similar,dsu,graph matchings,greedy",
      "tool": "complexipy",
      "execution_time": 6.767700006093946e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.131500003903056e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.860200013150461e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.448400022738497e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.564399973285617e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.935100009286543e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.665599994448712e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.703800025003147e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "ai",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ei",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ip",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "op",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.9962999785057036e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0527_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.359999997584964e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.61379998139455e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.081800014115288e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.554599991024588e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2634000086109154e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4307000128610525e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.748199995039613e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 20,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.811000028188573e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.4905000322614796e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0608_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9737000002351124e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 3.526699993017246e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 4.9854000280902255e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 3.908400003638235e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 3.7832000089110807e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 5.73080001231574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 3.68390001312946e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 4.123700000491226e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 8,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 54,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 0.00017901800038089277
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0608_B",
      "tags": "combinatorics,strings",
      "tool": "complexipy",
      "execution_time": 4.738000006909715e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.4033999781968305e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "chain_reaction",
              "complexity": 7,
              "line_start": 3,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.912900036899373e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "chain_reaction",
              "complexity": 10,
              "line_start": 3,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.42869996833906e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "chain_reaction",
              "complexity": 7,
              "line_start": 3,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.572300000902032e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.193800006964011e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.4996000067621935e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.661899972939864e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.767099997276091e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0608_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.169700009195367e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 4.612700013240101e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 5,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 5.5794999752833974e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 2.898499997172621e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 9,
              "line_end": 58
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 60,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00019825399976980407
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 36,
        "raw_output": {
          "file_complexity": 90,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 26
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 37,
              "line_end": 43
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 45,
              "line_end": 55
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 57,
              "line_end": 74
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 76,
              "line_end": 93
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 95,
              "line_end": 123
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 125,
              "line_end": 150
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 152,
              "line_end": 178
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 180,
              "line_end": 186
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 188,
              "line_end": 193
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 195,
              "line_end": 200
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 202,
              "line_end": 205
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 207,
              "line_end": 210
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 212,
              "line_end": 214
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 216,
              "line_end": 218
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 220,
              "line_end": 223
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 225,
              "line_end": 228
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 230,
              "line_end": 236
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 242,
              "line_end": 244
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 246,
              "line_end": 248
            },
            {
              "name": "main",
              "complexity": 29,
              "line_start": 249,
              "line_end": 341
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 350
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 352,
              "line_end": 360
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 362,
              "line_end": 369
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 374,
              "line_end": 377
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 379,
              "line_end": 381
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 385,
              "line_end": 388
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 392,
              "line_end": 395
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0015780849998918711
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 4.03260000894079e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 2.275299993925728e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "bs",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "gf",
              "complexity": 12,
              "line_start": 10,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 6.391000033545424e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0701_C",
      "tags": "binary search,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 3.554700015229173e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0903_F",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.751400011737132e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.6329999855079222e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.137000001312117e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.4185999791370705e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.9476000034046592e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.3735000013402896e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.2513000001490582e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.861400025722105e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.051799992841552e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0909_A",
      "tags": "brute force,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.7472999843448633e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.12600001154351e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.118999979458749e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.254000138345873e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.31050001073163e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.1953000011999393e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 1.904600003399537e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.097999736695783e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.65600031829672e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0909_B",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.870999757462414e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "process",
              "complexity": 13,
              "line_start": 2,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0909_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.193400001095142e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.9255000299599487e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.844400023604976e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.8743999791913666e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "graph::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "graph::addedge",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "router",
              "complexity": 1,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "isleaf",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            },
            {
              "name": "christmas",
              "complexity": 10,
              "line_start": 27,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 8.367800000996795e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.378300016265712e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_Spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.6437999824556755e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.6158000057184836e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.466499993010075e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "if_spruce",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0913_B",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.0357000014191726e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "Combi::__init__",
              "complexity": 2,
              "line_start": 3,
              "line_end": 11
            },
            {
              "name": "Combi::com",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "Combi::perm",
              "complexity": 2,
              "line_start": 19,
              "line_end": 23
            },
            {
              "name": "bitcnt",
              "complexity": 1,
              "line_start": 26,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0001515160001872573
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 6.745700011379085e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 117,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 117,
          "functions": [
            {
              "name": "pi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pl",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ti",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ts",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            },
            {
              "name": "fast_mod_exp",
              "complexity": 3,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "inverseMod",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "ncr",
              "complexity": 3,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "D",
              "complexity": 73,
              "line_start": 46,
              "line_end": 82
            },
            {
              "name": "getCount",
              "complexity": 3,
              "line_start": 84,
              "line_end": 91
            },
            {
              "name": "C",
              "complexity": 34,
              "line_start": 93,
              "line_end": 123
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00040434199991068454
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "cntone",
              "complexity": 3,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00013696899986825883
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "cntone",
              "complexity": 3,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00012449499990907498
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "bit_count",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 13,
              "line_end": 50
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 56,
              "line_end": 60
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 61,
              "line_end": 69
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 70,
              "line_end": 77
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 78,
              "line_end": 81
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 89
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00024222599995482597
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "bit_count",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 13,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00010715199960031896
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "make_nCr_mod",
              "complexity": 2,
              "line_start": 6,
              "line_end": 19
            },
            {
              "name": "comb",
              "complexity": 4,
              "line_start": 23,
              "line_end": 34
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 35,
              "line_end": 45
            },
            {
              "name": "bit",
              "complexity": 18,
              "line_start": 47,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0001739379999889934
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "make_nCr_mod",
              "complexity": 8,
              "line_start": 7,
              "line_end": 30
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 33,
              "line_end": 43
            },
            {
              "name": "bit",
              "complexity": 18,
              "line_start": 46,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0914_C",
      "tags": "brute force,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00014628599956267863
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.726999966602307e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016473100004077423
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.045499983680202e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.515600019454723e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.224000010959571e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.9366000035224715e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.653899966593599e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.95449999612174e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0924_C",
      "tags": "data structures,dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.5818999802140752e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.467700005581719e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.275300039400463e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.873500013971352e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.676999974937644e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.842499978010892e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 23,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "binarytodecimal",
              "complexity": 0,
              "line_start": 38,
              "line_end": 39
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 41,
              "line_end": 57
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 59,
              "line_end": 71
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 81,
              "line_end": 83
            },
            {
              "name": "getProduct",
              "complexity": 1,
              "line_start": 87,
              "line_end": 95
            },
            {
              "name": "dupconscount",
              "complexity": 5,
              "line_start": 98,
              "line_end": 113
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 116,
              "line_end": 117
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 121,
              "line_end": 122
            },
            {
              "name": "di",
              "complexity": 0,
              "line_start": 124,
              "line_end": 124
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 126,
              "line_end": 126
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 127,
              "line_end": 127
            },
            {
              "name": "indic",
              "complexity": 1,
              "line_start": 128,
              "line_end": 132
            }
          ]
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.000436943999829964
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.281300021422794e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.763299997037393e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0958_C1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.5298999642254785e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 2.9906000236223917e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 5.767799984823796e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 3.506700022626319e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "val",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 3.866299994115252e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 1.6181000319193117e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 1.4797999938309658e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 3.53569998878811e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 8.445900039077969e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_D1",
      "tags": "expression parsing,math",
      "tool": "complexipy",
      "execution_time": 5.5685000006633345e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 0.00011978600014117546
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 66,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 0.00018028999966190895
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 5.982300035611843e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 2.1380999896791764e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 1.96969999706198e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 1.7903999832924455e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 3.317199980301666e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 2.0868999854428694e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0959_C",
      "tags": "constructive algorithms,trees",
      "tool": "complexipy",
      "execution_time": 1.4897999790264294e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.24110001201916e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.3353000162605895e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.863199981424259e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 2.982600017276127e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.436499991948949e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011089899999205954
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.4344999676250154e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.3049999678478343e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0961_B",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.1467000048432965e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.4856999971234472e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_answer",
              "complexity": 3,
              "line_start": 2,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2150999939185567e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5298000107577536e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.752299976942595e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6110000160551863e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.042900041487883e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3976999980513938e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.881499995055492e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "fastPrintNextLines",
              "complexity": 0,
              "line_start": 88,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "0962_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002828130000125384
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.685999970708508e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2342000193020795e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 2.2151999928610167e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 1.862499993876554e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.144899983453797e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 23,
              "line_end": 40
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 42,
              "line_end": 47
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 61
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 77,
              "line_end": 90
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 91,
              "line_end": 97
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 102,
              "line_end": 111
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 112,
              "line_end": 113
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 132,
              "line_end": 142
            }
          ]
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.0003749469997273991
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 23,
              "line_end": 40
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 42,
              "line_end": 47
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 61
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 77,
              "line_end": 90
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 91,
              "line_end": 97
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 102,
              "line_end": 111
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 112,
              "line_end": 113
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 132,
              "line_end": 142
            }
          ]
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00037328400003389106
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 3.2331000056728953e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 23,
              "line_end": 40
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 42,
              "line_end": 47
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 61
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 77,
              "line_end": 90
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 91,
              "line_end": 97
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 102,
              "line_end": 111
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 112,
              "line_end": 113
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 132,
              "line_end": 142
            }
          ]
        }
      },
      "problem": "0964_B",
      "tags": "math",
      "tool": "complexipy",
      "execution_time": 0.00033892900000864756
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.368100028135814e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.1237000207038363e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.508399999598623e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1629999992001103e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.718899981526192e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.6087000100669684e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.600299977639224e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.6249999791616574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0967_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.28819996866514e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 149,
        "functions_count": 60,
        "raw_output": {
          "file_complexity": 149,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            },
            {
              "name": "TrieNode::__init__",
              "complexity": 0,
              "line_start": 557,
              "line_end": 559
            },
            {
              "name": "Trie::__init__",
              "complexity": 0,
              "line_start": 561,
              "line_end": 562
            },
            {
              "name": "Trie::getNode",
              "complexity": 0,
              "line_start": 563,
              "line_end": 564
            },
            {
              "name": "Trie::_charToIndex",
              "complexity": 0,
              "line_start": 565,
              "line_end": 566
            },
            {
              "name": "Trie::insert",
              "complexity": 4,
              "line_start": 567,
              "line_end": 575
            },
            {
              "name": "Trie::search",
              "complexity": 5,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 587,
              "line_end": 591
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 0,
              "line_start": 593,
              "line_end": 594
            },
            {
              "name": "BinaryTrie::insert",
              "complexity": 14,
              "line_start": 595,
              "line_end": 609
            },
            {
              "name": "BinaryTrie::query",
              "complexity": 12,
              "line_start": 610,
              "line_end": 625
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 0.004635860999769648
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 8.0110999988392e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 7.508099997721729e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "Ro",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 6.520299984913436e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 16,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 8.132399989335681e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 3.7151000015001046e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 17,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 9.023999973578611e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 9,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 6.359000008160365e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0975_D",
      "tags": "geometry,math",
      "tool": "complexipy",
      "execution_time": 3.943499996239552e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1430000288091833e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.978699992832844e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.0990999726345763e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.1331000223435694e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3343999600911047e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.440699998056516e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.0570000085863285e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7923999621416442e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0976_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.426000022154767e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "substring",
              "complexity": 7,
              "line_start": 7,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.12490001306287e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 1.9457000234979205e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 2.6849999812839087e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 1.58200000441866e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 0.0002150450000044657
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.387399965504301e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 2.5268000172218308e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.353400006744778e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0978_B",
      "tags": "greedy,strings",
      "tool": "complexipy",
      "execution_time": 7.493999873986468e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "optimal_score",
              "complexity": 9,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.06530001682404e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.871699992596405e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00011745200026780367
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "v",
              "complexity": 1,
              "line_start": 13,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.533200005127583e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.427000036841491e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.918199985899264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.2939999932277715e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "ct",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.332000020847772e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "solve",
              "complexity": 26,
              "line_start": 3,
              "line_end": 29
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 31,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "0979_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 9.121199991568574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 8.0101000094146e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 62,
        "functions_count": 18,
        "raw_output": {
          "file_complexity": 62,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 27,
              "line_end": 38
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 39,
              "line_end": 49
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 59,
              "line_end": 64
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 67,
              "line_end": 71
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 76,
              "line_end": 77
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 78,
              "line_end": 79
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 83,
              "line_end": 102
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 103,
              "line_end": 109
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 111,
              "line_end": 114
            },
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 125,
              "line_end": 154
            }
          ]
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.0004434259999470669
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 7.357799995588721e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.9744000079954276e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.712899999503861e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "solution",
              "complexity": 17,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 7.759599975543097e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00011560799975995906
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00011515699998199125
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "0980_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.0001263079998352623
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.627900014180341e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.8402999760146486e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "palin",
              "complexity": 2,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.9244999950606143e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "palindrome",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.041600004711654e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.495600003589061e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "is_pal",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.0023999847326195e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.525500025920337e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.726300024529337e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.8845999875338748e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "bfs",
              "complexity": 17,
              "line_start": 5,
              "line_end": 28
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 31,
              "line_end": 48
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 51,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.0002704200001062418
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 9.671299994806759e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 5,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 42,
              "line_end": 50
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.0003234199998587428
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 5,
              "line_end": 24
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 30,
              "line_end": 34
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 36,
              "line_end": 44
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 46,
              "line_end": 53
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 55,
              "line_end": 58
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.00022352100040734513
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 5,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 31,
              "line_end": 35
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 47,
              "line_end": 54
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.00022810000018580467
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 48,
              "line_end": 49
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 61,
              "line_end": 70
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 72,
              "line_end": 74
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 76,
              "line_end": 81
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 83,
              "line_end": 94
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 96,
              "line_end": 109
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 111,
              "line_end": 113
            },
            {
              "name": "deep",
              "complexity": 4,
              "line_start": 131,
              "line_end": 137
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.0005922360001022753
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 7.90089998190524e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 48,
              "line_end": 49
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 61,
              "line_end": 70
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 72,
              "line_end": 74
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 76,
              "line_end": 81
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 83,
              "line_end": 94
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 96,
              "line_end": 109
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 111,
              "line_end": 113
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 0.00043707400027415133
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 4,
              "line_end": 23
            },
            {
              "name": "tnnDecompositionFrom",
              "complexity": 0,
              "line_start": 26,
              "line_end": 28
            },
            {
              "name": "decompositionFrom",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0981_C",
      "tags": "implementation,trees",
      "tool": "complexipy",
      "execution_time": 9.063100014827796e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6899999738816405e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.116999990510521e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3786000181426061e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3846000001649372e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 51,
              "line_end": 64
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 65,
              "line_end": 72
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00019414600001255167
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3555000097985612e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.547799977037357e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.596000043326057e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0990_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.08699985302519e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.896200016446528e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.129500025053858e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "fun",
              "complexity": 7,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.183699997563963e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.885099972147145e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "num",
              "complexity": 5,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "f",
              "complexity": 9,
              "line_start": 15,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.178600026236381e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "num",
              "complexity": 5,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "f",
              "complexity": 6,
              "line_start": 15,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.812799983890727e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.107799986741156e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.416400022615562e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.1370000215247273e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.681200001257821e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.3325000054464908e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.2794000213034451e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.085899970756145e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.3093999768898357e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.1931999779335456e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.107000096264528e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.3223999960464425e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0992_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.99599990589195e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.394500006630551e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.7782999950431986e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.5488000119366916e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.56690000242088e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.8704000214929692e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.9334999908314785e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 1.7193000076076714e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.5457999981881585e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0996_B",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.2662999981548637e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 45,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.727399992698338e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.739800028299214e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 7.622299972354085e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.69179999527114e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 69,
              "line_end": 79
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 87,
              "line_end": 93
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 96
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 98,
              "line_end": 115
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 117,
              "line_end": 118
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 131
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 133,
              "line_end": 134
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 136,
              "line_end": 137
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 139,
              "line_end": 145
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 147,
              "line_end": 148
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 150,
              "line_end": 167
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 169,
              "line_end": 170
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 174,
              "line_end": 178
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 180,
              "line_end": 194
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 196,
              "line_end": 210
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 212,
              "line_end": 227
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 235,
              "line_end": 240
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 246,
              "line_end": 261
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0011309830001664523
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.510900008535828e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00023634600029254216
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00023040399992169114
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0999_D",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00023074499995345832
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.154799989919411e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.6241000139416428e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.2111999896878842e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.0328000118752243e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.067600002599647e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.6039999991335208e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.7612999727134593e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.364299982422381e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 27,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 87
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 88,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1000_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00029207000034148223
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.5044999751553405e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.205900015425868e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.1327000164747005e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 9.354600024380488e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.029499970987672e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "testcase",
              "complexity": 11,
              "line_start": 7,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.365900000877446e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.434000008288422e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.9313000090478454e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1000_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.094700034329435e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3214000066218432e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.5668999569461448e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.07160000577278e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.881399996113032e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.06290001187881e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 6,
              "line_start": 16,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.338800014622393e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.669100013008574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 30,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 61
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00019411599987506634
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1004_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8283000119699864e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 3,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.267700038937619e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.968999620468821e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.995799993892433e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8275000002176967e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8474999706086237e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 7,
              "line_start": 15,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.903899995653774e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0278000192774925e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.868599974841345e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1004_B",
      "tags": "constructive algorithms,greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.0801000371429836e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 4.18790000367153e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 7.221599980766769e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 2.8744000246661017e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 2.2121999791124836e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 3.878300003634649e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 3.69099998351885e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "ceill",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "run",
              "complexity": 1,
              "line_start": 75,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 0.0001004990003821149
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "ceill",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 19,
              "line_end": 30
            },
            {
              "name": "run",
              "complexity": 1,
              "line_start": 80,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 9.931700014931266e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 18,
              "line_end": 20
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 26,
              "line_end": 53
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 62,
              "line_end": 66
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 68,
              "line_end": 76
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 78,
              "line_end": 85
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 87,
              "line_end": 90
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 94,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "1005_D",
      "tags": "dp,greedy,number theory",
      "tool": "complexipy",
      "execution_time": 0.00022904199977347162
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.246100004616892e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.2281999918050133e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9517000055202516e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.865500007625087e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8253999971639132e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.368500008742558e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.575899998191744e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9767000139836455e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 3,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1009_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.20300000566931e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.8400000398250995e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.8124000234820414e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.807300006679725e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.593599987856578e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 61,
              "line_end": 70
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 71,
              "line_end": 82
            },
            {
              "name": "factors",
              "complexity": 5,
              "line_start": 83,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00025646399990364444
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.7862000024470035e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.944500031138887e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solver::__call__",
              "complexity": 3,
              "line_start": 19,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.501100001012674e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "outIn",
              "complexity": 0,
              "line_start": 16,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 19,
              "line_end": 77
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 86
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 88,
              "line_end": 96
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 98,
              "line_end": 105
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 110,
              "line_end": 113
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 115,
              "line_end": 117
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 121,
              "line_end": 124
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 128,
              "line_end": 131
            }
          ]
        }
      },
      "problem": "1009_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0003104449997408665
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solver::__call__",
              "complexity": 6,
              "line_start": 19,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 8.123299994622357e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 4.268000020601903e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 5.522399987967219e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 6.0072999986005016e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "lli",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "ins",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 8.902800027499325e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 3.0898999739292776e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 2.216199982285616e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "readmap",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "readlist",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 5.154700011189561e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1009_C",
      "tags": "greedy,math",
      "tool": "complexipy",
      "execution_time": 3.424500027904287e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0002339610000490211
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.871099963565939e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "some_random_function",
              "complexity": 0,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "some_random_function5",
              "complexity": 0,
              "line_start": 14,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 28,
              "line_end": 43
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 49,
              "line_end": 53
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 54,
              "line_end": 62
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 76,
              "line_end": 82
            },
            {
              "name": "some_random_function1",
              "complexity": 0,
              "line_start": 86,
              "line_end": 95
            },
            {
              "name": "some_random_function2",
              "complexity": 0,
              "line_start": 97,
              "line_end": 106
            },
            {
              "name": "some_random_function3",
              "complexity": 0,
              "line_start": 108,
              "line_end": 117
            },
            {
              "name": "some_random_function4",
              "complexity": 0,
              "line_start": 119,
              "line_end": 128
            },
            {
              "name": "some_random_function6",
              "complexity": 0,
              "line_start": 130,
              "line_end": 139
            },
            {
              "name": "some_random_function7",
              "complexity": 0,
              "line_start": 141,
              "line_end": 150
            },
            {
              "name": "some_random_function8",
              "complexity": 0,
              "line_start": 152,
              "line_end": 161
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00035797500004264293
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solver::__call__",
              "complexity": 2,
              "line_start": 19,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.297700039998745e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 108,
        "functions_count": 35,
        "raw_output": {
          "file_complexity": 108,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 71,
              "line_end": 81
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 87
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 89,
              "line_end": 95
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 97,
              "line_end": 98
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 100,
              "line_end": 117
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 119,
              "line_end": 120
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 123,
              "line_end": 133
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 135,
              "line_end": 136
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 138,
              "line_end": 139
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 141,
              "line_end": 147
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 152,
              "line_end": 169
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 171,
              "line_end": 172
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 176,
              "line_end": 180
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 182,
              "line_end": 196
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 198,
              "line_end": 212
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 214,
              "line_end": 229
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 233,
              "line_end": 235
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 237,
              "line_end": 242
            },
            {
              "name": "LazySegTree::__init__",
              "complexity": 54,
              "line_start": 248,
              "line_end": 354
            },
            {
              "name": "makeNode",
              "complexity": 0,
              "line_start": 360,
              "line_end": 362
            },
            {
              "name": "getTotal",
              "complexity": 0,
              "line_start": 365,
              "line_end": 366
            },
            {
              "name": "getCount",
              "complexity": 0,
              "line_start": 369,
              "line_end": 370
            },
            {
              "name": "nodeOp",
              "complexity": 0,
              "line_start": 376,
              "line_end": 381
            },
            {
              "name": "mapping",
              "complexity": 1,
              "line_start": 387,
              "line_end": 392
            },
            {
              "name": "composition",
              "complexity": 1,
              "line_start": 395,
              "line_end": 397
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 401,
              "line_end": 411
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 413,
              "line_end": 425
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 427,
              "line_end": 439
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0020260500000404136
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.0376999802683713e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.3723999877111055e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.185099992857431e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1009_E",
      "tags": "combinatorics,math,probabilities",
      "tool": "complexipy",
      "execution_time": 1.8294000255991705e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.845300034299726e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 17,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.182700008139363e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 16,
              "line_end": 29
            },
            {
              "name": "binary_search",
              "complexity": 2,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 7.289799987120205e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 16,
              "line_end": 29
            },
            {
              "name": "binary_search",
              "complexity": 2,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 6.550399984917021e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 49,
              "line_end": 55
            },
            {
              "name": "get_int",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "get_int_grid",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "get_str",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "yes_no",
              "complexity": 1,
              "line_start": 78,
              "line_end": 82
            },
            {
              "name": "prefix_sums",
              "complexity": 1,
              "line_start": 85,
              "line_end": 89
            },
            {
              "name": "binary_search",
              "complexity": 6,
              "line_start": 92,
              "line_end": 106
            },
            {
              "name": "solve_a",
              "complexity": 5,
              "line_start": 109,
              "line_end": 125
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.0002995849999933853
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 2.695099965421832e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "test",
              "complexity": 5,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 5.683700010195025e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 0.00010054999984276947
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1010_A",
      "tags": "binary search,math",
      "tool": "complexipy",
      "execution_time": 3.532700020514312e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "tonny",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.106799997316557e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "inlt",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "insr",
              "complexity": 0,
              "line_start": 7,
              "line_end": 9
            },
            {
              "name": "cint",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "find_min_weight",
              "complexity": 11,
              "line_start": 14,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.808799980717595e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.9786000141029945e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.4655999823153252e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.253200000268407e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 30,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 61
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002265970001644746
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.03260000894079e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.6698999792861287e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1011_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.645800006779609e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.693000007842784e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.4253999931243015e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.473099958588136e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.485499994189013e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.500500017456943e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 24,
              "line_start": 16,
              "line_end": 391
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 397,
              "line_end": 400
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 402,
              "line_end": 410
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 412,
              "line_end": 419
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 424,
              "line_end": 427
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 429,
              "line_end": 431
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 435,
              "line_end": 438
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 442,
              "line_end": 445
            }
          ]
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00044771399961973657
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.5125000269763405e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.148499980758061e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1013_B",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.958400020565023e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8263999663759023e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.820199981419137e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.34229998770752e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.130900040559936e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5389000054710777e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4527000075759133e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.2863999927503755e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.58200000441866e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1017_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6742000298108906e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 15,
              "line_end": 353
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 359,
              "line_end": 362
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 364,
              "line_end": 372
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 374,
              "line_end": 381
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 386,
              "line_end": 389
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 391,
              "line_end": 393
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 397,
              "line_end": 400
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 404,
              "line_end": 407
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 0.00042026199980682577
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 2.89240001620783e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 1.670199981163023e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 1.681200001257821e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "getx",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "getans",
              "complexity": 1,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 3.4574999972392106e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "solver::__call__",
              "complexity": 4,
              "line_start": 20,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 7.64540000091074e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 2.6919999982055742e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "inp1",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "inp2",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "inp3",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 4.465399979380891e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1017_C",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 2.1830999685334973e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 7.062299982862896e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.332099979365012e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 9.348599996883422e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.7359000291180564e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.243000012138509e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.555800028858357e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 0.000425643000198761
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 6.314900019788183e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1023_A",
      "tags": "brute force,implementation,strings",
      "tool": "complexipy",
      "execution_time": 8.963900017988635e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.4893999731575605e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.350200015323935e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 1.4788000044063665e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 30,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 61
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00022249899984672084
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 35,
              "line_end": 40
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 55,
              "line_end": 68
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 84,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0002493910001248878
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 35,
              "line_end": 40
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 55,
              "line_end": 68
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 84,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0002339610000490211
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0003741649998119101
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 31
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 32,
              "line_end": 43
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 44,
              "line_end": 54
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 55,
              "line_end": 63
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 64,
              "line_end": 69
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 77,
              "line_end": 80
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 86,
              "line_end": 86
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 87,
              "line_end": 87
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 88,
              "line_end": 114
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 123,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00039048700000421377
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1023_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.018599975097459e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 34,
              "line_start": 15,
              "line_end": 375
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 381,
              "line_end": 384
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 386,
              "line_end": 394
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 396,
              "line_end": 403
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 408,
              "line_end": 411
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 413,
              "line_end": 415
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 419,
              "line_end": 422
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 426,
              "line_end": 429
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.0005902329999116773
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.973300019628368e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00028845400038335356
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.061599995315191e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.168900022705202e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.313099998398684e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.0865000250487356e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 34,
              "line_end": 45
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 50,
              "line_end": 60
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 65,
              "line_end": 73
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00025719500035847886
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1025_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.510100022045663e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 7.225699982882361e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00011245299992879154
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 10,
              "line_end": 16
            },
            {
              "name": "ind",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 19,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0001552329999867652
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 10,
              "line_end": 16
            },
            {
              "name": "ind",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 19,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00013186900014261482
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 65,
              "line_end": 82
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 84,
              "line_end": 89
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 91,
              "line_end": 103
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 106,
              "line_end": 116
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 119,
              "line_end": 132
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 133,
              "line_end": 139
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 144,
              "line_end": 153
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 154,
              "line_end": 155
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 156,
              "line_end": 159
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 160,
              "line_end": 161
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 162,
              "line_end": 163
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 176,
              "line_end": 213
            }
          ]
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0008918809999158839
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 7.683500007260591e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 8.407899986195844e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 8.236599978772574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1027_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 4.1678999878058676e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 15,
              "line_end": 357
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 363,
              "line_end": 366
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 368,
              "line_end": 376
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 378,
              "line_end": 385
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 390,
              "line_end": 393
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 395,
              "line_end": 397
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 401,
              "line_end": 404
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 408,
              "line_end": 411
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0005283660002532997
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 8,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001650909998716088
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 9.249500044461456e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 8.47599999360682e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "intersection",
              "complexity": 2,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 15,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 7.740599994576769e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 3.2591000035608886e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "intersec",
              "complexity": 1,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 4.414300019561779e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 34,
              "line_end": 45
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 50,
              "line_end": 60
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 65,
              "line_end": 73
            },
            {
              "name": "digits",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "mapin",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "solve",
              "complexity": 2,
              "line_start": 100,
              "line_end": 117
            },
            {
              "name": "inte",
              "complexity": 0,
              "line_start": 120,
              "line_end": 124
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003021100001205923
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 18,
              "line_end": 20
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 26,
              "line_end": 54
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 63,
              "line_end": 67
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 69,
              "line_end": 77
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 79,
              "line_end": 86
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 101
            }
          ]
        }
      },
      "problem": "1029_C",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002482380000401463
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "bfs",
              "complexity": 16,
              "line_start": 6,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 8.292599977721693e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 6.546399981743889e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001005799999802548
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 8.267600014733034e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "get_new_edges",
              "complexity": 25,
              "line_start": 4,
              "line_end": 43
            },
            {
              "name": "read_int_line",
              "complexity": 0,
              "line_start": 45,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1029_E",
      "tags": "dp,graphs,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010176200021305704
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 140,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 140,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            }
          ]
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0015851289999773144
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 77,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 77,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00014653600010205992
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00011593899989748024
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00024853800005075755
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 9.681200026534498e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 61,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0001727849999042519
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00022808999983681133
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0002111690000674571
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "get_fingering",
              "complexity": 18,
              "line_start": 2,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 8.208500003092922e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "move",
              "complexity": 8,
              "line_start": 15,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 6.071500001780805e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "get",
              "complexity": 19,
              "line_start": 5,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 7.664399981877068e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 6.626499998674262e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "wins",
              "complexity": 9,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.8230000377079705e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "nextline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "types",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "strs",
              "complexity": 1,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 17,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 7.928900004117168e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 4.2840999867621576e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 7.666400006201002e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 5.105599984744913e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 4.6137000026647e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.4514999697421445e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.282200032117544e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.537699967637309e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 2.5988999823312042e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 5.097599978398648e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1037_C",
      "tags": "dp,greedy,strings",
      "tool": "complexipy",
      "execution_time": 3.8503000268974574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.1078000322158914e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.6347000079549616e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "removeUsed",
              "complexity": 4,
              "line_start": 3,
              "line_end": 8
            },
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 10,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.741600029476103e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.487099992431467e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 5.6335999943257775e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.70680001853907e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.4354000237945e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.02530001035484e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 6.936099998711143e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.8615000044519547e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.1260000266920542e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.5249000171024818e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.3545000001613516e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.0217999917804264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.1530999927344965e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.618000007714727e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.5938999897334725e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 1.3826000213157386e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.303899999693385e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.8222000057430705e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.536299997605965e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 4,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 28,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.813999996462371e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.268900031296653e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.775000024892506e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.272200001447345e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001488200000494544
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.064800011998159e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7924000076163793e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7242000012629433e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7813999875215814e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6912000319280196e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9206000160920667e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.048900023510214e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.8615000044519547e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7361999653076055e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1054_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5810000149940606e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            }
          ]
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.0009953470002983522
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.8945000394742237e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.627800015237881e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.906100022912142e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "huy",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013641699979416444
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "add",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012963500012119766
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.6036999719945015e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.8129999868251616e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1054_D",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.1965999975655e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "get_array",
              "complexity": 1,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "read_num",
              "complexity": 1,
              "line_start": 28,
              "line_end": 33
            },
            {
              "name": "read_num_list",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 70,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.00022802000012234203
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.00015409100024044164
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.934500000468688e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 4.700799991042004e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "get_lc",
              "complexity": 7,
              "line_start": 10,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.286799998633796e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.339300019433722e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 5.116599959364976e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.045699986614636e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "Node::__str__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.00013015500007895753
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.439799987376318e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.105599984744913e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 2,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.523699979268713e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.8010000227804994e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fun",
              "complexity": 5,
              "line_start": 4,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 0.00010183199992752634
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.937200012340327e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.1178999961412046e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6821999906824203e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3545000001613516e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5349000022979453e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "init_input",
              "complexity": 0,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.913899980849237e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "add",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "sub",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "qpow",
              "complexity": 3,
              "line_start": 22,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.259499963969574e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "count",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.560599973046919e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.685699989044224e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.257900011201855e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.434699995836127e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 6,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.778399999049725e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.2319000133138616e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1062_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.539400010296958e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.13450001765159e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "score",
              "complexity": 4,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.783100030181231e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0427999970706878e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.848500005507958e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.200299993797671e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3044999832345638e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.937999948306242e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8324999928154284e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.616000008652918e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 67,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013059599996267934
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.679900009956327e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.6789999992615776e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.246800012377207e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.7602000045590103e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.133999987563584e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.2292000267043477e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 9.869000223261537e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 1.1702000392688205e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1067_C",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 1.587999986440991e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.170800002611941e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.4095000046363566e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.337000013445504e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.434399988895166e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.07869997616217e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 2,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.170800002611941e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.738000006909715e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.599799993025954e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.526699993017246e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.212800033405074e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.420000019919826e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014896099992256495
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014313900010165526
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 1,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 24,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.953800008588587e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.833899988123449e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.8910999996442115e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.813599970380892e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.986000011645956e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.671499997741194e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "get_max",
              "complexity": 3,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00014444299995375331
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 4,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.754500004215515e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.199499987109448e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "A",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.308899992291117e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.714399973541731e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mypw2",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "sol",
              "complexity": 4,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.835600010570488e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.522900018055225e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.272699986060616e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.258499994757585e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010766300010800478
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 2,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011076900000261958
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00017591200003153062
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010325499988539377
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010413600011816015
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010860500015041907
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010736200010796892
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001425089999429474
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.439300002763048e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 6,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 48,
              "line_end": 55
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 61,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00026999900001101196
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.631499991271994e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.871299986712984e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.1909999961499125e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.49200000629935e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.8148999869445106e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.702700036636088e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "sawC",
              "complexity": 4,
              "line_start": 12,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1082_E",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010905599992838688
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "get_plots",
              "complexity": 2,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 14,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011624999979176209
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 5.527399980564951e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 4.0906999856815673e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.164999998261919e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 1.7343000308756018e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 1.4848000319034327e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 5.1777999942714814e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 3.3554000310687115e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1086_B",
      "tags": "greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 2.281299975948059e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 9.906700006467872e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001293440000154078
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "read",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 15,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013624699977299315
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "read",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 15,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 9.584000008544535e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 8.494099984091008e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 6.135499961601454e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.653699988921289e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.4375000268482836e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.22609998875123e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.491600000415929e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2932999854674563e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3935000172059517e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.966700028788182e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 10,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.364200003692531e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1092_D1",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7631999728328083e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.961899993664701e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.415499986658688e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.102600016471115e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.51260000570619e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.480400002648821e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.7800999962200876e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 4.471500005820417e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 8.24359999569424e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1093_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 3.787199966609478e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "clc",
              "complexity": 1,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.000108875000023545
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "f",
              "complexity": 2,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00019747199985431507
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "ok",
              "complexity": 1,
              "line_start": 7,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00010735200021372293
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 18
            },
            {
              "name": "out_of_solution_bounds",
              "complexity": 1,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "find_optimal_b",
              "complexity": 3,
              "line_start": 23,
              "line_end": 33
            },
            {
              "name": "get_min_H_given_b",
              "complexity": 1,
              "line_start": 35,
              "line_end": 39
            },
            {
              "name": "fast_find_optimal_height_distribution",
              "complexity": 7,
              "line_start": 41,
              "line_end": 65
            },
            {
              "name": "uniform_height_distribution",
              "complexity": 1,
              "line_start": 67,
              "line_end": 76
            },
            {
              "name": "locally_increase_H",
              "complexity": 10,
              "line_start": 78,
              "line_end": 94
            },
            {
              "name": "build_tree",
              "complexity": 3,
              "line_start": 96,
              "line_end": 108
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.000288262999674771
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "good",
              "complexity": 1,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.0001650210001571395
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.3835999652656028e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.5026999992405763e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "nn",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "lm",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.417299987835577e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.2802999865234597e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.8044000171357766e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.9507000160956522e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "read_nums",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.7131000024382956e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.595999992787256e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.9196000266674673e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6370999674109044e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "go",
              "complexity": 3,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9967999833170325e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.259800011321204e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.8814999748428818e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4837999970040983e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.366499984418624e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.516800011813757e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4186000043991953e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2873999821749749e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5889999758655904e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 1,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.399900005111704e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.77620001725154e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5818999802140752e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.261200006614672e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.673199994911556e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6390000130049884e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1099999685247894e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3745999694947386e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.8361999941116665e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.20359998922504e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "second_largest",
              "complexity": 7,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.23470000391535e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.580800012059626e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "getint",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "getints",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.3510999805439496e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 0.0002457529999446706
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.597899992906605e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 3.0077000246819807e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "log",
              "complexity": 1,
              "line_start": 4,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.7011000383936334e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.0950000362063292e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.7071999991458142e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.4488000033452408e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.3886000033380697e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.7272999684792012e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.032499984736205e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 25,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 7.136400017770939e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.55959998362232e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.400299985718448e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 3.824199984592269e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 4.533599985734327e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "count",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.6986999879882205e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "count",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.375199998525204e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1179_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.940199980614125e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.175999937520828e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.164000180637231e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6539999907981837e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.234000349853886e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.672000381513499e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2413000149535947e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.276000244222814e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.267000223189825e-06
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 16,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::_fill",
              "complexity": 0,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 55
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 1,
              "line_start": 64,
              "line_end": 76
            },
            {
              "name": "get_array",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 85,
              "line_end": 85
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 88,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "1180_A",
      "tags": "dp,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001784169999154983
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.547600019577658e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.42030000158411e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.541800040489761e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.010599968751194e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.655899990917533e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.2331000056728953e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.7771999612014042e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.711099978114362e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.24119999074901e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 6.336000024020905e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.657600013364572e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 6.238800006030942e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "lmi",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 8.478999961880618e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 28,
              "line_end": 30
            },
            {
              "name": "ain",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "sin",
              "complexity": 0,
              "line_start": 33,
              "line_end": 34
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "isprime",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001428989999112673
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 6.431200017686933e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.507399964699289e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 5.4271999943011906e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1180_C",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 7.570299976578099e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 6.21070003035129e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 6.003299995427369e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 7.2356000146101e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001067709999915678
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.520500033322605e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 3.6497999644780066e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.246799992164597e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.230799979472067e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "func",
              "complexity": 1,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1190_A",
      "tags": "implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001634680002098321
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "main",
              "complexity": 13,
              "line_start": 8,
              "line_end": 40
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 54,
              "line_end": 58
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 60,
              "line_end": 68
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 70,
              "line_end": 77
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 79,
              "line_end": 82
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.00022435300024881144
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.456300004880177e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.471300028148107e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "rl",
              "complexity": 1,
              "line_start": 6,
              "line_end": 10
            },
            {
              "name": "srl",
              "complexity": 1,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 18,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.912100025147083e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.3260999973426806e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.031499995311606e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.45840000793396e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "is_winning_state",
              "complexity": 12,
              "line_start": 4,
              "line_end": 21
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 23,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.410999978674226e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "check",
              "complexity": 11,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.488200006060652e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "JUDGE",
              "complexity": 14,
              "line_start": 8,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010486800010767183
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "JUDGE",
              "complexity": 14,
              "line_start": 6,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 9.818499984248774e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "sum_range",
              "complexity": 2,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011141000004499801
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "win1",
              "complexity": 6,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "win2",
              "complexity": 5,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1190_C",
      "tags": "brute force,games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012041699983456056
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010697200013964903
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.2189999930997146e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.737199974944815e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.750599979772232e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013117800017425907
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 2,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.486100003006868e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 0,
          "functions": [
            {
              "name": "func",
              "complexity": 0,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.184600008258712e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.0414000017772196e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.830499993768171e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.3833999623311684e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.7471000066725537e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.385300033187377e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.088700006832369e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.8773999929398997e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.9275000088091474e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.155000013066456e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.0936999994301004e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.816300002450589e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.90829997943365e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.5514999985462055e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.788000023836503e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.6768000174779445e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 8.140399995681946e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.773999989993172e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 16,
              "line_start": 1,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.824799993410124e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.957600008812733e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.630099995963974e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.4166999790177215e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.412699975844589e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.0509000023594126e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "dinput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "tinput",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "rt",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 2,
              "line_start": 18,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 4.601699993145303e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 2.224199988631881e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1195_B",
      "tags": "binary search,brute force,math",
      "tool": "complexipy",
      "execution_time": 1.5379000160464784e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.711800031349412e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.7018000259413384e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.137599984867848e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.4935000005352776e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "matches",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.706499991400051e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.672599965895643e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 79,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 79,
          "functions": [
            {
              "name": "ri",
              "complexity": 1,
              "line_start": 15,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001439810002921149
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.179400012726546e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001527479998912895
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.654800022763084e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.4352999995899154e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00055713099982313
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00016527099978702608
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.4181999985303264e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.995299989081104e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "main",
              "complexity": 51,
              "line_start": 1,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011550800036275177
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 5.6106000101863174e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1196_D2",
      "tags": "data structures,dp,implementation,two pointers",
      "tool": "complexipy",
      "execution_time": 4.712899999503861e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 3.118900031040539e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.7391999992687488e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 1,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.8702999972883845e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.557600004773121e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.5026000205107266e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 1.8544999875302892e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.7771999814140145e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.805299982355791e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.329400012968108e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.41240001944243e-05
    },
    {
      "true_complexity": "linear",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.0145999719243264e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "good",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "check",
              "complexity": 4,
              "line_start": 7,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.796899995402782e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.269199987698812e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.611900001487811e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.714199990805355e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.7741000141977565e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6369999886810547e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "crear_intervalo",
              "complexity": 0,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "calcular_posibles_posiciones",
              "complexity": 1,
              "line_start": 8,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.566199994675117e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.693600016660639e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.782700029361877e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.818999989060103e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.561499983741669e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.326899983832845e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.0936999994301004e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "read_houses",
              "complexity": 1,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.521600001477054e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.38210003671702e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0015_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.101899983448675e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.921700004459126e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.0778999896720052e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.014800020333496e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.446799979021307e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 15
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 0.0001571660000081465
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.31839999287331e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.689200007604086e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.4466999800788471e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.6580999727011658e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.412699975844589e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.1230999916733708e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 3.0217000130505767e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.5346999791509006e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.842499978010892e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "secondorder",
              "complexity": 0,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.4726999981794506e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.9146999875374604e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.9446000098687364e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0022_A",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 1.9315999907121295e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.2814000001526438e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "replace",
              "complexity": 1,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.4956999823189108e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0197999674564926e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.3566000234277453e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 30,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.458900012759841e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.14799997593218e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.1240000023681205e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.809899969084654e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.8063999959849752e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.409700007570791e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.9706999864865793e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7071999991458142e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7071999991458142e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 27,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 16,
              "line_end": 18
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 40,
              "line_end": 41
            },
            {
              "name": "binarytodecimal",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 46,
              "line_end": 62
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 64,
              "line_end": 76
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 78,
              "line_end": 85
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 86,
              "line_end": 88
            },
            {
              "name": "getProduct",
              "complexity": 1,
              "line_start": 92,
              "line_end": 100
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 104,
              "line_end": 106
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 108,
              "line_end": 109
            },
            {
              "name": "checkisap",
              "complexity": 3,
              "line_start": 111,
              "line_end": 117
            },
            {
              "name": "primes_method5",
              "complexity": 6,
              "line_start": 120,
              "line_end": 128
            },
            {
              "name": "getSum",
              "complexity": 0,
              "line_start": 130,
              "line_end": 134
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 139,
              "line_end": 140
            },
            {
              "name": "di",
              "complexity": 0,
              "line_start": 142,
              "line_end": 142
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 143,
              "line_end": 143
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 144,
              "line_end": 144
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 145,
              "line_end": 145
            },
            {
              "name": "indict",
              "complexity": 1,
              "line_start": 146,
              "line_end": 150
            },
            {
              "name": "frqdict",
              "complexity": 3,
              "line_start": 151,
              "line_end": 159
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0004874090000157594
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.9455999992933357e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014531399983752635
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.65279999843915e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0135_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.8982999740255764e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "ballbuster5000",
              "complexity": 3,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.426300029081176e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.652000011948985e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8585000361781567e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.292299996042857e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.1671000013157027e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8816000192600768e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.859500025602756e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.060899987554876e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.4637000024085864e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.924599973790464e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.842500023485627e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "sum",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.7602000045590103e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.2773999969795113e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.560800021456089e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.808399974834174e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.2542000351677416e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.6481999864481622e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0160_A",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.5840000287425937e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.4997999642218929e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.3886000033380697e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.3784999939380214e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 8,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.421300036483444e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.561600007946254e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0929000129399356e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "valid",
              "complexity": 1,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "div",
              "complexity": 7,
              "line_start": 49,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 63,
              "line_end": 74
            },
            {
              "name": "s",
              "complexity": 1,
              "line_start": 76,
              "line_end": 82
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 86,
              "line_end": 102
            }
          ]
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00022354199973051436
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "valid",
              "complexity": 1,
              "line_start": 45,
              "line_end": 46
            },
            {
              "name": "div",
              "complexity": 7,
              "line_start": 49,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 63,
              "line_end": 74
            },
            {
              "name": "s",
              "complexity": 1,
              "line_start": 76,
              "line_end": 82
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 86,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00019390600027691107
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.053799991903361e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.076799976042821e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.433600002405001e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.3953999718505656e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.665900021587731e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.154099956896971e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.746300040394999e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.965499990954413e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.600900006655138e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0166_A",
      "tags": "binary search,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7732999822328566e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.2814000001526438e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.2763000288250623e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.517999842501013e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.1380999694665661e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.1993000043730717e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.3836000107403379e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.4656000277900603e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.2243000128364656e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.337999927083729e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 8.537000212527346e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 8.9169998318539e-06
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.358600002276944e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.0940000265691197e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0169_A",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.6400999811594374e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7482999737694627e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.326399999219575e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.6972000139503507e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.869300007863785e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "power",
              "complexity": 4,
              "line_start": 12,
              "line_end": 22
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 30,
              "line_end": 34
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 41,
              "line_end": 42
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 44,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011699000015141792
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7733000024454668e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.08680000671302e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.7693000245344592e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.5298999642254785e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.9938000150432345e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0527999822661513e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.6229999800998485e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.955700008693384e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "Sort",
              "complexity": 5,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.530400039788219e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.8754999928205507e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6980999791703653e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6359999992564553e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0220_A",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.794399986465578e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.073800007769023e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.1871000171813648e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.2994000119069824e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.395400017325301e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.113900018230197e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.749299963194062e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 247,
              "line_end": 265
            }
          ]
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0010828110002876201
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.272100002504885e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6871000045503024e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.3815000076865545e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.3333999706665054e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.0648999907280086e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.817399970605038e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.343400001336704e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.456699985486921e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 1.5999999959603883e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "socket",
              "complexity": 10,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.942299983667908e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0257_A",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6199999865639256e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.155700000614161e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.1841000034328317e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.6911999864532845e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.913599999170401e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.014799974858761e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.4637000024085864e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.2392000118998112e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.742200013017282e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.7271000362816267e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 69,
        "functions_count": 36,
        "raw_output": {
          "file_complexity": 69,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 26
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 37,
              "line_end": 43
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 45,
              "line_end": 55
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 57,
              "line_end": 74
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 76,
              "line_end": 93
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 95,
              "line_end": 123
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 125,
              "line_end": 150
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 152,
              "line_end": 178
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 180,
              "line_end": 186
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 188,
              "line_end": 193
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 195,
              "line_end": 200
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 202,
              "line_end": 205
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 207,
              "line_end": 210
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 212,
              "line_end": 214
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 216,
              "line_end": 218
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 220,
              "line_end": 223
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 225,
              "line_end": 228
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 230,
              "line_end": 236
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 242,
              "line_end": 244
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 246,
              "line_end": 248
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 249,
              "line_end": 346
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 352,
              "line_end": 355
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 357,
              "line_end": 365
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 367,
              "line_end": 374
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 379,
              "line_end": 382
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 384,
              "line_end": 386
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 390,
              "line_end": 393
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 397,
              "line_end": 400
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.001983370000289142
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 59,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 63,
              "line_end": 75
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 78,
              "line_end": 89
            },
            {
              "name": "primefactors",
              "complexity": 5,
              "line_start": 92,
              "line_end": 103
            },
            {
              "name": "factors",
              "complexity": 3,
              "line_start": 106,
              "line_end": 114
            },
            {
              "name": "modInverse",
              "complexity": 3,
              "line_start": 117,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0005763369999840506
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.713300005387282e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.604299980812357e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.3480999667954165e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "func",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 17,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.418400021677371e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.3583999791298993e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.9956000162201235e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 7,
              "line_end": 17
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 28,
              "line_end": 32
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 34,
              "line_end": 42
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 44,
              "line_end": 51
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 53,
              "line_end": 56
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 60,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "0274_A",
      "tags": "binary search,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001541800002087257
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001067719999809924
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 71,
        "functions_count": 30,
        "raw_output": {
          "file_complexity": 71,
          "functions": [
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 39,
              "line_end": 45
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 47,
              "line_end": 57
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 59,
              "line_end": 76
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 78,
              "line_end": 95
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 97,
              "line_end": 125
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 127,
              "line_end": 152
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 154,
              "line_end": 180
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 182,
              "line_end": 188
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 190,
              "line_end": 195
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 197,
              "line_end": 202
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 204,
              "line_end": 207
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 209,
              "line_end": 212
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 214,
              "line_end": 216
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 218,
              "line_end": 220
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 222,
              "line_end": 225
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 227,
              "line_end": 230
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 232,
              "line_end": 238
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 240,
              "line_end": 242
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 244,
              "line_end": 246
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 248,
              "line_end": 250
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 253,
              "line_end": 255
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 258,
              "line_end": 258
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 261,
              "line_end": 298
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 307,
              "line_end": 311
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 313,
              "line_end": 321
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 323,
              "line_end": 330
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 332,
              "line_end": 335
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 345
            }
          ]
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.0013681300001735508
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012473500009946292
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 23,
              "line_end": 26
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 29,
              "line_end": 73
            },
            {
              "name": "solve2",
              "complexity": 11,
              "line_start": 76,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002466750001985929
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0527_C",
      "tags": "binary search,data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010481700019226992
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0528_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 9.673299973655958e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0528_A",
      "tags": "data structures,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012112800004615565
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.367299996170914e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.452499959166744e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.252199985581683e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.965600015158998e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "TUPLE",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "ZIP",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.703500023126253e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.968599983432796e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.1129999822733225e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.2269999994459795e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.398399985599099e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.928400019503897e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.298300023539923e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.8544000088004395e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.425499997116276e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.3384000087389722e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 1,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.9696000183321303e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "CodeforcesTask528BSolution::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "CodeforcesTask528BSolution::read_input",
              "complexity": 1,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "CodeforcesTask528BSolution::process_task",
              "complexity": 3,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "CodeforcesTask528BSolution::get_result",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.344999974317034e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.2530999760638224e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0528_B",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 2.2211999748833477e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 7.886799994594185e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "d",
              "complexity": 1,
              "line_start": 5,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 3.74510000256123e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 0.00028537800017147674
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 6.215800021891482e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 4.599699968821369e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 7,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 4.726900033347192e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 2.5026999992405763e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 5.745799990108935e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 3.9353999909508275e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 2.329400012968108e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 3.518699986670981e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 2.9875999643991236e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "up",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "go",
              "complexity": 1,
              "line_start": 14,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 8.600199998909375e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 7.123400018826942e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 2.5687999823276186e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 4.211000032228185e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "almost_difference",
              "complexity": 11,
              "line_start": 34,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 6.881000035718898e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0903_D",
      "tags": "data structures,math",
      "tool": "complexipy",
      "execution_time": 3.455499972915277e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "possible",
              "complexity": 4,
              "line_start": 14,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.8660999911808176e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 18,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.73149997460132e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "check",
              "complexity": 6,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.43590000840777e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "check",
              "complexity": 6,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.556300013471628e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00020882399985566735
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 3,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 18,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.404699994775001e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00020461499980228837
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001945670001077815
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "heapT::__init__",
              "complexity": 0,
              "line_start": 7,
              "line_end": 11
            },
            {
              "name": "heapT::push",
              "complexity": 1,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "heapT::pop",
              "complexity": 0,
              "line_start": 21,
              "line_end": 24
            },
            {
              "name": "heapT::normalize",
              "complexity": 1,
              "line_start": 26,
              "line_end": 28
            },
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 30,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001213690002259682
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "fun",
              "complexity": 8,
              "line_start": 3,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.229500008383184e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00025085400011448655
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 5,
              "line_end": 43
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 50,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0913_D",
      "tags": "binary search,brute force,data structures,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011156000027767732
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "max_eligible",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.969300016455236e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.2110999654832995e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.141900015179999e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "sss",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 5.618599971057847e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "sss",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 5.1746999815804884e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.1538999792246614e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 5.5375000101776095e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 6.0243999996600905e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.7971999972796766e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.3342000026314054e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 8.521100016878336e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.176900029051467e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0957_C",
      "tags": "binary search,greedy,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.6128000374446856e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "dfs_from",
              "complexity": 12,
              "line_start": 17,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0958_B2",
      "tags": "data structures,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00015035399974294705
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 84,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 84,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "main",
              "complexity": 74,
              "line_start": 66,
              "line_end": 197
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0006923549999555689
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "pair_of_lines",
              "complexity": 4,
              "line_start": 3,
              "line_end": 14
            },
            {
              "name": "kstr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 32
            },
            {
              "name": "judge",
              "complexity": 12,
              "line_start": 35,
              "line_end": 50
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 53,
              "line_end": 56
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00013488400009009638
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 278,
        "functions_count": 50,
        "raw_output": {
          "file_complexity": 278,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 330
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 332,
              "line_end": 337
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 340,
              "line_end": 344
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 352
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 354,
              "line_end": 366
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 368,
              "line_end": 377
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 379,
              "line_end": 388
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 391,
              "line_end": 404
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 406,
              "line_end": 409
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 418,
              "line_end": 419
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 421,
              "line_end": 437
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 439,
              "line_end": 463
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 465,
              "line_end": 489
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 494,
              "line_end": 495
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 497,
              "line_end": 503
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 505,
              "line_end": 512
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 523,
              "line_end": 532
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 534,
              "line_end": 543
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 545,
              "line_end": 561
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 563,
              "line_end": 574
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "solve",
              "complexity": 49,
              "line_start": 602,
              "line_end": 649
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.003438683999775094
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "gcd",
              "complexity": 2,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "line",
              "complexity": 5,
              "line_start": 8,
              "line_end": 28
            },
            {
              "name": "online",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "process",
              "complexity": 18,
              "line_start": 40,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0001534600000923092
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "is_colinear",
              "complexity": 6,
              "line_start": 11,
              "line_end": 23
            },
            {
              "name": "good",
              "complexity": 9,
              "line_start": 27,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 9.098200007429114e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "is_colinear",
              "complexity": 6,
              "line_start": 14,
              "line_end": 26
            },
            {
              "name": "good",
              "complexity": 9,
              "line_start": 30,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00010435700005473336
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 73,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 73,
          "functions": [
            {
              "name": "nod",
              "complexity": 4,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "point3",
              "complexity": 2,
              "line_start": 8,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0003591069998947205
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 60,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "on_one_line",
              "complexity": 7,
              "line_start": 13,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 50,
              "line_start": 28,
              "line_end": 111
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0004268449997653079
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get_line",
              "complexity": 0,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "check",
              "complexity": 10,
              "line_start": 28,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00012346299990895204
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0001613740000721009
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "read_data",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "is_on_line",
              "complexity": 1,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 37,
              "line_start": 12,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00019100100007563015
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.000296749999961321
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "scal",
              "complexity": 1,
              "line_start": 8,
              "line_end": 11
            },
            {
              "name": "check",
              "complexity": 13,
              "line_start": 13,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00020123000012972625
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "main",
              "complexity": 47,
              "line_start": 5,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.00018120100003216066
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "g",
              "complexity": 10,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 7.712600017839577e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "cross",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "f",
              "complexity": 3,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 9.77039999270346e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "Point::__init__",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            },
            {
              "name": "Vector::__init__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "Vector::mult",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "onLine",
              "complexity": 4,
              "line_start": 28,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 0.0001337020003120415
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "iscollinear",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "checkfortwolines",
              "complexity": 10,
              "line_start": 9,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0961_D",
      "tags": "geometry",
      "tool": "complexipy",
      "execution_time": 8.552099961889326e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "Solution",
              "complexity": 4,
              "line_start": 1,
              "line_end": 15
            },
            {
              "name": "binarySearch_LowerBound",
              "complexity": 3,
              "line_start": 18,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 7.315799985008198e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 3.127899981336668e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "next",
              "complexity": 4,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 5.226899975241395e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "Binary_Search",
              "complexity": 3,
              "line_start": 18,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 9.208399978888338e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "Binary_Search",
              "complexity": 3,
              "line_start": 19,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 9.062000026460737e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 3.089800020461553e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "p",
              "complexity": 3,
              "line_start": 5,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 8.441899990430102e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "p",
              "complexity": 3,
              "line_start": 5,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 8.810600002107094e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "bin_ser",
              "complexity": 4,
              "line_start": 2,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 16,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 8.753600013733376e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "bin_ser",
              "complexity": 4,
              "line_start": 3,
              "line_end": 14
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 17,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 6.645600024057785e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 3.793199994106544e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "search",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 4.91630003125465e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 6.744699976479751e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0975_C",
      "tags": "binary search",
      "tool": "complexipy",
      "execution_time": 3.656899980342132e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.453499994066078e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.541699970810441e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.5287999960710295e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 9,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 37,
              "line_end": 41
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 62,
              "line_end": 65
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 69,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002340919995731383
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "readlines",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 7,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.674599990219576e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.902299997411319e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.87730001421005e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.8903999918838963e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.7350999971531564e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6300000172341242e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.672100026757107e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "res",
              "complexity": 3,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.69089998457639e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.734999972948572e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "inn",
              "complexity": 1,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.22590001107892e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solution",
              "complexity": 6,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.092700010005501e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.17979997312068e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.038599990963121e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0976_C",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.6099000024260022e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.0357000014191726e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.9607000012911158e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.5488000119366916e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.261700011440553e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.6159000299230684e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.5969000034820056e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.886400008923374e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.2993000129645225e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.985200004943181e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.331800043175463e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.648999998200452e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.847299992936314e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 51,
              "line_end": 64
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 65,
              "line_end": 72
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "ceildiv",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "datainput",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.00034256600019944017
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "iin",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "sin",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "listin",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "liststr",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "ceill",
              "complexity": 1,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "ceilldiv",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "LCM",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 5,
              "line_start": 20,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.0001626069997655577
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.765999983646907e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0981_B",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 1.96969999706198e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012728000001516193
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.004500007999013e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012964400002601906
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.620899997258675e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.177899973001331e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.1519999993179226e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.5659000129962806e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.7743000373448012e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.113899992968072e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.773099979298422e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.390400024727569e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.493599979265127e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.088899984504678e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.6761000299302395e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.5147000087599736e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.586799994081957e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.631999996083323e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0982_B",
      "tags": "data structures,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.608900013001403e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            },
            {
              "name": "mergeSort",
              "complexity": 0,
              "line_start": 264,
              "line_end": 268
            },
            {
              "name": "_mergeSort",
              "complexity": 1,
              "line_start": 272,
              "line_end": 305
            },
            {
              "name": "merge",
              "complexity": 7,
              "line_start": 309,
              "line_end": 352
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 0.0016170690000762988
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.3670999932364793e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 9
            },
            {
              "name": "BIT::add",
              "complexity": 1,
              "line_start": 11,
              "line_end": 18
            },
            {
              "name": "BIT::running_total",
              "complexity": 4,
              "line_start": 20,
              "line_end": 31
            },
            {
              "name": "BIT::sumrange",
              "complexity": 2,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "BIT::lower_left",
              "complexity": 6,
              "line_start": 42,
              "line_end": 55
            },
            {
              "name": "tentousu",
              "complexity": 1,
              "line_start": 56,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 0.00021228100013104267
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "Bit::__init__",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "Bit::sum",
              "complexity": 1,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "Bit::add",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 8.666300027471152e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.237799996393733e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.516400005944888e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 2.1500999991985736e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 6.94110003678361e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.028500027037808e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 4.9403000048187096e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.595499987975927e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 3.93949999306642e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 4.31920002483821e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 2.5267999717470957e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.065599998488324e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 5.011400025978219e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "ctd",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 74,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 0.00038983500007816474
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0986_B",
      "tags": "combinatorics,math",
      "tool": "complexipy",
      "execution_time": 6.278900036704727e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00014831999988018651
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.0888000310369534e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.6018999960797373e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.555799983383622e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.330300023662858e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.1069000013085315e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.9675999940081965e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.425599996058736e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.3425000108545646e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.45050002579228e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.343400001336704e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 1.8344000181969022e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "comp",
              "complexity": 6,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 4.946300032315776e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.271100013080286e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 5.403200020737131e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 5,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 3.191999985574512e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 2.5508000362606253e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "comp",
              "complexity": 6,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0988_B",
      "tags": "sortings,strings",
      "tool": "complexipy",
      "execution_time": 4.567599989968585e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.07160002598539e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.568600024867919e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 6.275799978538998e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 32,
              "line_end": 35
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 37,
              "line_end": 47
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 54,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00020204099973852863
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "main",
              "complexity": 24,
              "line_start": 84,
              "line_end": 116
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00033393899957445683
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00012892299992017797
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 8.45989998197183e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 7.746600022073835e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 34,
              "line_end": 37
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 39,
              "line_end": 49
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 61,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00018122099982065265
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 7.021199962764513e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 4,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 6.869899971206905e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 96,
              "line_end": 107
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00031958299996404094
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00024689599968041875
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "power",
              "complexity": 2,
              "line_start": 70,
              "line_end": 76
            },
            {
              "name": "totalPrimeFactors",
              "complexity": 10,
              "line_start": 79,
              "line_end": 95
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 133,
              "line_end": 173
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0003442189999987022
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "dist",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "power2",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00013940300004833261
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0988_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.8880999858956784e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.53569998878811e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.2312000055535464e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.5538000045344234e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.8873999983479735e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 31,
              "line_end": 47
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 62
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 71,
              "line_end": 73
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00020590899976014043
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.0377000004809815e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.6339000214647967e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.1070000002509914e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.9244999950606143e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.9935999918961897e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.956499995183549e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.789899978481117e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.640699989977293e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.507500034378609e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.446299999472103e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.3453999801859027e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0990_B",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.90120000904426e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.349800034717191e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.22749998405925e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.112499977461994e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.590299992443761e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.462300032377243e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.000276832000054128
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.453200012401794e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.438399992068298e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "get_ints_in_variables",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "get_int",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "get_ints_in_list",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "get_list_of_list",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "myceil",
              "complexity": 0,
              "line_start": 31,
              "line_end": 31
            },
            {
              "name": "Solution",
              "complexity": 8,
              "line_start": 36,
              "line_end": 59
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012473600008888752
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.585800004657358e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "Knight::__init__",
              "complexity": 0,
              "line_start": 4,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.4582999837293755e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.282799995460664e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.406199989010929e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.248800036701141e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "takeSecond",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "takeFirst",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.907200011279201e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.8702999972883845e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.058200000959914e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.5226999898441136e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "my_cmp",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "dis",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.85499997214356e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 6.52230000923737e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.4983000154607e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.264899982648785e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "main",
              "complexity": 4,
              "line_start": 5,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.246899991107057e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 86,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 86,
          "functions": [
            {
              "name": "lv",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0995_C",
      "tags": "brute force,data structures,geometry,greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 0.00029771100025755004
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 18,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010281400000167196
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "testcase",
              "complexity": 2,
              "line_start": 7,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.087500014473335e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 8,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 33,
              "line_end": 37
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 49,
              "line_end": 56
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 65,
              "line_end": 71
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00018503899991628714
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 20,
              "line_start": 20,
              "line_end": 67
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 68,
              "line_end": 71
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 89,
              "line_end": 97
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 99,
              "line_end": 106
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 108,
              "line_end": 111
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 124,
              "line_end": 135
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003861079999296635
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.370300009919447e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 8,
              "line_end": 26
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 42,
              "line_end": 50
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.000198503999854438
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "f",
              "complexity": 4,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.501400028151693e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.728000001501641e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 3,
              "line_end": 30
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 33,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 7.417000006171293e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "readmap",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "readlist",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.149299967248226e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.833000022903434e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.597800014176755e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.8293000013945857e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 12,
              "line_end": 15
            },
            {
              "name": "BS",
              "complexity": 4,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 33,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00016146500001923414
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.196799975237809e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.874000018797233e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.346100033420953e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1000_C",
      "tags": "data structures,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.3911999910051236e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.859000041004037e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 3,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 7.356900005106581e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "binary",
              "complexity": 3,
              "line_start": 3,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.012299991198233e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 7.42900001569069e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 0.00024332900011359015
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.871200007983134e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.644899970822735e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.347200001575402e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.477500013104873e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.076399995436077e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.5405000239261426e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.953500026909751e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.3973999961744994e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.7170000268815784e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.735399999044603e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 9.464899994782172e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 5.782900007034186e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1005_C",
      "tags": "brute force,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.6035999730520416e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "BIT::to_sum",
              "complexity": 1,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "BIT::add",
              "complexity": 1,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "BIT::get",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "f",
              "complexity": 2,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "calc_median",
              "complexity": 4,
              "line_start": 35,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.318600041297032e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "gC",
              "complexity": 3,
              "line_start": 4,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.911299993182183e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 22
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 24,
              "line_end": 32
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 34,
              "line_end": 41
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 43,
              "line_end": 46
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 56
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "rl",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "mergeSortGoodOrder",
              "complexity": 5,
              "line_start": 112,
              "line_end": 144
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.00036689199987449683
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.308900037765852e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.1630000194127206e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "power",
              "complexity": 2,
              "line_start": 70,
              "line_end": 76
            },
            {
              "name": "totalPrimeFactors",
              "complexity": 10,
              "line_start": 79,
              "line_end": 95
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 133,
              "line_end": 162
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 0.0003047850000257313
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 6.464199987021857e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.2880000112054404e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.196499973360915e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.02629999977944e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.035300041025039e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 7.167500007199124e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.7911000163148856e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.2039000163640594e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "less_sum",
              "complexity": 5,
              "line_start": 3,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.230900023889262e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.236799961494398e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.615600002784049e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1005_E1",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.1066000196442474e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.3631999687931966e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.744800000684336e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "dtb",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "btd",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.11860000390152e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 8,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.6537000091338996e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.6328000078356126e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.274099981354084e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.2531000215385575e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "max_profit",
              "complexity": 4,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.4563999836100265e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "max_profit",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.415499986658688e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.3102000088547356e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.29679998382926e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 27,
              "line_end": 46
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 48,
              "line_end": 87
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 88,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00022935200013307622
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.474399975151755e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.4845000047644135e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.565700035323971e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1006_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.241099966544425e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.177999997205916e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "pos",
              "complexity": 3,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.346299990880652e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.855399998225039e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.232100016248296e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.5968999580072705e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.713699985994026e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.6036999719945015e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.688999984457041e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "is_ok",
              "complexity": 2,
              "line_start": 6,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.135899987682933e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.965500036429148e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.507700012050918e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.277100015315227e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "isValid",
              "complexity": 14,
              "line_start": 1,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.518200027334387e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 21,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 30,
              "line_end": 33
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 35,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 46,
              "line_end": 47
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 49,
              "line_end": 50
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 62,
              "line_end": 71
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 77,
              "line_end": 82
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 84,
              "line_end": 95
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 97,
              "line_end": 110
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 112,
              "line_end": 114
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 117,
              "line_end": 117
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 119,
              "line_end": 119
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 121,
              "line_end": 121
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 123,
              "line_end": 123
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 125,
              "line_end": 125
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 126,
              "line_end": 126
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00047471499965467956
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "timer",
              "complexity": 0,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "solver::__init__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "solver::__call__",
              "complexity": 8,
              "line_start": 20,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.531200026278384e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.100600037621916e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 1.585000018167193e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1011_B",
      "tags": "binary search,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 1.6461000086565036e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.8463000035117147e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 5.271899999570451e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 4,
              "line_start": 8,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.990400020687957e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.4485000014683465e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.00870001410658e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.091699975106167e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.517599998303922e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.793299972836394e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.1028000194055494e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 2.946499989775475e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.5015000068815425e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.7341000279411674e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "mergeSort",
              "complexity": 11,
              "line_start": 1,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 9.240400004273397e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "readPair",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "readEntry",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.627700036508031e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "readPair",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.0326999876706395e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sumList",
              "complexity": 1,
              "line_start": 11,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.821200016318471e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "sumList",
              "complexity": 1,
              "line_start": 12,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 3.5055999887845246e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1015_C",
      "tags": "sortings",
      "tool": "complexipy",
      "execution_time": 4.661799994210014e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 20,
              "line_start": 15,
              "line_end": 352
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 358,
              "line_end": 361
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 363,
              "line_end": 371
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 373,
              "line_end": 380
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 385,
              "line_end": 388
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 390,
              "line_end": 392
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 396,
              "line_end": 399
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 403,
              "line_end": 406
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0004941820002386521
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00022035499978301232
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00026258500020048814
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "fun",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 6.812799983890727e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.762899991168524e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.7407999975112034e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.034200007183244e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0003058170000258542
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "print",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "ind",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "cleanarr",
              "complexity": 7,
              "line_start": 21,
              "line_end": 36
            },
            {
              "name": "main",
              "complexity": 26,
              "line_start": 37,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00023739800008115708
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "process",
              "complexity": 8,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 7.621400027346681e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.4072000239102636e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "modinv",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ncr",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "GCD",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            },
            {
              "name": "BS",
              "complexity": 3,
              "line_start": 19,
              "line_end": 28
            },
            {
              "name": "comp",
              "complexity": 5,
              "line_start": 36,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00018383599990556831
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 5.573499993261066e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00010237300011795014
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00010705199974836432
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.0001326100000369479
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00014830000009169453
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1027_C",
      "tags": "greedy",
      "tool": "complexipy",
      "execution_time": 0.00011581799981286167
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.806799956393661e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.7369999720103806e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 7,
              "line_end": 25
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 31,
              "line_end": 35
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 36,
              "line_end": 44
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 45,
              "line_end": 52
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 53,
              "line_end": 56
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 58,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00018169300028603175
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 4.8181000238400884e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.173699992155889e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.074500015529338e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 5.6426999890391016e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.238800006030942e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "getf",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "put",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "putf",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00016691499968146672
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 9.239399969374062e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "Digit::__init__",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "Digit::increment",
              "complexity": 1,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "Digit::found",
              "complexity": 1,
              "line_start": 21,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001565450002090074
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.165500028349925e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.47509998291207e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.479999996779952e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.49909997668874e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 8.095300017885165e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 7.511200010412722e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1029_D",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 6.11850000495906e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1033_A",
      "tags": "dfs and similar,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.092699964530766e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 0.0001175620000140043
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 9.179300013784086e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 9.111199960898375e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 8.158399987223675e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 0.0001091059998543642
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 0.00011826299987660605
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 9.251500023310655e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 6.731699977535754e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "add",
              "complexity": 1,
              "line_start": 5,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 0.00012998500005778624
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 8.293599967146292e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.323799991354463e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "bfs",
              "complexity": 14,
              "line_start": 2,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 9.591099978933926e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 0.00010223300023426418
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 8.472999979858287e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.821700000931742e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 7.215599998744437e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 8.25760002953757e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 8.742499994696118e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.1830999685334973e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1038_D",
      "tags": "dp,greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.020299997544498e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.90189997132984e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 4.826100030186353e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.325999993350706e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 10,
              "line_end": 21
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "numIN",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "charIN",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "bfs",
              "complexity": 3,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.00015878000021984917
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "countleaf",
              "complexity": 2,
              "line_start": 7,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 8.192399991457933e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 3.693999997267383e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 7.135400028346339e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.19669999650796e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "bfs",
              "complexity": 2,
              "line_start": 11,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 9.834599995883764e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "DFS::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            },
            {
              "name": "DFS::take_input",
              "complexity": 12,
              "line_start": 6,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 9.391699995831004e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "f",
              "complexity": 6,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.060600005890592e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "sfy",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.544400028156815e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 3.6920000184181845e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "dprint",
              "complexity": 1,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 19,
              "line_end": 48
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 51,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 9.691300010672421e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.229899988989928e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.5015000068815425e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.468399993129424e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "do",
              "complexity": 7,
              "line_start": 6,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 7.33480001144926e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 6.666499984930851e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.907299990009051e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.0936999994301004e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.085600014353986e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 8.69339996825147e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 4.043599983560853e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "f",
              "complexity": 2,
              "line_start": 9,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1059_C",
      "tags": "constructive algorithms,math",
      "tool": "complexipy",
      "execution_time": 5.6646999837539624e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.183999979228247e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011276199984422419
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "dprint",
              "complexity": 1,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 19,
              "line_end": 36
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 39,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 9.573999977874337e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.114800028924947e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.160899996146327e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.610800013120752e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.827399976013112e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.782099975069286e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.6073000147735e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.221500002036919e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.337999982657493e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.0437999612331623e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 2.5907999770424794e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.132599992270116e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.2050000299932435e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.609699999491568e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "nospace",
              "complexity": 0,
              "line_start": 25,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.928899978855043e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.0926000312756514e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1061_B",
      "tags": "greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010983699985445128
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011590899975999491
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 8.290599998872494e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 22,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "SortedList::__init__",
              "complexity": 1,
              "line_start": 2,
              "line_end": 13
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 15,
              "line_end": 22
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 32,
              "line_end": 42
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 44,
              "line_end": 61
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 63,
              "line_end": 80
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 82,
              "line_end": 110
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 112,
              "line_end": 137
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 139,
              "line_end": 165
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 167,
              "line_end": 173
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 175,
              "line_end": 180
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 189,
              "line_end": 192
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 194,
              "line_end": 197
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 199,
              "line_end": 201
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 203,
              "line_end": 205
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 207,
              "line_end": 210
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 212,
              "line_end": 215
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 217,
              "line_end": 223
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 225,
              "line_end": 227
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 229,
              "line_end": 231
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 233,
              "line_end": 235
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.001174114000150439
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 9,
              "line_end": 34
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 44,
              "line_end": 48
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 60,
              "line_end": 67
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 69,
              "line_end": 72
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 76,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002666129998942779
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 9,
              "line_end": 34
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 44,
              "line_end": 48
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 60,
              "line_end": 67
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 69,
              "line_end": 72
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 76,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002484080000613176
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.936999989193282e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1061_D",
      "tags": "data structures,greedy,implementation,sortings",
      "tool": "complexipy",
      "execution_time": 0.00018732399985310622
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.36539997078944e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.2534000234154519e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4116999864199897e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.290399995923508e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3184999716031598e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.123399973352207e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 23,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00014454299980570795
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "push",
              "complexity": 2,
              "line_start": 2,
              "line_end": 8
            },
            {
              "name": "push_v",
              "complexity": 1,
              "line_start": 10,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013063599999441067
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.547299992438639e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 6.973099971219199e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 6.631499991271994e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "bfs",
              "complexity": 9,
              "line_start": 14,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011787199991886155
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "bfs",
              "complexity": 9,
              "line_start": 14,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1067_B",
      "tags": "dfs and similar,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010743300026661018
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.7609000123193255e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 4.711900010079262e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 3.847300013148924e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.597600011242321e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.2809999740711646e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.423300015332643e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.786900010207319e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.97849998989841e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 13,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 7.97100001364015e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "next",
              "complexity": 2,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 6.614399990212405e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.406300013215514e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 6.359000008160365e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.7430999782372965e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.3924000035767676e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 18,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 6.984099991313997e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.125699979340425e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "sort_x2",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.632600004901178e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 4.2490000396355754e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "bin_search",
              "complexity": 6,
              "line_start": 8,
              "line_end": 24
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 26,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 6.856900017737644e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "readint",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 11,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 5.727799998567207e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.756099977181293e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1075_C",
      "tags": "two pointers",
      "tool": "complexipy",
      "execution_time": 3.829300021607196e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.9220999901299365e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.083199963948573e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.217400020133937e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 3,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00019601000030888827
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.742400015966268e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "out_edge",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.952999976623687e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011201200004506973
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1091_F",
      "tags": "constructive algorithms,greedy",
      "tool": "complexipy",
      "execution_time": 5.28890000168758e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "power",
              "complexity": 3,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "add",
              "complexity": 1,
              "line_start": 15,
              "line_end": 18
            },
            {
              "name": "get",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00010731199972724426
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "I",
              "complexity": 5,
              "line_start": 16,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00015257699988069362
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00013945299997430993
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "mu",
              "complexity": 2,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "add",
              "complexity": 1,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "get",
              "complexity": 1,
              "line_start": 20,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00012958500019522035
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "merge",
              "complexity": 3,
              "line_start": 1,
              "line_end": 19
            },
            {
              "name": "mergesort",
              "complexity": 1,
              "line_start": 20,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00014193800006978563
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "inverse",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "get",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "update",
              "complexity": 1,
              "line_start": 21,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00012247099994056043
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "FenwickSum::__init__",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "FenwickSum::add",
              "complexity": 1,
              "line_start": 21,
              "line_end": 24
            },
            {
              "name": "FenwickSum::sum",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 36,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1096_F",
      "tags": "dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00015651500007152208
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1098_C",
      "tags": "binary search,constructive algorithms,dfs and similar,graphs,greedy,trees",
      "tool": "complexipy",
      "execution_time": 0.00012528599972938537
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "find_loop",
              "complexity": 18,
              "line_start": 4,
              "line_end": 32
            },
            {
              "name": "top_sort",
              "complexity": 20,
              "line_start": 35,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00026441899990459206
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "sol",
              "complexity": 15,
              "line_start": 19,
              "line_end": 38
            },
            {
              "name": "sol2",
              "complexity": 15,
              "line_start": 40,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00023645600003874279
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "top_sort",
              "complexity": 10,
              "line_start": 3,
              "line_end": 20
            },
            {
              "name": "check",
              "complexity": 4,
              "line_start": 23,
              "line_end": 32
            },
            {
              "name": "input_t",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00025113399988185847
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "check",
              "complexity": 36,
              "line_start": 6,
              "line_end": 47
            },
            {
              "name": "main",
              "complexity": 5,
              "line_start": 49,
              "line_end": 70
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 76,
              "line_end": 80
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 81,
              "line_end": 89
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 90,
              "line_end": 97
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 98,
              "line_end": 101
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 103,
              "line_end": 109
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.0005459789999804343
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 11,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00020792199984498438
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "find_loop",
              "complexity": 18,
              "line_start": 6,
              "line_end": 34
            },
            {
              "name": "top_sort",
              "complexity": 20,
              "line_start": 37,
              "line_end": 70
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00028736200010825996
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 8,
              "line_start": 5,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012840200042774086
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "judge",
              "complexity": 9,
              "line_start": 5,
              "line_end": 27
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 29,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1100_E",
      "tags": "binary search,dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00013889199999539414
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.7649999942223076e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.077699986737571e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9536000056396006e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 1,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 8.790599986241432e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.07160002598539e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.746000038518105e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.6518000090145506e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.393299968796782e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.800099986823625e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7921999844693346e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.084700003659236e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.603799996199086e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0447999961324967e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.904299976260518e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.295199985586805e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9876000098738587e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.081699989910703e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.240899963609991e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "si",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "sti",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "iti",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "sli",
              "complexity": 0,
              "line_start": 32,
              "line_end": 32
            },
            {
              "name": "ili",
              "complexity": 0,
              "line_start": 35,
              "line_end": 35
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 38,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011013799985448713
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "readMultiple",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 10,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1180_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 6.873000029372633e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.139800012126216e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 26,
              "line_start": 16,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.0001246950000677316
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "power",
              "complexity": 2,
              "line_start": 70,
              "line_end": 76
            },
            {
              "name": "totalPrimeFactors",
              "complexity": 10,
              "line_start": 79,
              "line_end": 95
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 133,
              "line_end": 161
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.00032476200021847035
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 63,
        "functions_count": 33,
        "raw_output": {
          "file_complexity": 63,
          "functions": [
            {
              "name": "naiveSolve",
              "complexity": 0,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 9,
              "line_end": 18
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 20,
              "line_end": 27
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 29,
              "line_end": 35
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 37,
              "line_end": 47
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 49,
              "line_end": 66
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 68,
              "line_end": 85
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 87,
              "line_end": 115
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 117,
              "line_end": 142
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 144,
              "line_end": 170
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 172,
              "line_end": 178
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 180,
              "line_end": 185
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 187,
              "line_end": 192
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 194,
              "line_end": 197
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 199,
              "line_end": 202
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 204,
              "line_end": 206
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 208,
              "line_end": 210
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 212,
              "line_end": 215
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 217,
              "line_end": 220
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 222,
              "line_end": 228
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 230,
              "line_end": 232
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 234,
              "line_end": 236
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "OrderedList::__init__",
              "complexity": 0,
              "line_start": 243,
              "line_end": 244
            },
            {
              "name": "OrderedList::rangeCountByValue",
              "complexity": 0,
              "line_start": 245,
              "line_end": 248
            },
            {
              "name": "main",
              "complexity": 9,
              "line_start": 252,
              "line_end": 287
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 294,
              "line_end": 295
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 296,
              "line_end": 297
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 298,
              "line_end": 299
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 301,
              "line_end": 302
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 306,
              "line_end": 309
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 311,
              "line_end": 314
            },
            {
              "name": "answerInteractive",
              "complexity": 0,
              "line_start": 316,
              "line_end": 318
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.0011853949999931501
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.812899982833187e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.870200018558535e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.7900000026857015e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "find",
              "complexity": 13,
              "line_start": 1,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.251900029179524e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.172899980403599e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "f",
              "complexity": 8,
              "line_start": 3,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.11070002175984e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.077599987795111e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.0205999994213926e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.4162999984109774e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 3.818200002569938e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.153800000494812e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.702799990103813e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.663700039804098e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 3.6518999877444e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1190_B",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.421000009344425e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.099399999788147e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010516899965296034
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "shuntsu",
              "complexity": 1,
              "line_start": 5,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.300599984067958e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "ism",
              "complexity": 1,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "isk",
              "complexity": 5,
              "line_start": 4,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00019017899967366247
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.233599990286166e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011082900027759024
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.36700001450663e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.672499987165793e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001250860000254761
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010261399984301534
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 8,
              "line_start": 18,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.410700022272067e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013939299969933927
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00015901000006124377
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00012822100006815162
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 42,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002638380001371843
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010288399971614126
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.173799991098349e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "iskoutsu",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "isshuntsu",
              "complexity": 1,
              "line_start": 4,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011120999988634139
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_B",
      "tags": "brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.253400003217394e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.2428999879339244e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.232700025066151e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 8.434899973508436e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 12,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.473100004062871e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.930099971214077e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "z",
              "complexity": 1,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.148699983692495e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "gns",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.978299986963975e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.827799981896533e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 45,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 0.00010341500001231907
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.02530001035484e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 8.616200011601904e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.860000030428637e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.910200004815124e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "resh",
              "complexity": 6,
              "line_start": 10,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.955200003882055e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 5.478299999595038e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "main",
              "complexity": 24,
              "line_start": 1,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 9.221400023307069e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 8.138300017890288e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 4.528499994194135e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 7.540199976574513e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1191_D",
      "tags": "games",
      "tool": "complexipy",
      "execution_time": 6.56040001558722e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 3.10190002892341e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 3.0476999654638348e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.343400001336704e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 5.626600022878847e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.7021000278182328e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ADIYWoodenLadder::solve",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 3.673900027933996e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.3905000034574186e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.3333999706665054e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.9816999813192524e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 8.140399995681946e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.3995999981707428e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.6089999917312525e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.3285000022733584e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.9205999706173316e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "getdict",
              "complexity": 11,
              "line_start": 7,
              "line_end": 22
            },
            {
              "name": "cdiv",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 6.704700035697897e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 2.782299998216331e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "fastio",
              "complexity": 0,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 3.9724999624013435e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.619099975869176e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_A",
      "tags": "greedy,math,sortings",
      "tool": "complexipy",
      "execution_time": 1.3334999948710902e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.751200008788146e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 3.2651999845256796e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 4.409300026964047e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.2994000119069824e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_B",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 2.7912999939871952e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "getN",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.6610000077198492e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.0840000161115313e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.140800001550815e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "main",
              "complexity": 2,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 3.661900018414599e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.0419000065885484e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.2222000097826822e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.641100016058772e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.6060000234574545e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.1870999717066297e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.8554999769548886e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.454699986425112e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.785299966490129e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.5729999631730607e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.578900037202402e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.633100009712507e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 1.366500009680749e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.638000023580389e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 2.728200024648686e-05
    },
    {
      "true_complexity": "nlogn",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_C",
      "tags": "greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.409300026964047e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 6,
              "line_end": 9
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 15,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.349999966914766e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.999700018335716e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.411300005813246e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.5647000004246365e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0837999929644866e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "C1",
              "complexity": 11,
              "line_start": 2,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.308999971020967e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 60,
              "line_end": 69
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 70,
              "line_end": 83
            },
            {
              "name": "primefactors",
              "complexity": 5,
              "line_start": 84,
              "line_end": 95
            },
            {
              "name": "factors",
              "complexity": 3,
              "line_start": 96,
              "line_end": 104
            },
            {
              "name": "NcR",
              "complexity": 4,
              "line_start": 105,
              "line_end": 124
            },
            {
              "name": "Log2",
              "complexity": 1,
              "line_start": 125,
              "line_end": 130
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 131,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0003928410001208249
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.848200023843674e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.022700002475176e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.0516999888495775e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.2421000014437595e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.61389998033701e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.4004000099230325e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3134000002755783e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.6808999993809266e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.269199987698812e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0908_C",
      "tags": "brute force,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0467999749816954e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "E1",
              "complexity": 11,
              "line_start": 3,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 7.00929999766231e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.796799971198197e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 21,
              "line_end": 33
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 50,
              "line_end": 67
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 77,
              "line_end": 87
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 89,
              "line_end": 103
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0003171879998262739
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 21,
              "line_end": 33
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 50,
              "line_end": 67
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 77,
              "line_end": 87
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 89,
              "line_end": 103
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0003146230001220829
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 8,
              "line_end": 20
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 23,
              "line_end": 26
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 37,
              "line_end": 54
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 56,
              "line_end": 57
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 59,
              "line_end": 62
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 64,
              "line_end": 74
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 76,
              "line_end": 90
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0002786749996630533
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 33,
              "line_end": 50
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 55,
              "line_end": 58
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 60,
              "line_end": 70
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 72,
              "line_end": 86
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0002835840000443568
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "Extended_Euclid",
              "complexity": 4,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "MOD::__init__",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "MOD::Pow",
              "complexity": 2,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "MOD::Build_Fact",
              "complexity": 7,
              "line_start": 33,
              "line_end": 50
            },
            {
              "name": "MOD::Fact",
              "complexity": 0,
              "line_start": 52,
              "line_end": 53
            },
            {
              "name": "MOD::Fact_Inv",
              "complexity": 1,
              "line_start": 55,
              "line_end": 58
            },
            {
              "name": "MOD::Comb",
              "complexity": 3,
              "line_start": 60,
              "line_end": 70
            },
            {
              "name": "Bell_Numbers",
              "complexity": 7,
              "line_start": 72,
              "line_end": 86
            }
          ]
        }
      },
      "problem": "0908_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00026862599997912184
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0908_G",
      "tags": "dp,math",
      "tool": "complexipy",
      "execution_time": 8.537100029570865e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0001003490001494356
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00010199199959970429
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "summ",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.234000016367645e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.41150000874768e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 89,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 89,
          "functions": [
            {
              "name": "pi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pl",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ti",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ts",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            },
            {
              "name": "fast_mod_exp",
              "complexity": 3,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "inverseMod",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "ncr",
              "complexity": 3,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "D",
              "complexity": 73,
              "line_start": 46,
              "line_end": 82
            },
            {
              "name": "C",
              "complexity": 9,
              "line_start": 84,
              "line_end": 107
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00036190199989505345
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.0072999986005016e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 262
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0009826629998315184
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "prefix_sums",
              "complexity": 1,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "find_ans",
              "complexity": 10,
              "line_start": 20,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.916699991663336e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.1088000014278805e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.6761000299302395e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "cal_pref",
              "complexity": 1,
              "line_start": 22,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 8.019100005185464e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "cal_pref",
              "complexity": 1,
              "line_start": 16,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.574400003955816e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.130399990273872e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.903200008106069e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.455199991250993e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.165899963481934e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "it",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 12,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.681600007141242e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.7211000087845605e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 2.099899984386866e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.915199972150731e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.7218999952747254e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "add",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00010910600030911155
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "add",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00010415599990665214
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 3.135899987682933e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0909_C",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 1.9797000277321786e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "fenwick::__init__",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "fenwick::to_sum",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "fenwick::add",
              "complexity": 1,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "fenwick::get",
              "complexity": 0,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 8.921800008465652e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inv_cnt",
              "complexity": 6,
              "line_start": 57,
              "line_end": 70
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 74,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00020704999997178675
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.908300004695775e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 300,
        "functions_count": 56,
        "raw_output": {
          "file_complexity": 300,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 331
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 333,
              "line_end": 341
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 344,
              "line_end": 351
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 354,
              "line_end": 359
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 361,
              "line_end": 373
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 375,
              "line_end": 384
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 386,
              "line_end": 395
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 398,
              "line_end": 411
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 413,
              "line_end": 416
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 425,
              "line_end": 426
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 428,
              "line_end": 444
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 446,
              "line_end": 470
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 472,
              "line_end": 496
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 501,
              "line_end": 502
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 504,
              "line_end": 510
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 512,
              "line_end": 519
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 521,
              "line_end": 528
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 530,
              "line_end": 539
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 541,
              "line_end": 550
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 552,
              "line_end": 568
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 570,
              "line_end": 581
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 583,
              "line_end": 591
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 2,
              "line_start": 594,
              "line_end": 603
            },
            {
              "name": "SegmentTree::update",
              "complexity": 1,
              "line_start": 605,
              "line_end": 610
            },
            {
              "name": "SegmentTree::query",
              "complexity": 5,
              "line_start": 612,
              "line_end": 625
            },
            {
              "name": "SegmentTree::bisect_l",
              "complexity": 28,
              "line_start": 627,
              "line_end": 660
            },
            {
              "name": "MinCostFlow::__init__",
              "complexity": 0,
              "line_start": 666,
              "line_end": 668
            },
            {
              "name": "MinCostFlow::add_edge",
              "complexity": 1,
              "line_start": 670,
              "line_end": 674
            },
            {
              "name": "MinCostFlow::flow",
              "complexity": 22,
              "line_start": 676,
              "line_end": 722
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.004567983000015374
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.041499980507069e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 7.420000019919826e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 146,
        "functions_count": 60,
        "raw_output": {
          "file_complexity": 146,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            },
            {
              "name": "TrieNode::__init__",
              "complexity": 0,
              "line_start": 557,
              "line_end": 559
            },
            {
              "name": "Trie::__init__",
              "complexity": 0,
              "line_start": 561,
              "line_end": 562
            },
            {
              "name": "Trie::getNode",
              "complexity": 0,
              "line_start": 563,
              "line_end": 564
            },
            {
              "name": "Trie::_charToIndex",
              "complexity": 0,
              "line_start": 565,
              "line_end": 566
            },
            {
              "name": "Trie::insert",
              "complexity": 4,
              "line_start": 567,
              "line_end": 575
            },
            {
              "name": "Trie::search",
              "complexity": 5,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 587,
              "line_end": 591
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 0,
              "line_start": 593,
              "line_end": 594
            },
            {
              "name": "BinaryTrie::insert",
              "complexity": 14,
              "line_start": 595,
              "line_end": 609
            },
            {
              "name": "BinaryTrie::query",
              "complexity": 12,
              "line_start": 610,
              "line_end": 625
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0037844159996893723
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.3602000005193986e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 72,
        "functions_count": 23,
        "raw_output": {
          "file_complexity": 72,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 86,
              "line_end": 97
            },
            {
              "name": "primeFactorsCount",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 112,
              "line_end": 121
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 124,
              "line_end": 135
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 138,
              "line_end": 146
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 149,
              "line_end": 159
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 162,
              "line_end": 171
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 174,
              "line_end": 179
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 182,
              "line_end": 187
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 190,
              "line_end": 203
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 206,
              "line_end": 212
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 215,
              "line_end": 219
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 222,
              "line_end": 226
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 228,
              "line_end": 233
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.0006940990001567116
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "pro",
              "complexity": 9,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.000400005883421e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.24990000485559e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.501600031086127e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.308199984530802e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 2.648999998200452e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.000400005883421e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.1488999866269296e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "getsum",
              "complexity": 1,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "updatebit",
              "complexity": 1,
              "line_start": 10,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 6.0633999964920804e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.896199970971793e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.809099982594489e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 12,
              "line_start": 1,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 4.4392999825504376e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.817000010210904e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "update",
              "complexity": 3,
              "line_start": 5,
              "line_end": 15
            },
            {
              "name": "get",
              "complexity": 4,
              "line_start": 16,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 8.488000003126217e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "update",
              "complexity": 3,
              "line_start": 5,
              "line_end": 15
            },
            {
              "name": "get",
              "complexity": 4,
              "line_start": 16,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 7.888900017860578e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "arr_inp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "nCr",
              "complexity": 1,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 5.1947999963886105e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 3.0406999940169044e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "0911_D",
      "tags": "brute force,math",
      "tool": "complexipy",
      "execution_time": 0.00016661400013617822
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 1.6511000012542354e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 5.258900000626454e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "cmpr",
              "complexity": 5,
              "line_start": 11,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011487599977044738
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "GetVal",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "GetNot",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "Dijkstra",
              "complexity": 44,
              "line_start": 23,
              "line_end": 91
            }
          ]
        }
      },
      "problem": "0913_E",
      "tags": "bitmasks,dp,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003126900001007016
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 28,
              "line_end": 30
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 41,
              "line_end": 42
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 48,
              "line_end": 50
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 52,
              "line_end": 56
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 63,
              "line_end": 89
            },
            {
              "name": "CycleFindDirected::__init__",
              "complexity": 0,
              "line_start": 124,
              "line_end": 127
            },
            {
              "name": "CycleFindDirected::add_edge",
              "complexity": 0,
              "line_start": 129,
              "line_end": 133
            },
            {
              "name": "CycleFindDirected::dfs",
              "complexity": 6,
              "line_start": 135,
              "line_end": 151
            },
            {
              "name": "CycleFindDirected::find",
              "complexity": 12,
              "line_start": 153,
              "line_end": 175
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 183,
              "line_end": 226
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00039878200004750397
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "prepare",
              "complexity": 6,
              "line_start": 4,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 9.951699985322193e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "my_solve",
              "complexity": 7,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "get_cyclic",
              "complexity": 8,
              "line_start": 14,
              "line_end": 29
            },
            {
              "name": "do_dfs_bool",
              "complexity": 7,
              "line_start": 31,
              "line_end": 37
            },
            {
              "name": "dfs_bool",
              "complexity": 8,
              "line_start": 40,
              "line_end": 50
            },
            {
              "name": "do_dfs",
              "complexity": 8,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 63,
              "line_end": 77
            },
            {
              "name": "test",
              "complexity": 5,
              "line_start": 79,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00023544399982711184
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "get_input",
              "complexity": 1,
              "line_start": 6,
              "line_end": 13
            },
            {
              "name": "dfs",
              "complexity": 6,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "dfs_visit",
              "complexity": 15,
              "line_start": 29,
              "line_end": 55
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00013405299978330731
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "detect_cycle",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "dfs_visit",
              "complexity": 7,
              "line_start": 11,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 0.00010016900023401831
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "detect_cycle",
              "complexity": 7,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "dfs_visit",
              "complexity": 7,
              "line_start": 11,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0915_D",
      "tags": "dfs and similar,graphs",
      "tool": "complexipy",
      "execution_time": 9.230400019077933e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "transpose",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "reverse_row",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "reverse_column",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "rotate_90",
              "complexity": 0,
              "line_start": 25,
              "line_end": 27
            },
            {
              "name": "rotate_180",
              "complexity": 0,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "rotate_270",
              "complexity": 0,
              "line_start": 32,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00012526599994089338
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "Matrix::__init__",
              "complexity": 6,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "Matrix::__add__",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 6,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "Matrix::dot_mul",
              "complexity": 3,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "Matrix::trace",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 62,
              "line_end": 70
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 72,
              "line_end": 79
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 81,
              "line_end": 88
            },
            {
              "name": "Matrix::mat_pow",
              "complexity": 3,
              "line_start": 90,
              "line_end": 101
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 108,
              "line_end": 112
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 114,
              "line_end": 122
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 124,
              "line_end": 131
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 133,
              "line_end": 136
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 140,
              "line_end": 146
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.000456079999821668
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "Matrix::__init__",
              "complexity": 6,
              "line_start": 15,
              "line_end": 25
            },
            {
              "name": "Matrix::__add__",
              "complexity": 3,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 6,
              "line_start": 36,
              "line_end": 44
            },
            {
              "name": "Matrix::dot_mul",
              "complexity": 3,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "Matrix::trace",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 61,
              "line_end": 69
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 71,
              "line_end": 78
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 80,
              "line_end": 87
            },
            {
              "name": "Matrix::mat_pow",
              "complexity": 3,
              "line_start": 89,
              "line_end": 100
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 107,
              "line_end": 111
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 113,
              "line_end": 121
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 123,
              "line_end": 130
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 132,
              "line_end": 135
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 139,
              "line_end": 145
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00043376799976613256
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "Matrix::__init__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "Matrix::__add__",
              "complexity": 3,
              "line_start": 23,
              "line_end": 30
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 6,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "Matrix::dot_mul",
              "complexity": 3,
              "line_start": 42,
              "line_end": 48
            },
            {
              "name": "Matrix::trace",
              "complexity": 1,
              "line_start": 50,
              "line_end": 55
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 57,
              "line_end": 65
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 67,
              "line_end": 74
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 76,
              "line_end": 83
            },
            {
              "name": "Matrix::mat_pow",
              "complexity": 3,
              "line_start": 85,
              "line_end": 96
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 103,
              "line_end": 107
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 109,
              "line_end": 117
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 119,
              "line_end": 126
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 128,
              "line_end": 131
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 135,
              "line_end": 141
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00041328999986944837
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "Matrix::__init__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 42,
              "line_end": 49
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 57,
              "line_end": 61
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 63,
              "line_end": 71
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 82,
              "line_end": 85
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 89,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002816820001498854
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 6,
              "line_end": 12
            },
            {
              "name": "Matrix::__init__",
              "complexity": 1,
              "line_start": 16,
              "line_end": 22
            },
            {
              "name": "Matrix::rotate",
              "complexity": 3,
              "line_start": 24,
              "line_end": 32
            },
            {
              "name": "Matrix::flipv",
              "complexity": 3,
              "line_start": 34,
              "line_end": 41
            },
            {
              "name": "Matrix::fliph",
              "complexity": 3,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 57,
              "line_end": 61
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 63,
              "line_end": 71
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 82,
              "line_end": 85
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 89,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00027853499977936735
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "rotate90",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "fliphor",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "flipver",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "eq",
              "complexity": 6,
              "line_start": 15,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.060999991561403e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.080700000486104e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "rotate",
              "complexity": 3,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "v_mirror",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "h_mirror",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 18,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.606500008070725e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 75,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 75,
          "functions": [
            {
              "name": "rotate",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "flip",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 72,
              "line_start": 17,
              "line_end": 122
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00035923799987358507
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "reverse_array",
              "complexity": 1,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "rotate",
              "complexity": 1,
              "line_start": 14,
              "line_end": 20
            },
            {
              "name": "make_list",
              "complexity": 1,
              "line_start": 22,
              "line_end": 27
            },
            {
              "name": "add_rotations",
              "complexity": 1,
              "line_start": 29,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00013436400013233651
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "rotate_90",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "flip",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "compare_matrices",
              "complexity": 6,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "wrap",
              "complexity": 8,
              "line_start": 22,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014138599999569124
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "copy",
              "complexity": 3,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 37,
              "line_end": 44
            },
            {
              "name": "vert",
              "complexity": 1,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "gor",
              "complexity": 3,
              "line_start": 52,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00020417499990799115
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "flipH",
              "complexity": 3,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "flipV",
              "complexity": 3,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "rotate90",
              "complexity": 0,
              "line_start": 16,
              "line_end": 19
            },
            {
              "name": "check",
              "complexity": 6,
              "line_start": 21,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010816399981194991
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.845000032422831e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "rotate",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            },
            {
              "name": "flip_v",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "flip_h",
              "complexity": 1,
              "line_start": 14,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.87969999894267e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.606400029340875e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "rotate",
              "complexity": 4,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "flipV",
              "complexity": 1,
              "line_start": 15,
              "line_end": 21
            },
            {
              "name": "flipH",
              "complexity": 2,
              "line_start": 23,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00012129900005675154
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.21869999122282e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.849099968851078e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "rotate_90",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "flip",
              "complexity": 3,
              "line_start": 9,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.897000002936693e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.646599993269774e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "check",
              "complexity": 21,
              "line_start": 9,
              "line_end": 35
            },
            {
              "name": "rotate",
              "complexity": 6,
              "line_start": 38,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.697199993752292e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "vFlip",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "hFlip",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "rotate",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "check",
              "complexity": 9,
              "line_start": 14,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.165699985809624e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 100,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 100,
          "functions": []
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002530669999032398
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "h",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "r",
              "complexity": 3,
              "line_start": 14,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.581399975402746e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0958_A1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.812900008095312e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0297999981266912e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.306400028828648e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.423699995939387e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.2062999758200021e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 31,
              "line_end": 47
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 62
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 71,
              "line_end": 73
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00020515599999271217
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.4105999727908056e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.012799996009562e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3775999832432717e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 229,
        "functions_count": 49,
        "raw_output": {
          "file_complexity": 229,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 330
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 332,
              "line_end": 337
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 340,
              "line_end": 344
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 352
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 354,
              "line_end": 366
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 368,
              "line_end": 377
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 379,
              "line_end": 388
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 391,
              "line_end": 404
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 406,
              "line_end": 409
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 418,
              "line_end": 419
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 421,
              "line_end": 437
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 439,
              "line_end": 463
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 465,
              "line_end": 489
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 494,
              "line_end": 495
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 497,
              "line_end": 503
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 505,
              "line_end": 512
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 523,
              "line_end": 532
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 534,
              "line_end": 543
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 545,
              "line_end": 561
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 563,
              "line_end": 574
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 576,
              "line_end": 584
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.003104674000041996
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.345900010273908e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.7924000076163793e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3185000170778949e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.6497999644780066e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.2220999855780974e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.289199958089739e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.541900019219611e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.653099980103434e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0961_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.2333000086073298e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.139800012126216e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.4845000047644135e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "calc1",
              "complexity": 11,
              "line_start": 29,
              "line_end": 38
            },
            {
              "name": "calc2",
              "complexity": 11,
              "line_start": 40,
              "line_end": 49
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 50,
              "line_end": 88
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00017204499999934342
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001326000001427019
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 250,
        "functions_count": 49,
        "raw_output": {
          "file_complexity": 250,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 61,
              "line_end": 73
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 74,
              "line_end": 101
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 102,
              "line_end": 128
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 130,
              "line_end": 140
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 142,
              "line_end": 153
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 155,
              "line_end": 169
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 171,
              "line_end": 185
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 188,
              "line_end": 191
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 193,
              "line_end": 201
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 203,
              "line_end": 215
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 217,
              "line_end": 218
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 224,
              "line_end": 229
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 231,
              "line_end": 240
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 242,
              "line_end": 260
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 271
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 273,
              "line_end": 275
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 277,
              "line_end": 279
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 281,
              "line_end": 283
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 285,
              "line_end": 301
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 305,
              "line_end": 325
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 328,
              "line_end": 330
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 332,
              "line_end": 337
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 340,
              "line_end": 344
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 347,
              "line_end": 352
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 354,
              "line_end": 366
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 368,
              "line_end": 377
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 379,
              "line_end": 388
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 391,
              "line_end": 404
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 406,
              "line_end": 409
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 418,
              "line_end": 419
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 421,
              "line_end": 437
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 439,
              "line_end": 463
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 465,
              "line_end": 489
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 494,
              "line_end": 495
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 497,
              "line_end": 503
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 505,
              "line_end": 512
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 523,
              "line_end": 532
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 534,
              "line_end": 543
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 545,
              "line_end": 561
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 563,
              "line_end": 574
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 576,
              "line_end": 584
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0032792130000416364
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.69959999868297e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.799600027487031e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.298499981014174e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.512199979624711e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "get_original_pieces",
              "complexity": 0,
              "line_start": 58,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0002513740000722464
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.865000002813758e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "check_board",
              "complexity": 6,
              "line_start": 14,
              "line_end": 21
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 24,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.753599993520766e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "nSquaresToRecolorIn",
              "complexity": 0,
              "line_start": 21,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 9.968799986381782e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "nSquaresToRecolorIn",
              "complexity": 0,
              "line_start": 21,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001031339998007752
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "nSquaresToRecolorIn",
              "complexity": 0,
              "line_start": 21,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 5.954200014457456e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 3.090800009886152e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 6.664600005024113e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "doxor",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.46710002204054e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 60,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013168900022719754
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 8.76949998200871e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "f",
              "complexity": 7,
              "line_start": 3,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 4.627700036508031e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "f",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 2.9426000310195377e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 16,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0961_C",
      "tags": "bitmasks,brute force,implementation",
      "tool": "complexipy",
      "execution_time": 7.770699994580355e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 73,
        "functions_count": 18,
        "raw_output": {
          "file_complexity": 73,
          "functions": [
            {
              "name": "isPrime",
              "complexity": 5,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 27,
              "line_end": 38
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 39,
              "line_end": 49
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 59,
              "line_end": 64
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 67,
              "line_end": 71
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 76,
              "line_end": 77
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 78,
              "line_end": 79
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 80,
              "line_end": 80
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 82,
              "line_end": 82
            },
            {
              "name": "power_set",
              "complexity": 12,
              "line_start": 83,
              "line_end": 102
            },
            {
              "name": "fastPlrintNextLines",
              "complexity": 0,
              "line_start": 103,
              "line_end": 109
            },
            {
              "name": "sortByFirstAndSecond",
              "complexity": 0,
              "line_start": 111,
              "line_end": 114
            },
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 125,
              "line_end": 170
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 0.00048581600003672065
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "solution",
              "complexity": 21,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.54440000289469e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.105700029162108e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.7849999646132346e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.010500015283469e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "rt",
              "complexity": 1,
              "line_start": 6,
              "line_end": 9
            },
            {
              "name": "u",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.007399977330351e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 11,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 16,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 8.660299999974086e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 2,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 9.018000037031015e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 6,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 8.61419998727797e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.894199992122594e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.6226999984355643e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.8321000122086843e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.340999971143901e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 8.14939999145281e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.946100029381341e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.924199967921595e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.995200010351255e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 7.590300037918496e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.0164000185759505e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 3.960499998356681e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 6.017399982738425e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 9.317599960922962e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 4.537599988907459e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 5.4863000059413025e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "exists",
              "complexity": 6,
              "line_start": 8,
              "line_end": 15
            },
            {
              "name": "exists2",
              "complexity": 6,
              "line_start": 17,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0980_C",
      "tags": "games,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001349340000160737
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "pi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "pl",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "ti",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ts",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 19,
              "line_end": 24
            },
            {
              "name": "fast_mod_exp",
              "complexity": 3,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "inverseMod",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 38,
              "line_end": 40
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 42,
              "line_end": 43
            },
            {
              "name": "D",
              "complexity": 12,
              "line_start": 46,
              "line_end": 66
            },
            {
              "name": "B",
              "complexity": 13,
              "line_start": 68,
              "line_end": 104
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00030403399978240486
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.725699995513423e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.4042000101617305e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 4.887200020675664e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.047400029274286e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.90900001245609e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.25080001555034e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.1386999984970316e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "SG::__init__",
              "complexity": 5,
              "line_start": 11,
              "line_end": 24
            },
            {
              "name": "SG::_update",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "SG::update",
              "complexity": 1,
              "line_start": 27,
              "line_end": 35
            },
            {
              "name": "SG::get",
              "complexity": 0,
              "line_start": 36,
              "line_end": 38
            },
            {
              "name": "SG::check",
              "complexity": 0,
              "line_start": 39,
              "line_end": 40
            },
            {
              "name": "SG::query",
              "complexity": 5,
              "line_start": 41,
              "line_end": 58
            },
            {
              "name": "SG::query_all",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "SG::max_right",
              "complexity": 15,
              "line_start": 64,
              "line_end": 88
            },
            {
              "name": "SG::min_left",
              "complexity": 16,
              "line_start": 89,
              "line_end": 112
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 123,
              "line_end": 124
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0007290150001608708
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 7,
              "line_start": 4,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00011288299992884276
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.124500007194001e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.29679998382926e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.824800013622735e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00029932500001450535
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 109,
        "functions_count": 43,
        "raw_output": {
          "file_complexity": 109,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 344,
              "line_end": 348
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 350,
              "line_end": 364
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 366,
              "line_end": 380
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 382,
              "line_end": 397
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 401,
              "line_end": 403
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 405,
              "line_end": 410
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 414,
              "line_end": 421
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 425,
              "line_end": 430
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 434,
              "line_end": 438
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 442,
              "line_end": 461
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 465,
              "line_end": 470
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 471,
              "line_end": 473
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 475,
              "line_end": 497
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.004342668999925081
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 8.666399980938877e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 5.60659996153845e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 8.420900030614575e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 9.377699961987673e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0983_B",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.35889998395578e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.238700007088482e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.4235999717348022e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "fun",
              "complexity": 9,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.077300026343437e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.601499969998258e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "My_stack::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "My_stack::my_push",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "My_stack::my_pop",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "My_stack::my_peak",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "My_stack::my_contains",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "My_stack::my_show_all",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "My_stack::isEmpty",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "decimalToBinary",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "isPrime",
              "complexity": 8,
              "line_start": 31,
              "line_end": 47
            },
            {
              "name": "get_prime_factors",
              "complexity": 5,
              "line_start": 49,
              "line_end": 62
            },
            {
              "name": "get_frequency",
              "complexity": 3,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "Log2",
              "complexity": 0,
              "line_start": 71,
              "line_end": 73
            },
            {
              "name": "isPowerOfTwo",
              "complexity": 0,
              "line_start": 75,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0003670619998956681
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.967199988139328e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "inpl",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "inpl_1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "inps",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "inpsl",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "err",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011859300002470263
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.11750001553446e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.664800007958547e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.878300003634649e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 6,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.2117999985057395e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.5446999845589744e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.5316999654023675e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6972000139503507e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.607799999372219e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.4873999740957515e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.262499997930718e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.346299990880652e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 1,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.48950004283688e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0985_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.4775999918347225e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 6.162599993331241e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 5.3311000101530226e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 5.5484999847976724e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.404300034366315e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 7.18050000614312e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.9804999687476084e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.954499970859615e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.658899959191331e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 7.698499985053786e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.3181999899388757e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.619799963416881e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 17,
              "line_end": 81
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 90
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 92,
              "line_end": 100
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 102,
              "line_end": 109
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 114,
              "line_end": 117
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 125,
              "line_end": 128
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 132,
              "line_end": 135
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 0.00035082200020042364
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "SegTree::__init__",
              "complexity": 2,
              "line_start": 2,
              "line_end": 13
            },
            {
              "name": "SegTree::update",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            },
            {
              "name": "SegTree::query",
              "complexity": 6,
              "line_start": 22,
              "line_end": 39
            },
            {
              "name": "SegTree::__str__",
              "complexity": 0,
              "line_start": 41,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 0.00019283399979030946
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "array_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "vary",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "makedict",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001032050004141638
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 6.611500020881067e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 4.092700010005501e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.862300036416855e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.390399979252834e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.4314999993512174e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 5.2208999932190636e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0987_C",
      "tags": "brute force,dp,implementation",
      "tool": "complexipy",
      "execution_time": 3.438500016272883e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.508299975394038e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "main",
              "complexity": 30,
              "line_start": 6,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010131099998034188
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.18929999897955e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.823700025255675e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "get_sign_1",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "get_signs_2",
              "complexity": 14,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00016128400011439226
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.278500010623247e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 50,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013582600013251067
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 115,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 115,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "readlist",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "readmap",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.000320313999964128
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.984099991313997e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.942400007872493e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "getTransIntList",
              "complexity": 4,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.997799998018309e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "i_ints",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "calc",
              "complexity": 7,
              "line_start": 7,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.7938000029244e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 4.319099980421015e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.1149000278674066e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.880699988367269e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 5.685699989044224e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.710000009959913e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.1941000088409055e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 55,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011831300025733071
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "check",
              "complexity": 16,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 0.00013257999989946256
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 9.361699994769879e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.7459999930433696e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.45050002579228e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 3.2310999813489616e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.227699986993684e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0990_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.663499991394929e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.662999986569048e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.158999996026978e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9677000182127813e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4147000001685228e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4297000234364532e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.5869999970163917e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 18,
              "line_end": 28
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 29,
              "line_end": 32
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 33,
              "line_end": 38
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 40,
              "line_end": 51
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001529189999018854
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "minput",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "listinput",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.0095999793265946e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.836399997046101e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.1100000139995245e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.547900001241942e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4467000255535822e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.212100000382634e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.4086000192037318e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.3855999895895366e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.406599994879798e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.0819999917875975e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.145000007658382e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.383499986535753e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0994_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.180200024464284e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.9745000322000124e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6610000077198492e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.5078000160428928e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7893999938678462e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.541800040489761e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.308200030005537e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 15,
              "line_end": 27
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 42,
              "line_end": 50
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00017831600007411907
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.833299979305593e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.481300033556181e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.777300030880724e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.7230000089039095e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.867500031949021e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.3315000160218915e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.4307000128610525e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7312999716523336e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7533000118419295e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.60499998855812e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.073799962294288e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 3,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0995_B",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.787199991871603e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "it",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.025700016223709e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "helper",
              "complexity": 3,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.393399993001367e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 5.2739000238943845e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.188099981343839e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4496000150975306e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "array_int",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "vary",
              "complexity": 2,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "makedict",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.313899984888849e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.758100001505227e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0002164379998248478
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.584700016290299e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3595000129716936e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5147000087599736e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.666099999260041e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.0917999993107514e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.2822999653726583e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1003_C",
      "tags": "brute force,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.6168999738729326e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012597800014191307
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "pprint",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "solve",
              "complexity": 22,
              "line_start": 6,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012191999985589064
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 5,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00015735700026198174
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 8.01709998086153e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.369900004050578e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "main",
              "complexity": 45,
              "line_start": 1,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.0001571669999975711
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 1,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.669500018891995e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.256599974425626e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00014836999980616383
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 4,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 9.333599973615492e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "bad",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            },
            {
              "name": "make_branch",
              "complexity": 2,
              "line_start": 8,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 17,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00011709099999279715
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 29,
              "line_start": 1,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00013112700025885715
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "main",
              "complexity": 32,
              "line_start": 1,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012795199972970295
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "dfs",
              "complexity": 7,
              "line_start": 20,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.243700019898824e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.581299996672897e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 7.116400001905276e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 6.536399996548425e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "construct_tree",
              "complexity": 25,
              "line_start": 2,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1003_E",
      "tags": "constructive algorithms,graphs",
      "tool": "complexipy",
      "execution_time": 9.640200005378574e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "get_list",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "get_string",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011011800006599515
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "swap",
              "complexity": 0,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.610300028522033e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 8,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.300699962797808e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.023299965818296e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.986400017514825e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.487400039783097e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.87009999435395e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.8520999825996114e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.2440000015631085e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.508500023803208e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.363399991940241e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.05569999202271e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "spf",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 27,
              "line_end": 27
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 29,
              "line_end": 31
            },
            {
              "name": "pmat2",
              "complexity": 3,
              "line_start": 32,
              "line_end": 36
            },
            {
              "name": "iseven",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "seive",
              "complexity": 6,
              "line_start": 40,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001656220001677866
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.259999968780903e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1015_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.3322000035695964e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00017654300017966307
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 106,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 106,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 257
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 259,
              "line_end": 271
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 273,
              "line_end": 285
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 324,
              "line_end": 330
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0016978720000224712
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 67,
          "functions": [
            {
              "name": "solve",
              "complexity": 66,
              "line_start": 7,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003655189998426067
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 53,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002470159997756127
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00021804100015287986
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 46,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002657710001585656
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 39,
              "line_start": 1,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00022550500034412835
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 82,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 82,
          "functions": [
            {
              "name": "minp",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "mints",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 82,
              "line_start": 13,
              "line_end": 107
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003574840002329438
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "main",
              "complexity": 39,
              "line_start": 1,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001139149999289657
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016248600013568648
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "build_grid",
              "complexity": 5,
              "line_start": 21,
              "line_end": 36
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 44,
              "line_end": 51
            },
            {
              "name": "check2",
              "complexity": 7,
              "line_start": 53,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000375297000118735
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 83,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 83,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000223702000312187
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 83,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 83,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00021907299969825544
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00015279799981726683
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 98,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 98,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 69,
              "line_end": 79
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 87,
              "line_end": 93
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 96
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 98,
              "line_end": 115
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 117,
              "line_end": 118
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 123,
              "line_end": 127
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 129,
              "line_end": 143
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 145,
              "line_end": 159
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 161,
              "line_end": 176
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 180,
              "line_end": 182
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 184,
              "line_end": 189
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 193,
              "line_end": 200
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 204,
              "line_end": 209
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 213,
              "line_end": 217
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 221,
              "line_end": 240
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 244,
              "line_end": 249
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 250,
              "line_end": 252
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 254,
              "line_end": 276
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 315,
              "line_end": 321
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0015829950002625992
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013397300017459202
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 49,
          "functions": [
            {
              "name": "main",
              "complexity": 48,
              "line_start": 1,
              "line_end": 91
            }
          ]
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002094550000037998
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 90,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001975119998860464
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 90,
          "functions": []
        }
      },
      "problem": "1015_E2",
      "tags": "binary search,dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000211539000247285
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.124599985923851e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.01740000800055e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00011989600034212344
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.281900004978525e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.86929996238905e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.3764000161463628e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6891999621293508e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.099800005657016e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.182000000379048e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.442599998175865e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "is_center",
              "complexity": 21,
              "line_start": 6,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.237399990524864e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.6287000259326305e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.9145999885950005e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.491499976211344e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.412200016507995e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.2530999760638224e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.890100010219612e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.5374000112351496e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.776900025011855e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.112699980396428e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 2.6198999876214657e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.043500004831003e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.382399972906569e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 1.6542000139452284e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.902199998468859e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "lts",
              "complexity": 0,
              "line_start": 31,
              "line_end": 33
            },
            {
              "name": "stl",
              "complexity": 0,
              "line_start": 35,
              "line_end": 40
            },
            {
              "name": "sq",
              "complexity": 5,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 9,
              "line_start": 55,
              "line_end": 68
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 70,
              "line_end": 72
            },
            {
              "name": "ssinp",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "nninp",
              "complexity": 0,
              "line_start": 79,
              "line_end": 79
            },
            {
              "name": "llinp",
              "complexity": 0,
              "line_start": 81,
              "line_end": 81
            },
            {
              "name": "p",
              "complexity": 0,
              "line_start": 83,
              "line_end": 83
            },
            {
              "name": "p2",
              "complexity": 0,
              "line_start": 84,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1028_A",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0002862390001610038
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 8,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.5284000154642854e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.2381999770004768e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 8.061199969233712e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 6.575399993380415e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.7701999897544738e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 2,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.353099959393148e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.793199973893934e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.361300034361193e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "prefix_func",
              "complexity": 6,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 6.238800006030942e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "fn",
              "complexity": 4,
              "line_start": 7,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 6.977199973334791e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.324199971961207e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.728099980231491e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.9694999941275455e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.292200017313007e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.165799984752084e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.314300010970328e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.969399969922961e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 6.49729995529924e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 4.151800021645613e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.373399977135705e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 5.6707000112510286e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.6139000055991346e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 2.3653999960515648e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.53569998878811e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1029_A",
      "tags": "implementation,strings",
      "tool": "complexipy",
      "execution_time": 3.348299969729851e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.761499975662446e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.950400014218758e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.4674000037048245e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.871899995530839e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 2,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010697199968490168
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.223700004033162e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.87730001421005e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "read_a_num",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "read_a_str",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "check_ticket",
              "complexity": 16,
              "line_start": 18,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.215599998744437e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 7,
              "line_end": 35
            },
            {
              "name": "is_golden",
              "complexity": 4,
              "line_start": 37,
              "line_end": 50
            },
            {
              "name": "get_tests",
              "complexity": 1,
              "line_start": 52,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00013792000027024187
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 24,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017132299990407773
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "chk",
              "complexity": 11,
              "line_start": 4,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011386400001356378
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010001800001191441
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 1,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00013255999965622323
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.570400000782683e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.891899986134376e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "gcd",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "tobinary",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 12,
              "line_end": 17
            },
            {
              "name": "lowerBound",
              "complexity": 2,
              "line_start": 18,
              "line_end": 23
            },
            {
              "name": "upperBound",
              "complexity": 3,
              "line_start": 24,
              "line_end": 29
            },
            {
              "name": "primesInRange",
              "complexity": 9,
              "line_start": 30,
              "line_end": 42
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 43,
              "line_end": 54
            },
            {
              "name": "isPrime",
              "complexity": 4,
              "line_start": 55,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00019342399991728598
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.8612000025750604e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 58,
          "functions": []
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.872799960750854e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1030_C",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00029550699991887086
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 9.757399993759464e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 58,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0001594909999766969
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 57,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00012372299988783197
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 180,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 180,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0003274079999755486
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 61,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0001652320001994667
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.00012185000014142133
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1032_C",
      "tags": "constructive algorithms,dp",
      "tool": "complexipy",
      "execution_time": 0.0001502629997958138
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.659599992213771e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.046499973104801e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 9.887600026559085e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 6.669599997621845e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "can_win",
              "complexity": 11,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 9.13519997993717e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "can_win",
              "complexity": 7,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 8.64530002218089e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.580500010182732e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "findans",
              "complexity": 11,
              "line_start": 7,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 7.038300009298837e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 6.305900024017319e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 5.199799988986342e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.5226999898441136e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 4.0066000110527966e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.577699999368633e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 4.0456000078847865e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.637899999375804e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1033_C",
      "tags": "brute force,dp,games",
      "tool": "complexipy",
      "execution_time": 3.4795999908965314e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1037_D",
      "tags": "dfs and similar,graphs,shortest paths,trees",
      "tool": "complexipy",
      "execution_time": 4.3853000079252524e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.449299987958511e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010680200011847774
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.562400039911154e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 8.337700000993209e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "qwe",
              "complexity": 5,
              "line_start": 14,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.184500009316253e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.01830003890791e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.054499979451066e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.556299967996893e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.248000004736241e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.1497000185918296e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 5.0955999995494494e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.147400037865737e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.740899976241053e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.172499999796855e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "main",
              "complexity": 17,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.262700000865152e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00010458699989612796
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.733599977655103e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "main",
              "complexity": 35,
              "line_start": 4,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00011310300033073872
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 9.723299990582746e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "lr",
              "complexity": 9,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.059299969114363e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 8.538100018995465e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 6.96410002092307e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 7.664399981877068e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 1,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00014081500012252945
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "get_input_list",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 9.251400024368195e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 4.8271000196109526e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "run",
              "complexity": 31,
              "line_start": 13,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.0001056889996107202
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "find_gcd",
              "complexity": 1,
              "line_start": 16,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1054_C",
      "tags": "constructive algorithms,implementation",
      "tool": "complexipy",
      "execution_time": 0.00016401899983975454
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 7.785700017848285e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.00010556000006545219
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 6.503300028271042e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 4.07869997616217e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 6,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 7.927000024210429e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 4,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 1,
              "line_start": 16,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1056_D",
      "tags": "constructive algorithms,dfs and similar,dp,graphs,greedy,sortings,trees",
      "tool": "complexipy",
      "execution_time": 0.00010811399988597259
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001744890000736632
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "isValid",
              "complexity": 10,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "fill",
              "complexity": 7,
              "line_start": 9,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.743499984120717e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0001340019998679054
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "solve",
              "complexity": 30,
              "line_start": 4,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.295500012740376e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.084199998847907e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.450800007471116e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.39879999148252e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "dprint",
              "complexity": 1,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 19,
              "line_end": 61
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 64,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00015420099998664227
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011939499972868362
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "nexts",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "nextint",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "snexts",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "snextint",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "matrix",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00014673699979539379
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010708199988584965
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "check",
              "complexity": 3,
              "line_start": 9,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00015411000003950903
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.131399999911082e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "gene",
              "complexity": 1,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "judge",
              "complexity": 4,
              "line_start": 20,
              "line_end": 26
            },
            {
              "name": "dye",
              "complexity": 1,
              "line_start": 27,
              "line_end": 30
            },
            {
              "name": "check",
              "complexity": 3,
              "line_start": 31,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010410599998067482
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00012383400007820455
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.0004555389996312442
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "rint",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "writable",
              "complexity": 3,
              "line_start": 8,
              "line_end": 20
            },
            {
              "name": "fill_ink",
              "complexity": 0,
              "line_start": 22,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011876400003529852
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.876699985194136e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00012123800024710363
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "check",
              "complexity": 7,
              "line_start": 8,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00015793700003996491
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "color8",
              "complexity": 2,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00013977399976283778
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "transform",
              "complexity": 2,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "take_care",
              "complexity": 4,
              "line_start": 7,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010861500004466507
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "check",
              "complexity": 16,
              "line_start": 11,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.252699970194953e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "is_squad",
              "complexity": 2,
              "line_start": 6,
              "line_end": 10
            },
            {
              "name": "cv",
              "complexity": 9,
              "line_start": 12,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017886699970404152
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 67,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.116199998970842e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011203099984413711
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00010536899981161696
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "modInverse",
              "complexity": 3,
              "line_start": 13,
              "line_end": 29
            },
            {
              "name": "num",
              "complexity": 0,
              "line_start": 32,
              "line_end": 33
            },
            {
              "name": "nu",
              "complexity": 0,
              "line_start": 36,
              "line_end": 37
            },
            {
              "name": "find_gcd",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00019723200011867448
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "hash",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "sol",
              "complexity": 40,
              "line_start": 6,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1059_B",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00011354400021446054
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1062_D",
      "tags": "dfs and similar,graphs,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.399499999228283e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1073_B",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.050700024687103e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.042500015406404e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.00230000600277e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "next",
              "complexity": 1,
              "line_start": 6,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 5.220900038693799e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1075_B",
      "tags": "implementation,sortings",
      "tool": "complexipy",
      "execution_time": 6.0874999689986e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "getIntList",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "getUpper",
              "complexity": 3,
              "line_start": 36,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012333199993008748
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.104399992385879e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "max_splits",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1080_D",
      "tags": "constructive algorithms,implementation,math",
      "tool": "complexipy",
      "execution_time": 7.111400009307545e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 7.294700026250212e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.151400015776744e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 6.852900014564511e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1082_D",
      "tags": "constructive algorithms,graphs,implementation",
      "tool": "complexipy",
      "execution_time": 8.229500008383184e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "gen_points",
              "complexity": 0,
              "line_start": 7,
              "line_end": 15
            },
            {
              "name": "mark_points",
              "complexity": 6,
              "line_start": 26,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1086_A",
      "tags": "greedy,implementation",
      "tool": "complexipy",
      "execution_time": 8.893799986253725e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.2412999896914698e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1113_A",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 1.9917999907193007e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "stones_after",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9334999908314785e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1159_A",
      "tags": "implementation,math",
      "tool": "complexipy",
      "execution_time": 3.702000003613648e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 2.2371999875758775e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1159_D",
      "tags": "brute force,greedy,constructive algorithms,math,strings",
      "tool": "complexipy",
      "execution_time": 1.9036000139749376e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.0001551730001665419
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 55,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00018618100011735805
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.483400016397354e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.320199994050199e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 8,
              "line_end": 22
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 40,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 59,
              "line_end": 62
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 66,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00017473899970354978
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.894199992122594e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.573400014531217e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.2428999879339244e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.7108999751799274e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.3280999964044895e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.8953000259643886e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.6097999782214174e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.785300011964864e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 2.4065000161499484e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00012112800004615565
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 6.21969998064742e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.9514000238559674e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 5.05560001329286e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 3.0577999950764934e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 4.126800013182219e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00016394900012528524
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 0.00015841799995541805
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 8.680300015839748e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1179_B",
      "tags": "constructive algorithms",
      "tool": "complexipy",
      "execution_time": 7.97909997345414e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "countR",
              "complexity": 3,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "countB",
              "complexity": 3,
              "line_start": 9,
              "line_end": 14
            },
            {
              "name": "countG",
              "complexity": 3,
              "line_start": 16,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 9.49999998738349e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "givestringsk",
              "complexity": 3,
              "line_start": 1,
              "line_end": 9
            },
            {
              "name": "countdifferences",
              "complexity": 3,
              "line_start": 10,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.656700022882433e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.797699981892947e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 63,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 63,
          "functions": [
            {
              "name": "main",
              "complexity": 63,
              "line_start": 1,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017234500000995467
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 67,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 67,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 0.00017944899991562124
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "user99",
              "complexity": 15,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.538300021929899e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.747900013375329e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.9654000122245634e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "Read::int",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "Read::list",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            },
            {
              "name": "Read::list_int",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 18,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.201699989105691e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.732599988230504e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 4.3622000248433324e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.151499994506594e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "mismatch",
              "complexity": 3,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.574500028160401e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 7.534299993494642e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 5.9282000165694626e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "gen",
              "complexity": 7,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.58339999972668e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "check",
              "complexity": 9,
              "line_start": 3,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 6.67760000396811e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 8.518000004187343e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1196_D1",
      "tags": "implementation",
      "tool": "complexipy",
      "execution_time": 3.467500027909409e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.375299977255054e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.271099967605551e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 7.896900024206843e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "f",
              "complexity": 12,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.4424000205035554e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 5.946200008111191e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.851199992117472e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.3152000014524674e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 5.3310999646782875e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 9.688199997981428e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.415400007928838e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "bf",
              "complexity": 8,
              "line_start": 6,
              "line_end": 15
            },
            {
              "name": "max_sum",
              "complexity": 10,
              "line_start": 17,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00014403200020751683
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "brute",
              "complexity": 6,
              "line_start": 6,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 8.377799986192258e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "max_subarray",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 5.0535999889689265e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.896299995176378e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.083800038439222e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.934500000468688e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "max_sub",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 0.00011133999987578136
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.489599976091995e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.406300013215514e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.991499988842406e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.81520003429614e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.7741999929276062e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.3803999940573703e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.388400000403635e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 4.325100007918081e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.2821999866428087e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.096899990850943e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.238200022475212e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 2.7631999728328083e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1197_D",
      "tags": "dp,greedy,math",
      "tool": "complexipy",
      "execution_time": 3.835300003629527e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4586000108683947e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7812999885791214e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "main",
              "complexity": 8,
              "line_start": 6,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.611800002545351e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.084800027863821e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.2051000289357034e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4075000055745477e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.6972000139503507e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "S",
              "complexity": 1,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "IR",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "LIR",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "SR",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "LSR",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "A",
              "complexity": 11,
              "line_start": 28,
              "line_end": 45
            },
            {
              "name": "B",
              "complexity": 0,
              "line_start": 48,
              "line_end": 50
            },
            {
              "name": "C",
              "complexity": 0,
              "line_start": 53,
              "line_end": 55
            },
            {
              "name": "D",
              "complexity": 0,
              "line_start": 58,
              "line_end": 60
            },
            {
              "name": "E",
              "complexity": 0,
              "line_start": 63,
              "line_end": 65
            },
            {
              "name": "F",
              "complexity": 0,
              "line_start": 68,
              "line_end": 70
            },
            {
              "name": "G",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            },
            {
              "name": "H",
              "complexity": 0,
              "line_start": 78,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001319790003435628
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "isprime",
              "complexity": 7,
              "line_start": 14,
              "line_end": 25
            },
            {
              "name": "mhd",
              "complexity": 0,
              "line_start": 27,
              "line_end": 28
            },
            {
              "name": "charIN",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "arrIN",
              "complexity": 0,
              "line_start": 33,
              "line_end": 34
            },
            {
              "name": "eld",
              "complexity": 0,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "lgcd",
              "complexity": 1,
              "line_start": 41,
              "line_end": 45
            },
            {
              "name": "ms",
              "complexity": 6,
              "line_start": 47,
              "line_end": 60
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 62,
              "line_end": 68
            },
            {
              "name": "flush",
              "complexity": 0,
              "line_start": 72,
              "line_end": 73
            },
            {
              "name": "fac",
              "complexity": 1,
              "line_start": 76,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00020341299978099414
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.3182000152010005e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.9766999887215206e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.238099998270627e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "APaintTheNumbers::solve",
              "complexity": 11,
              "line_start": 6,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.6438999813981354e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 16,
              "line_end": 31
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 40,
              "line_end": 44
            },
            {
              "name": "FastIO::_fill",
              "complexity": 0,
              "line_start": 46,
              "line_end": 49
            },
            {
              "name": "FastIO::read",
              "complexity": 1,
              "line_start": 51,
              "line_end": 54
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 56,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 82
            },
            {
              "name": "get_array",
              "complexity": 0,
              "line_start": 88,
              "line_end": 89
            },
            {
              "name": "get_ints",
              "complexity": 0,
              "line_start": 92,
              "line_end": 93
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001959400001396716
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.971599997181329e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.329400012968108e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "solve",
              "complexity": 11,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 3.41250001838489e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.8464000024541747e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.051899991784012e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "nospace",
              "complexity": 0,
              "line_start": 25,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 6.979199997658725e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4385999950027326e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.7221999971516198e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "ri",
              "complexity": 1,
              "line_start": 12,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 4.471499960345682e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.3725000119156903e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.9006000002264045e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.4967000172182452e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.0358999790914822e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.5718999950186117e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.1590999949694378e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 1.7924000076163793e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1209_A",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 2.199199980168487e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.8951999815471936e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 1,
          "functions": [
            {
              "name": "zz",
              "complexity": 1,
              "line_start": 6,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00032438100015497184
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.857200019614538e-05
    },
    {
      "true_complexity": "quadratic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 4,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1523_C",
      "tags": "brute force,data structures,greedy,implementation,trees",
      "tool": "complexipy",
      "execution_time": 4.595700011122972e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 8,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "0008_E",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012699999979304266
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "calc",
              "complexity": 19,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0008_E",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 9.11219999579771e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "raschot",
              "complexity": 19,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0008_E",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 7.861799986130791e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.867400007744436e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.5238000034732977e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "STR",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "MAP2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "LIST",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "STRING",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 9.30450000851124e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.0276999950729078e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.0447999759198865e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.5055999887845246e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 7.52920000195445e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.483399970922619e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.250199986519874e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.805299982355791e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.2852999791211914e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 5.668699986927095e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "counter",
              "complexity": 3,
              "line_start": 29,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 6.110599997555255e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7521999982127454e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.883400020436966e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "check_x",
              "complexity": 3,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.073699983564438e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "countall",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002059480002571945
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.6570000045467168e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.3894999685580842e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.9085000278428197e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 63,
              "line_end": 74
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 92,
              "line_end": 105
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 107,
              "line_end": 114
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.00026496999998926185
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.8441999751958065e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7460999717732193e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.1841000034328317e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.841400009856443e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.304400004504714e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.185099992857431e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.20219999391702e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7371000214770902e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.7452999600209296e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.9195999811927322e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.428599964332534e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.079900013995939e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.602000020284322e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.8903999918838963e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "occurrences",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            },
            {
              "name": "CodeforcesTask23ASolution::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "CodeforcesTask23ASolution::read_input",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "CodeforcesTask23ASolution::process_task",
              "complexity": 6,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "CodeforcesTask23ASolution::get_result",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 6.034299985913094e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.247199992983951e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "cic",
              "complexity": 9,
              "line_start": 2,
              "line_end": 17
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.426400028023636e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "fun",
              "complexity": 14,
              "line_start": 5,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.260000014255638e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.2773000182496617e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7180999950360274e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "maxlen",
              "complexity": 6,
              "line_start": 8,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.921300023852382e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.76889999845298e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 6.719600014548632e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.4655000035854755e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "revn",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "dd",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "ddl",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "sieve",
              "complexity": 10,
              "line_start": 19,
              "line_end": 32
            },
            {
              "name": "divs",
              "complexity": 6,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "divn",
              "complexity": 5,
              "line_start": 42,
              "line_end": 51
            },
            {
              "name": "prime",
              "complexity": 6,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "convn",
              "complexity": 1,
              "line_start": 59,
              "line_end": 64
            },
            {
              "name": "cdiv",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.00026966799987349077
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 8.637300015834626e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.4003999644482974e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.8563000089197885e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.241099966544425e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.9564999749709386e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.3583000004000496e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.9287000213807914e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 1.9315999907121295e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "podstroka",
              "complexity": 6,
              "line_start": 3,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.2440000015631085e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.0005899420002606348
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.1129999822733225e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.865300004690653e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 4.4114000047557056e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.5036999886651756e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.057900019281078e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7211999622522853e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "cnt",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.546700008882908e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.7752000278269406e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prime",
              "complexity": 5,
              "line_start": 20,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010029899976871093
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 3.621799987740815e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0023_A",
      "tags": "brute force,greedy",
      "tool": "complexipy",
      "execution_time": 2.6440000056027202e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "TPoint::__init__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "TPoint::__str__",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "TPoint::__eq__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "TPoint::__hash__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "sortKey",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "heuristic",
              "complexity": 3,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "addPoint",
              "complexity": 2,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "extend",
              "complexity": 20,
              "line_start": 42,
              "line_end": 61
            },
            {
              "name": "ReadNext",
              "complexity": 3,
              "line_start": 63,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00035519999983080197
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 9,
              "line_end": 38
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002553510003053816
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 9,
              "line_end": 38
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002519350000511622
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "st",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "pr",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "prl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 31,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013794000005873386
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.737500002098386e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.145300009549828e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "pmat",
              "complexity": 1,
              "line_start": 31,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001412860001437366
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "TPoint::__init__",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "TPoint::__str__",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "TPoint::__eq__",
              "complexity": 1,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "TPoint::__hash__",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "sortKey",
              "complexity": 0,
              "line_start": 22,
              "line_end": 23
            },
            {
              "name": "heuristic",
              "complexity": 3,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "addPoint",
              "complexity": 2,
              "line_start": 32,
              "line_end": 40
            },
            {
              "name": "extend",
              "complexity": 20,
              "line_start": 42,
              "line_end": 61
            },
            {
              "name": "ReadNext",
              "complexity": 3,
              "line_start": 63,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003431770001043333
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.516200003010454e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 5.32710000697989e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "distance",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "shorthest_path",
              "complexity": 3,
              "line_start": 12,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.488100027330802e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 9
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0035_C",
      "tags": "brute force,dfs and similar,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.920999996713363e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "matching",
              "complexity": 41,
              "line_start": 6,
              "line_end": 53
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 55,
              "line_end": 73
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 79,
              "line_end": 83
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 84,
              "line_end": 92
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 93,
              "line_end": 100
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 101,
              "line_end": 104
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 106,
              "line_end": 112
            }
          ]
        }
      },
      "problem": "0387_D",
      "tags": "graph matchings",
      "tool": "complexipy",
      "execution_time": 0.00033473099983893917
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "f",
              "complexity": 6,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "g",
              "complexity": 3,
              "line_start": 30,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0888_F",
      "tags": "dp,graphs",
      "tool": "complexipy",
      "execution_time": 9.606100002201856e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 6,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 35,
              "line_end": 39
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 40,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 49,
              "line_end": 56
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00020973499977117172
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 128,
        "functions_count": 50,
        "raw_output": {
          "file_complexity": 128,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0034186560001217003
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 118,
        "functions_count": 35,
        "raw_output": {
          "file_complexity": 118,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 71,
              "line_end": 81
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 83,
              "line_end": 84
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 87
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 89,
              "line_end": 95
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 97,
              "line_end": 98
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 100,
              "line_end": 117
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 119,
              "line_end": 120
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 123,
              "line_end": 133
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 135,
              "line_end": 136
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 138,
              "line_end": 139
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 141,
              "line_end": 147
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 152,
              "line_end": 169
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 171,
              "line_end": 172
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 176,
              "line_end": 180
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 182,
              "line_end": 196
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 198,
              "line_end": 212
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 214,
              "line_end": 229
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 233,
              "line_end": 235
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 237,
              "line_end": 242
            },
            {
              "name": "LazySegTree::__init__",
              "complexity": 54,
              "line_start": 248,
              "line_end": 354
            },
            {
              "name": "makeNode",
              "complexity": 0,
              "line_start": 360,
              "line_end": 362
            },
            {
              "name": "getTotal",
              "complexity": 0,
              "line_start": 365,
              "line_end": 366
            },
            {
              "name": "getCount",
              "complexity": 0,
              "line_start": 369,
              "line_end": 370
            },
            {
              "name": "nodeOp",
              "complexity": 0,
              "line_start": 376,
              "line_end": 381
            },
            {
              "name": "mapping",
              "complexity": 1,
              "line_start": 387,
              "line_end": 392
            },
            {
              "name": "composition",
              "complexity": 1,
              "line_start": 395,
              "line_end": 397
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 401,
              "line_end": 411
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 413,
              "line_end": 425
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 427,
              "line_end": 439
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.002227991999916412
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.107400006134412e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.508299975394038e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 5,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.573300035801367e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "func",
              "complexity": 11,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 8.626199996797368e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 1,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.000119265000193991
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 73,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00033641399977568653
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "main",
              "complexity": 14,
              "line_start": 73,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00030467400029010605
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0999_F",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.710599993515643e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.387099983840017e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "norm",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.4863000059413025e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1027_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00019332500005475595
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 33,
              "line_start": 10,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0001753100000314589
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "can",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "calc",
              "complexity": 3,
              "line_start": 13,
              "line_end": 21
            },
            {
              "name": "sm",
              "complexity": 14,
              "line_start": 23,
              "line_end": 58
            },
            {
              "name": "call",
              "complexity": 0,
              "line_start": 60,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00015367000014521182
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "pop_count",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "check",
              "complexity": 2,
              "line_start": 12,
              "line_end": 20
            },
            {
              "name": "prepare",
              "complexity": 8,
              "line_start": 26,
              "line_end": 37
            },
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 39,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00023260800026037032
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "add",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "digitize",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "rec",
              "complexity": 11,
              "line_start": 19,
              "line_end": 43
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 45,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1073_E",
      "tags": "bitmasks,combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00017694400003165356
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "Graph::addEdge",
              "complexity": 2,
              "line_start": 30,
              "line_end": 43
            },
            {
              "name": "Graph::addVertex",
              "complexity": 0,
              "line_start": 45,
              "line_end": 47
            },
            {
              "name": "Graph::maxFlow",
              "complexity": 15,
              "line_start": 49,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.0001945570002135355
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "edge::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "add",
              "complexity": 0,
              "line_start": 7,
              "line_end": 11
            },
            {
              "name": "addedge",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "bfs",
              "complexity": 7,
              "line_start": 17,
              "line_end": 33
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 35,
              "line_end": 53
            },
            {
              "name": "dinic",
              "complexity": 1,
              "line_start": 55,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.00020737100021506194
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "edge::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            },
            {
              "name": "add",
              "complexity": 0,
              "line_start": 7,
              "line_end": 11
            },
            {
              "name": "addedge",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "bfs",
              "complexity": 7,
              "line_start": 17,
              "line_end": 34
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 36,
              "line_end": 54
            },
            {
              "name": "dinic",
              "complexity": 1,
              "line_start": 56,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.0001865619997261092
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "addedge",
              "complexity": 0,
              "line_start": 3,
              "line_end": 9
            },
            {
              "name": "bfs",
              "complexity": 7,
              "line_start": 31,
              "line_end": 41
            },
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 45,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1082_G",
      "tags": "flows,graphs",
      "tool": "complexipy",
      "execution_time": 0.00014701700001751306
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "mu",
              "complexity": 2,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "calc",
              "complexity": 8,
              "line_start": 12,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1096_E",
      "tags": "combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00013954299993201857
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "power",
              "complexity": 2,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "inverse",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "C",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "candy",
              "complexity": 0,
              "line_start": 19,
              "line_end": 21
            },
            {
              "name": "count_game",
              "complexity": 8,
              "line_start": 22,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1096_E",
      "tags": "combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00015409100024044164
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 13,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1111_D",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00021856300008948892
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "add",
              "complexity": 1,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "sub",
              "complexity": 1,
              "line_start": 27,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1111_D",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00019427600000199163
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1141_F2",
      "tags": "data structures,greedy",
      "tool": "complexipy",
      "execution_time": 6.0584000038943486e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "get_gdict",
              "complexity": 3,
              "line_start": 12,
              "line_end": 19
            },
            {
              "name": "initial_check",
              "complexity": 3,
              "line_start": 22,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1159_C",
      "tags": "greedy,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00013246999969851458
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 7,
              "line_end": 27
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 29,
              "line_end": 33
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 39,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 66,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00028655000005528564
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 6,
              "line_end": 24
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0002856290002455353
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00019724200001292047
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0001276200000575045
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "check",
              "complexity": 16,
              "line_start": 21,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0001764929997989384
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00011165100022481056
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve2",
              "complexity": 21,
              "line_start": 5,
              "line_end": 22
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 24,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 9.703300020191818e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 4,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 26,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00012071699984517181
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "problem",
              "complexity": 11,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00011149100009788526
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "problem",
              "complexity": 25,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 8.729499995752121e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "find_it",
              "complexity": 23,
              "line_start": 5,
              "line_end": 22
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 24,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00018996799963133526
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 9.654200039221905e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 8.213499995690654e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 93,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 93,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.000273304999609536
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 93,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 93,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00029413499987640535
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 8.607199970356305e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "check",
              "complexity": 8,
              "line_start": 19,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 34,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00014263899993238738
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 58,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.0001869529996838537
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "problem",
              "complexity": 25,
              "line_start": 1,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 7.301799996639602e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00012318200015215552
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "solve",
              "complexity": 17,
              "line_start": 12,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00011518700011947658
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "NextStringIndex::__init__",
              "complexity": 0,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "NextStringIndex::__getitem__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "NextStringIndex::make_next",
              "complexity": 6,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 27,
              "line_end": 44
            }
          ]
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 0.00017103199979828787
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1303_E",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 7.147499991333461e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 67,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00026346699996793177
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "fi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016747600011512986
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "dfs",
              "complexity": 11,
              "line_start": 4,
              "line_end": 24
            },
            {
              "name": "array_shrinking",
              "complexity": 11,
              "line_start": 27,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00019159099974785931
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 6,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0004720899996755179
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 7,
              "line_end": 26
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 32,
              "line_end": 36
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 46,
              "line_end": 53
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 54,
              "line_end": 57
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003513020001264522
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 15,
              "line_end": 32
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 41,
              "line_end": 45
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 47,
              "line_end": 55
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 57,
              "line_end": 64
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 73,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002423169999019592
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 267,
        "functions_count": 55,
        "raw_output": {
          "file_complexity": 267,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 76,
              "line_end": 103
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 104,
              "line_end": 130
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 132,
              "line_end": 142
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 144,
              "line_end": 155
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 157,
              "line_end": 171
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 173,
              "line_end": 187
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 190,
              "line_end": 193
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 195,
              "line_end": 203
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 205,
              "line_end": 217
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 219,
              "line_end": 220
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 226,
              "line_end": 231
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 233,
              "line_end": 242
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 244,
              "line_end": 262
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 270,
              "line_end": 273
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 275,
              "line_end": 277
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 279,
              "line_end": 281
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 283,
              "line_end": 285
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 287,
              "line_end": 303
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 307,
              "line_end": 327
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 330,
              "line_end": 333
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 335,
              "line_end": 343
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 346,
              "line_end": 353
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 356,
              "line_end": 361
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 363,
              "line_end": 375
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 377,
              "line_end": 386
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 388,
              "line_end": 397
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 400,
              "line_end": 413
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 415,
              "line_end": 418
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 427,
              "line_end": 428
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 430,
              "line_end": 446
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 448,
              "line_end": 472
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 474,
              "line_end": 498
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 503,
              "line_end": 504
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 506,
              "line_end": 512
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 523,
              "line_end": 530
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 532,
              "line_end": 541
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 543,
              "line_end": 552
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 554,
              "line_end": 570
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 572,
              "line_end": 583
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 585,
              "line_end": 593
            },
            {
              "name": "Dinic::__init__",
              "complexity": 0,
              "line_start": 597,
              "line_end": 599
            },
            {
              "name": "Dinic::add_edge",
              "complexity": 0,
              "line_start": 601,
              "line_end": 605
            },
            {
              "name": "Dinic::add_multi_edge",
              "complexity": 0,
              "line_start": 607,
              "line_end": 611
            },
            {
              "name": "Dinic::bfs",
              "complexity": 7,
              "line_start": 613,
              "line_end": 625
            },
            {
              "name": "Dinic::dfs",
              "complexity": 8,
              "line_start": 627,
              "line_end": 639
            },
            {
              "name": "Dinic::flow",
              "complexity": 3,
              "line_start": 641,
              "line_end": 651
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.003997447000074317
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.391899998765439e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.058561947000271175
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018345600028624176
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 8,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012999499995203223
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "f",
              "complexity": 29,
              "line_start": 1,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001158589998340176
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.000200002948986e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.239599972308497e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.918999997651554e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "solve",
              "complexity": 34,
              "line_start": 8,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016159399956450216
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 11,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001977529996111116
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 29,
              "line_end": 29
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 32,
              "line_end": 32
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 35,
              "line_end": 35
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 38,
              "line_end": 38
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 41,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002048769997600175
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 54,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 54,
          "functions": [
            {
              "name": "solve",
              "complexity": 35,
              "line_start": 11,
              "line_end": 69
            },
            {
              "name": "tup",
              "complexity": 0,
              "line_start": 72,
              "line_end": 74
            },
            {
              "name": "untup",
              "complexity": 0,
              "line_start": 77,
              "line_end": 79
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 82,
              "line_end": 117
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003923399999621324
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.496100008414942e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "examA",
              "complexity": 4,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "examB",
              "complexity": 2,
              "line_start": 14,
              "line_end": 24
            },
            {
              "name": "examC",
              "complexity": 25,
              "line_start": 26,
              "line_end": 62
            },
            {
              "name": "examD",
              "complexity": 6,
              "line_start": 64,
              "line_end": 94
            },
            {
              "name": "examE",
              "complexity": 21,
              "line_start": 96,
              "line_end": 120
            },
            {
              "name": "examF",
              "complexity": 0,
              "line_start": 126,
              "line_end": 129
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 134,
              "line_end": 134
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 135,
              "line_end": 135
            },
            {
              "name": "LSI",
              "complexity": 0,
              "line_start": 136,
              "line_end": 136
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 137,
              "line_end": 137
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 138,
              "line_end": 138
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0004211139998915314
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016361899997718865
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ec",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.853700001054676e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "ec",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.553399998665554e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "calcdp",
              "complexity": 7,
              "line_start": 4,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "ip",
              "complexity": 1,
              "line_start": 27,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.629200030758511e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "rr",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "rri",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "rrm",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "mus",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "ms",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "ar",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ppm",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "ppa",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "ppl",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "fake_input",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "read",
              "complexity": 0,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "calc_dp",
              "complexity": 7,
              "line_start": 28,
              "line_end": 46
            },
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 48,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002260460000798048
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 17,
              "line_start": 14,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001188840001304925
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 17,
              "line_start": 14,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010215299971605418
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 90,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 90,
          "functions": [
            {
              "name": "merge_small",
              "complexity": 32,
              "line_start": 15,
              "line_end": 53
            },
            {
              "name": "merge_main",
              "complexity": 46,
              "line_start": 55,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003836040000351204
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "main",
              "complexity": 18,
              "line_start": 11,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001324400000157766
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 24,
              "line_start": 12,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013173800016375026
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.0955000208196e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.9221999890723964e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.499300004885299e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "f",
              "complexity": 6,
              "line_start": 5,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.266900006972719e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.9764000323193613e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.57470000583271e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.807799991292995e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.827699982954073e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "iinput",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "tinput",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            },
            {
              "name": "rinput",
              "complexity": 0,
              "line_start": 25,
              "line_end": 26
            },
            {
              "name": "rlinput",
              "complexity": 0,
              "line_start": 29,
              "line_end": 30
            },
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 36,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011697100035235053
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.464199987021857e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.9592000070551876e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.249600002978696e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.028400002833223e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.690499978707521e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.471099979738938e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.950199965809588e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.624599998554913e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.550500009121606e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.9171999762620544e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.477399988900288e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 73,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000340342000072269
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010513899997022236
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.788600007392233e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.124299984046957e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.88610000704648e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010404600016045151
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LF",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "II",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "IF",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "IR",
              "complexity": 1,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "LIR",
              "complexity": 1,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "FR",
              "complexity": 1,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "LIR",
              "complexity": 1,
              "line_start": 31,
              "line_end": 35
            },
            {
              "name": "LIR_",
              "complexity": 1,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "SR",
              "complexity": 1,
              "line_start": 41,
              "line_end": 45
            },
            {
              "name": "LSR",
              "complexity": 1,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "solve",
              "complexity": 29,
              "line_start": 55,
              "line_end": 89
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003722020001077908
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 19,
              "line_end": 31
            },
            {
              "name": "cal2",
              "complexity": 2,
              "line_start": 33,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00015669499998693937
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011083899971708888
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.57000002017594e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010628100017129327
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.01729995853384e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.563400009123143e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 18,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "solve",
              "complexity": 19,
              "line_start": 95,
              "line_end": 116
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00030940299984649755
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 10,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1312_E",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010804400017150328
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015243699999700766
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 16,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014192799972079229
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "func",
              "complexity": 10,
              "line_start": 3,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014044499994270154
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010956699998132535
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010617999987516669
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "calc",
              "complexity": 8,
              "line_start": 9,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.937800021158182e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001005789999908302
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011980599992966745
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010696200024540303
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010685200004445505
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00031293000029108953
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010859499980142573
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001094160002139688
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011625899969658349
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.314499993706704e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010613999984343536
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015131500003917608
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011758100026781904
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001519859997642925
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00016776600023149513
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012319200004640152
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.791599975666031e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dp",
              "complexity": 4,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.567100005369866e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "nn",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "lm",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            },
            {
              "name": "solve",
              "complexity": 22,
              "line_start": 20,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001421279998794489
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 18,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.418900006290642e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012120799965487095
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "input_split",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012566699979288387
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "f",
              "complexity": 15,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010775300006571342
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.907700041367207e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "go",
              "complexity": 5,
              "line_start": 9,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010710199967434164
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012710000009974465
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 12,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011210100001335377
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "solveBFS",
              "complexity": 16,
              "line_start": 7,
              "line_end": 48
            },
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 51,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.000319332999879407
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "recSolve",
              "complexity": 5,
              "line_start": 3,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011805199983427883
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "get_max_area",
              "complexity": 7,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010503799967409577
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 14,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00023716800023976248
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "add_ns",
              "complexity": 18,
              "line_start": 40,
              "line_end": 56
            },
            {
              "name": "store_ans",
              "complexity": 6,
              "line_start": 58,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003069389999836858
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012731000015264726
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 40,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00021373300023697084
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "dfs",
              "complexity": 10,
              "line_start": 6,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010316499992768513
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "main",
              "complexity": 40,
              "line_start": 3,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001329910001004464
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 20,
              "line_end": 37
            },
            {
              "name": "recur",
              "complexity": 9,
              "line_start": 39,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001806610002859088
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "recur",
              "complexity": 9,
              "line_start": 19,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012253099976078374
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 12,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011797299976024078
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "lis",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "ma",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "st1",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014194799996403162
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "read_int",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 11,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012714000013147597
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "recursive",
              "complexity": 7,
              "line_start": 14,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.578200004194514e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 80,
              "line_end": 89
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012566699979288387
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "area",
              "complexity": 8,
              "line_start": 8,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.097199997791904e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 15,
              "line_end": 19
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 31,
              "line_end": 38
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 40,
              "line_end": 43
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "union_find::__init__",
              "complexity": 0,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "union_find::union",
              "complexity": 1,
              "line_start": 66,
              "line_end": 76
            },
            {
              "name": "union_find::find",
              "complexity": 1,
              "line_start": 78,
              "line_end": 82
            },
            {
              "name": "main",
              "complexity": 35,
              "line_start": 85,
              "line_end": 124
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0004097119999642018
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 15,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012357300010990002
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dp",
              "complexity": 4,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.846600005403161e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012891300002593198
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011070900018239627
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.852799990359927e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010404599970570416
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "recursive",
              "complexity": 8,
              "line_start": 14,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.688399975653738e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010186200006501167
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "recurser",
              "complexity": 13,
              "line_start": 10,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.069099996850127e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.144399998855079e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "power",
              "complexity": 3,
              "line_start": 21,
              "line_end": 28
            },
            {
              "name": "inar",
              "complexity": 0,
              "line_start": 31,
              "line_end": 32
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 35,
              "line_end": 36
            },
            {
              "name": "func",
              "complexity": 13,
              "line_start": 41,
              "line_end": 54
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 56,
              "line_end": 74
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 85,
              "line_end": 89
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 91,
              "line_end": 99
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 101,
              "line_end": 108
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 110,
              "line_end": 113
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 117,
              "line_end": 123
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003300830003354349
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.113200030697044e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013396200029092142
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.426999991366756e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001104979996853217
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "prdbg",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            },
            {
              "name": "get_str",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "rint",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "oint",
              "complexity": 0,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "valid",
              "complexity": 2,
              "line_start": 21,
              "line_end": 25
            },
            {
              "name": "dfs",
              "complexity": 8,
              "line_start": 27,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00018595100027596345
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "solve",
              "complexity": 27,
              "line_start": 1,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011531800009834114
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "f",
              "complexity": 20,
              "line_start": 4,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014587499981644214
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "dp",
              "complexity": 9,
              "line_start": 6,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.970099977683276e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.892899975558976e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.24269998499949e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014279999959398992
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002896159999181691
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "r",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "rm",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "rl",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010840499999176245
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.725699995513423e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "rec",
              "complexity": 13,
              "line_start": 9,
              "line_end": 26
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 28,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011178099975950317
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 62,
        "functions_count": 26,
        "raw_output": {
          "file_complexity": 62,
          "functions": [
            {
              "name": "Golf",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "S_",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "IS",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "LI_",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "NI",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "NI_",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "StoLI",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "ItoS",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "LtoS",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "RA",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "RLI",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "RI",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "Rtest",
              "complexity": 3,
              "line_start": 22,
              "line_end": 32
            },
            {
              "name": "GI",
              "complexity": 11,
              "line_start": 33,
              "line_end": 49
            },
            {
              "name": "GGI",
              "complexity": 6,
              "line_start": 50,
              "line_end": 61
            },
            {
              "name": "TI",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "accum",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "bit_combination",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "gcd",
              "complexity": 3,
              "line_start": 71,
              "line_end": 75
            },
            {
              "name": "YN",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "Yn",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "show",
              "complexity": 1,
              "line_start": 78,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.000568401999771595
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010710200012908899
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "_SortedSeqs::__init__",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "_SortedSeqs::__hash__",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "compute_max_area",
              "complexity": 0,
              "line_start": 19,
              "line_end": 22
            },
            {
              "name": "_compute_max_area",
              "complexity": 3,
              "line_start": 25,
              "line_end": 66
            },
            {
              "name": "_how_many_nonempty",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 73,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00017054199997801334
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010168199969484704
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00023225800032378174
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.938699986378197e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 12,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.692400024301605e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "Person::__init__",
              "complexity": 0,
              "line_start": 65,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013278999995236518
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "dp",
              "complexity": 4,
              "line_start": 3,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.89299999976356e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.38969997150707e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.83970001268608e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011473599988676142
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 1,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00011043799986509839
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.529899989502155e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.73860001572757e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "calc",
              "complexity": 8,
              "line_start": 11,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.322800001929863e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.361599995827419e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.477000028506154e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.205499989344389e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.256600040112971e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 5,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.705299999041017e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "inpt",
              "complexity": 0,
              "line_start": 24,
              "line_end": 25
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 27,
              "line_end": 45
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 54,
              "line_end": 58
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 60,
              "line_end": 68
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 70,
              "line_end": 77
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 79,
              "line_end": 82
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002541890003158187
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010852499963220907
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "dp",
              "complexity": 5,
              "line_start": 21,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.386700003233273e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "dp",
              "complexity": 5,
              "line_start": 21,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.853799979784526e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "getArray",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "createDP",
              "complexity": 6,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "go",
              "complexity": 8,
              "line_start": 14,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010066999993796344
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "main",
              "complexity": 14,
              "line_start": 12,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.80849999905331e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.455899999011308e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "solve",
              "complexity": 8,
              "line_start": 24,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.551099972464726e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 22,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001175610000245797
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.717399987290264e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.757399993759464e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.74749998729385e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.634400026290677e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "L",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "sl",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "sp",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "ssp",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "rec",
              "complexity": 8,
              "line_start": 35,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001536800000394578
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "pre",
              "complexity": 6,
              "line_start": 59,
              "line_end": 69
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 72,
              "line_end": 76
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 81,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0003307229999336414
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 9,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001253259997611167
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.749399987413199e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "find",
              "complexity": 8,
              "line_start": 84,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00021094800013088388
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "rec",
              "complexity": 8,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.458999991489691e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.688399975653738e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "idx",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.934899986139499e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.55319999573112e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.057200011535315e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "solve",
              "complexity": 21,
              "line_start": 14,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012353299962342135
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "idx",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.086299976639566e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 25,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010100100007548463
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.389700016981806e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.863700031724875e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 1,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 7.634400026290677e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010075999989567208
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.743500029595452e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 4,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.426900012636906e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "f",
              "complexity": 14,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00013957299961475655
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "dict",
              "complexity": 5,
              "line_start": 20,
              "line_end": 27
            },
            {
              "name": "find_gt",
              "complexity": 2,
              "line_start": 28,
              "line_end": 34
            },
            {
              "name": "cal",
              "complexity": 8,
              "line_start": 36,
              "line_end": 47
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 48,
              "line_end": 60
            }
          ]
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001797290001377405
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1398_D",
      "tags": "dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.896700021272409e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.4053000237909146e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.277199994045077e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 8.015100002012332e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 7.555299998784903e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.859200023725862e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 3.085799971813685e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "main",
              "complexity": 10,
              "line_start": 5,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 7.33480001144926e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1437_F",
      "tags": "combinatorics,dp,math,two pointers",
      "tool": "complexipy",
      "execution_time": 4.3602000005193986e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "sieve::__init__",
              "complexity": 6,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "sieve::isprime",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "sieve::factorize",
              "complexity": 7,
              "line_start": 18,
              "line_end": 27
            },
            {
              "name": "sieve::modlcm",
              "complexity": 10,
              "line_start": 28,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00019552899993868778
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 22,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00014769899962630006
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 22,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001363369997307018
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 24,
              "line_end": 32
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 47,
              "line_end": 53
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "solve",
              "complexity": 14,
              "line_start": 83,
              "line_end": 102
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0003064269999413227
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 23,
              "line_end": 30
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 31,
              "line_end": 34
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 43
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 48,
              "line_end": 48
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 49,
              "line_end": 49
            },
            {
              "name": "getInts",
              "complexity": 0,
              "line_start": 50,
              "line_end": 50
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 51,
              "line_end": 51
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 52,
              "line_end": 52
            },
            {
              "name": "getMat",
              "complexity": 0,
              "line_start": 53,
              "line_end": 53
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 54,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00028422500008673524
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 17,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00014588500016543549
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 14,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00012924400016345317
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "primefactor",
              "complexity": 6,
              "line_start": 8,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011790200005634688
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "ass",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 7,
              "line_end": 16
            },
            {
              "name": "get_mask",
              "complexity": 8,
              "line_start": 19,
              "line_end": 34
            },
            {
              "name": "dump",
              "complexity": 1,
              "line_start": 36,
              "line_end": 38
            },
            {
              "name": "get_left",
              "complexity": 5,
              "line_start": 40,
              "line_end": 53
            },
            {
              "name": "get_dp",
              "complexity": 10,
              "line_start": 56,
              "line_end": 71
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 73,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001764220000950445
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "ass",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 7,
              "line_end": 16
            },
            {
              "name": "get_mask",
              "complexity": 9,
              "line_start": 21,
              "line_end": 39
            },
            {
              "name": "dump",
              "complexity": 1,
              "line_start": 41,
              "line_end": 43
            },
            {
              "name": "get_left",
              "complexity": 5,
              "line_start": 45,
              "line_end": 58
            },
            {
              "name": "get_dp",
              "complexity": 10,
              "line_start": 61,
              "line_end": 76
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 78,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00018204299976787297
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 9.520999992673751e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 7.734599967079703e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "get_mask",
              "complexity": 9,
              "line_start": 18,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010646100008671056
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "get_prime",
              "complexity": 8,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "get_mask",
              "complexity": 8,
              "line_start": 18,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011013799985448713
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00011621900011959951
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001080240003830113
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "f",
              "complexity": 4,
              "line_start": 22,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00017551100017954013
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "nr",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            },
            {
              "name": "nrs",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.000121047999982693
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1497_E2",
      "tags": "data structures,dp,greedy,math,number theory,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001206669999191945
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 271,
        "functions_count": 55,
        "raw_output": {
          "file_complexity": 271,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 41,
              "line_end": 52
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 54,
              "line_end": 59
            },
            {
              "name": "isPrimeMR",
              "complexity": 10,
              "line_start": 61,
              "line_end": 75
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 76,
              "line_end": 103
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 104,
              "line_end": 130
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 132,
              "line_end": 142
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 144,
              "line_end": 155
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 157,
              "line_end": 171
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 173,
              "line_end": 187
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 190,
              "line_end": 193
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 195,
              "line_end": 203
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 205,
              "line_end": 217
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 219,
              "line_end": 220
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 222,
              "line_end": 223
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 226,
              "line_end": 231
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 233,
              "line_end": 242
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 244,
              "line_end": 262
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 270,
              "line_end": 273
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 275,
              "line_end": 277
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 279,
              "line_end": 281
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 283,
              "line_end": 285
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 287,
              "line_end": 303
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 307,
              "line_end": 327
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 330,
              "line_end": 333
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 335,
              "line_end": 343
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 346,
              "line_end": 353
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 356,
              "line_end": 361
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 363,
              "line_end": 375
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 377,
              "line_end": 386
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 388,
              "line_end": 397
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 400,
              "line_end": 413
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 415,
              "line_end": 418
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 427,
              "line_end": 428
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 430,
              "line_end": 446
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 448,
              "line_end": 472
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 474,
              "line_end": 498
            },
            {
              "name": "Matrix::set_mod",
              "complexity": 0,
              "line_start": 503,
              "line_end": 504
            },
            {
              "name": "Matrix::__init__",
              "complexity": 3,
              "line_start": 506,
              "line_end": 512
            },
            {
              "name": "Matrix::__getitem__",
              "complexity": 1,
              "line_start": 514,
              "line_end": 521
            },
            {
              "name": "Matrix::__setitem__",
              "complexity": 1,
              "line_start": 523,
              "line_end": 530
            },
            {
              "name": "Matrix::__add__",
              "complexity": 4,
              "line_start": 532,
              "line_end": 541
            },
            {
              "name": "Matrix::__sub__",
              "complexity": 4,
              "line_start": 543,
              "line_end": 552
            },
            {
              "name": "Matrix::__mul__",
              "complexity": 12,
              "line_start": 554,
              "line_end": 570
            },
            {
              "name": "Matrix::__pow__",
              "complexity": 4,
              "line_start": 572,
              "line_end": 583
            },
            {
              "name": "Matrix::__str__",
              "complexity": 3,
              "line_start": 585,
              "line_end": 593
            },
            {
              "name": "Dinic::__init__",
              "complexity": 0,
              "line_start": 597,
              "line_end": 599
            },
            {
              "name": "Dinic::add_edge",
              "complexity": 0,
              "line_start": 601,
              "line_end": 605
            },
            {
              "name": "Dinic::add_multi_edge",
              "complexity": 0,
              "line_start": 607,
              "line_end": 611
            },
            {
              "name": "Dinic::bfs",
              "complexity": 7,
              "line_start": 613,
              "line_end": 625
            },
            {
              "name": "Dinic::dfs",
              "complexity": 8,
              "line_start": 627,
              "line_end": 639
            },
            {
              "name": "Dinic::flow",
              "complexity": 3,
              "line_start": 641,
              "line_end": 651
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.004039978000037081
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "make_mod_mul",
              "complexity": 2,
              "line_start": 20,
              "line_end": 32
            },
            {
              "name": "mod_pow",
              "complexity": 4,
              "line_start": 38,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00014356100018630968
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "mul",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 8.022200017876457e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "getc",
              "complexity": 4,
              "line_start": 2,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 8.462999994662823e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LI1",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LLI1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "nHr",
              "complexity": 0,
              "line_start": 19,
              "line_end": 20
            },
            {
              "name": "nPr",
              "complexity": 2,
              "line_start": 22,
              "line_end": 25
            },
            {
              "name": "nCr",
              "complexity": 2,
              "line_start": 27,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00015537299987045117
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 7,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 40,
              "line_end": 44
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 46,
              "line_end": 54
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 56,
              "line_end": 63
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 72,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0002123200001733494
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.5685000006633345e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 7.110400019882945e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 66,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 66,
          "functions": [
            {
              "name": "fft1",
              "complexity": 8,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "fft2",
              "complexity": 8,
              "line_start": 27,
              "line_end": 37
            },
            {
              "name": "fft3",
              "complexity": 8,
              "line_start": 38,
              "line_end": 48
            },
            {
              "name": "ifft1",
              "complexity": 6,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "ifft2",
              "complexity": 6,
              "line_start": 59,
              "line_end": 67
            },
            {
              "name": "ifft3",
              "complexity": 6,
              "line_start": 68,
              "line_end": 76
            },
            {
              "name": "convolve",
              "complexity": 15,
              "line_start": 78,
              "line_end": 114
            },
            {
              "name": "chk",
              "complexity": 0,
              "line_start": 115,
              "line_end": 116
            },
            {
              "name": "chkinv",
              "complexity": 0,
              "line_start": 117,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0009036139999807347
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 127,
        "functions_count": 49,
        "raw_output": {
          "file_complexity": 127,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "A",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "AI",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "A2",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "G",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "GP",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 84,
              "line_end": 101
            },
            {
              "name": "fact",
              "complexity": 5,
              "line_start": 107,
              "line_end": 114
            },
            {
              "name": "ifact",
              "complexity": 1,
              "line_start": 116,
              "line_end": 122
            },
            {
              "name": "per",
              "complexity": 3,
              "line_start": 124,
              "line_end": 128
            },
            {
              "name": "com",
              "complexity": 3,
              "line_start": 130,
              "line_end": 134
            },
            {
              "name": "catalan",
              "complexity": 0,
              "line_start": 136,
              "line_end": 137
            },
            {
              "name": "isprime",
              "complexity": 3,
              "line_start": 139,
              "line_end": 143
            },
            {
              "name": "floorsum",
              "complexity": 3,
              "line_start": 145,
              "line_end": 149
            },
            {
              "name": "inverse",
              "complexity": 1,
              "line_start": 151,
              "line_end": 154
            },
            {
              "name": "lowbit",
              "complexity": 0,
              "line_start": 156,
              "line_end": 157
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 160,
              "line_end": 162
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 164,
              "line_end": 167
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 169,
              "line_end": 174
            },
            {
              "name": "ST::__init__",
              "complexity": 4,
              "line_start": 177,
              "line_end": 185
            },
            {
              "name": "ST::query",
              "complexity": 2,
              "line_start": 186,
              "line_end": 189
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 192,
              "line_end": 193
            },
            {
              "name": "DSU::same",
              "complexity": 0,
              "line_start": 195,
              "line_end": 196
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 198,
              "line_end": 202
            },
            {
              "name": "DSU::union",
              "complexity": 2,
              "line_start": 204,
              "line_end": 212
            },
            {
              "name": "DSU::size",
              "complexity": 1,
              "line_start": 214,
              "line_end": 214
            },
            {
              "name": "UFS::__init__",
              "complexity": 0,
              "line_start": 217,
              "line_end": 219
            },
            {
              "name": "UFS::find",
              "complexity": 1,
              "line_start": 221,
              "line_end": 224
            },
            {
              "name": "UFS::union",
              "complexity": 4,
              "line_start": 226,
              "line_end": 235
            },
            {
              "name": "UF::__init__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 242
            },
            {
              "name": "UF::find",
              "complexity": 1,
              "line_start": 244,
              "line_end": 247
            },
            {
              "name": "UF::union",
              "complexity": 4,
              "line_start": 249,
              "line_end": 263
            },
            {
              "name": "Prime",
              "complexity": 12,
              "line_start": 265,
              "line_end": 277
            },
            {
              "name": "dij",
              "complexity": 8,
              "line_start": 279,
              "line_end": 293
            },
            {
              "name": "bell",
              "complexity": 12,
              "line_start": 295,
              "line_end": 308
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 310,
              "line_end": 310
            },
            {
              "name": "lis",
              "complexity": 3,
              "line_start": 311,
              "line_end": 319
            },
            {
              "name": "RP",
              "complexity": 2,
              "line_start": 321,
              "line_end": 332
            },
            {
              "name": "DLN::__init__",
              "complexity": 0,
              "line_start": 335,
              "line_end": 338
            },
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 340,
              "line_end": 343
            },
            {
              "name": "topo",
              "complexity": 9,
              "line_start": 345,
              "line_end": 359
            },
            {
              "name": "gdfs",
              "complexity": 3,
              "line_start": 361,
              "line_end": 366
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0019559490001483937
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.614499989154865e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "Combination::__init__",
              "complexity": 2,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "Combination::inv",
              "complexity": 0,
              "line_start": 12,
              "line_end": 14
            },
            {
              "name": "Combination::fact",
              "complexity": 0,
              "line_start": 16,
              "line_end": 18
            },
            {
              "name": "Combination::inv_fact",
              "complexity": 0,
              "line_start": 20,
              "line_end": 22
            },
            {
              "name": "Combination::perm",
              "complexity": 1,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "Combination::comb",
              "complexity": 1,
              "line_start": 30,
              "line_end": 34
            },
            {
              "name": "combination",
              "complexity": 2,
              "line_start": 37,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0001706719999674533
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 8.325699991473812e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "mod_nCr",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00010880499985432834
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.19579998581321e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.179899997325265e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 5.988300017634174e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 6,
              "line_end": 13
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 16,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00013868099995306693
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "precom",
              "complexity": 5,
              "line_start": 33,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00012653800013140426
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "pow",
              "complexity": 3,
              "line_start": 10,
              "line_end": 17
            },
            {
              "name": "inv",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            },
            {
              "name": "C",
              "complexity": 4,
              "line_start": 35,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00015714600021965452
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.1034999816911295e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 7.70749998082465e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 6.913000015629223e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "line",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "powers",
              "complexity": 1,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "binomials",
              "complexity": 4,
              "line_start": 16,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 29,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00011948500014113961
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "line",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "powers",
              "complexity": 1,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "binomials",
              "complexity": 4,
              "line_start": 16,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 7,
              "line_start": 29,
              "line_end": 56
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00011112999982287874
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "Exp",
              "complexity": 2,
              "line_start": 5,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 9.149199968305766e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 8,
              "line_end": 68
            },
            {
              "name": "Input::__init__",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            },
            {
              "name": "Input::read_typed",
              "complexity": 0,
              "line_start": 76,
              "line_end": 78
            },
            {
              "name": "Input::read",
              "complexity": 0,
              "line_start": 80,
              "line_end": 82
            },
            {
              "name": "Debug::__init__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 88
            },
            {
              "name": "Debug::__delete__",
              "complexity": 0,
              "line_start": 90,
              "line_end": 92
            },
            {
              "name": "run",
              "complexity": 1,
              "line_start": 94,
              "line_end": 96
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00020305299995015957
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 11,
              "line_start": 7,
              "line_end": 26
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 32,
              "line_end": 36
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 37,
              "line_end": 45
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 46,
              "line_end": 53
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 54,
              "line_end": 57
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00020871300012004212
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "fastfrac",
              "complexity": 0,
              "line_start": 6,
              "line_end": 8
            },
            {
              "name": "comb",
              "complexity": 2,
              "line_start": 12,
              "line_end": 18
            },
            {
              "name": "getnext",
              "complexity": 6,
              "line_start": 24,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0001354850001007435
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "foo",
              "complexity": 4,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "f",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1515_E",
      "tags": "combinatorics,dp,math",
      "tool": "complexipy",
      "execution_time": 4.8862000312510645e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.953800008588587e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.844700005283812e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012817099968742696
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 158,
        "functions_count": 46,
        "raw_output": {
          "file_complexity": 158,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "A",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "AI",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "A2",
              "complexity": 0,
              "line_start": 74,
              "line_end": 74
            },
            {
              "name": "G",
              "complexity": 0,
              "line_start": 75,
              "line_end": 75
            },
            {
              "name": "GP",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 83,
              "line_end": 100
            },
            {
              "name": "fact",
              "complexity": 5,
              "line_start": 106,
              "line_end": 113
            },
            {
              "name": "ifact",
              "complexity": 1,
              "line_start": 115,
              "line_end": 121
            },
            {
              "name": "per",
              "complexity": 3,
              "line_start": 123,
              "line_end": 127
            },
            {
              "name": "com",
              "complexity": 3,
              "line_start": 129,
              "line_end": 133
            },
            {
              "name": "catalan",
              "complexity": 0,
              "line_start": 135,
              "line_end": 136
            },
            {
              "name": "isprime",
              "complexity": 3,
              "line_start": 138,
              "line_end": 142
            },
            {
              "name": "floorsum",
              "complexity": 3,
              "line_start": 144,
              "line_end": 148
            },
            {
              "name": "inverse",
              "complexity": 1,
              "line_start": 150,
              "line_end": 153
            },
            {
              "name": "lowbit",
              "complexity": 0,
              "line_start": 155,
              "line_end": 156
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 159,
              "line_end": 161
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 163,
              "line_end": 166
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 168,
              "line_end": 173
            },
            {
              "name": "ST::__init__",
              "complexity": 4,
              "line_start": 176,
              "line_end": 184
            },
            {
              "name": "ST::query",
              "complexity": 2,
              "line_start": 185,
              "line_end": 188
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 191,
              "line_end": 192
            },
            {
              "name": "DSU::same",
              "complexity": 0,
              "line_start": 194,
              "line_end": 195
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 197,
              "line_end": 201
            },
            {
              "name": "DSU::union",
              "complexity": 2,
              "line_start": 203,
              "line_end": 211
            },
            {
              "name": "DSU::size",
              "complexity": 1,
              "line_start": 213,
              "line_end": 213
            },
            {
              "name": "UFS::__init__",
              "complexity": 0,
              "line_start": 216,
              "line_end": 218
            },
            {
              "name": "UFS::find",
              "complexity": 1,
              "line_start": 220,
              "line_end": 223
            },
            {
              "name": "UFS::union",
              "complexity": 4,
              "line_start": 225,
              "line_end": 234
            },
            {
              "name": "Prime",
              "complexity": 12,
              "line_start": 236,
              "line_end": 248
            },
            {
              "name": "dij",
              "complexity": 9,
              "line_start": 250,
              "line_end": 264
            },
            {
              "name": "bell",
              "complexity": 12,
              "line_start": 266,
              "line_end": 279
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 281,
              "line_end": 281
            },
            {
              "name": "lis",
              "complexity": 3,
              "line_start": 282,
              "line_end": 290
            },
            {
              "name": "RP",
              "complexity": 2,
              "line_start": 292,
              "line_end": 303
            },
            {
              "name": "DLN::__init__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 309
            },
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 311,
              "line_end": 314
            },
            {
              "name": "topo",
              "complexity": 9,
              "line_start": 316,
              "line_end": 330
            },
            {
              "name": "gdfs",
              "complexity": 3,
              "line_start": 332,
              "line_end": 337
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0017749469998307177
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 56,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017528099988339818
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 77,
        "functions_count": 27,
        "raw_output": {
          "file_complexity": 77,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 257
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 259,
              "line_end": 271
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0012314820000938198
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010899600010816357
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "mfloat",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "solve",
              "complexity": 29,
              "line_start": 70,
              "line_end": 115
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 119,
              "line_end": 123
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002928130002146645
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "solve",
              "complexity": 23,
              "line_start": 13,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011912399986613309
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013789000013275654
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 7,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001978330001293216
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "sol",
              "complexity": 10,
              "line_start": 2,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001133639998442959
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00019025900019187247
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010116100020240992
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012853299995185807
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "solve",
              "complexity": 28,
              "line_start": 4,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011442599998190417
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "neighbours",
              "complexity": 4,
              "line_start": 13,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.332599984190892e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "f",
              "complexity": 15,
              "line_start": 8,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.689299986348487e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.763399975781795e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "costs",
              "complexity": 4,
              "line_start": 22,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011084900006608223
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "main",
              "complexity": 48,
              "line_start": 6,
              "line_end": 51
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 63,
              "line_end": 67
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 69,
              "line_end": 77
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 79,
              "line_end": 86
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 88,
              "line_end": 91
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 95,
              "line_end": 101
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003427269998610427
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "helper",
              "complexity": 25,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001565450002090074
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011273200016148621
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013728900012210943
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 28,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.97980000647658e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "main",
              "complexity": 34,
              "line_start": 1,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012897300030090264
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "some_random_function",
              "complexity": 0,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "some_random_function5",
              "complexity": 0,
              "line_start": 14,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 26,
              "line_start": 29,
              "line_end": 53
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 64,
              "line_end": 72
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 73,
              "line_end": 80
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 81,
              "line_end": 84
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 86,
              "line_end": 92
            },
            {
              "name": "some_random_function1",
              "complexity": 0,
              "line_start": 96,
              "line_end": 105
            },
            {
              "name": "some_random_function2",
              "complexity": 0,
              "line_start": 107,
              "line_end": 116
            },
            {
              "name": "some_random_function3",
              "complexity": 0,
              "line_start": 118,
              "line_end": 127
            },
            {
              "name": "some_random_function4",
              "complexity": 0,
              "line_start": 129,
              "line_end": 138
            },
            {
              "name": "some_random_function6",
              "complexity": 0,
              "line_start": 140,
              "line_end": 149
            },
            {
              "name": "some_random_function7",
              "complexity": 0,
              "line_start": 151,
              "line_end": 160
            },
            {
              "name": "some_random_function8",
              "complexity": 0,
              "line_start": 162,
              "line_end": 171
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00044028000002072076
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "find",
              "complexity": 1,
              "line_start": 16,
              "line_end": 21
            },
            {
              "name": "union",
              "complexity": 1,
              "line_start": 24,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001896079998005007
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 59,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00016482000000905828
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "ints",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "around",
              "complexity": 5,
              "line_start": 16,
              "line_end": 21
            },
            {
              "name": "mink",
              "complexity": 6,
              "line_start": 23,
              "line_end": 29
            },
            {
              "name": "solve",
              "complexity": 31,
              "line_start": 31,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00022809999973105732
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "process",
              "complexity": 1,
              "line_start": 58,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00046768199990765424
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 5,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 16,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001860900001702248
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001984350001293933
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012122799989811028
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "solve",
              "complexity": 13,
              "line_start": 9,
              "line_end": 53
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 74,
              "line_end": 87
            },
            {
              "name": "nouse0",
              "complexity": 0,
              "line_start": 93,
              "line_end": 97
            },
            {
              "name": "nouse1",
              "complexity": 0,
              "line_start": 98,
              "line_end": 102
            },
            {
              "name": "nouse2",
              "complexity": 0,
              "line_start": 103,
              "line_end": 107
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 120,
              "line_end": 124
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 126,
              "line_end": 134
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 136,
              "line_end": 143
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 145,
              "line_end": 148
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 152,
              "line_end": 158
            },
            {
              "name": "nouse3",
              "complexity": 0,
              "line_start": 167,
              "line_end": 171
            },
            {
              "name": "nouse4",
              "complexity": 0,
              "line_start": 172,
              "line_end": 176
            },
            {
              "name": "nouse5",
              "complexity": 0,
              "line_start": 177,
              "line_end": 181
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0006570290001945978
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001529189999018854
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "inlt",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "insr",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "invr",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017908800009536208
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "aburrimin",
              "complexity": 4,
              "line_start": 2,
              "line_end": 23
            },
            {
              "name": "solvecaso",
              "complexity": 22,
              "line_start": 26,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000217730000258598
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "solve",
              "complexity": 17,
              "line_start": 18,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011668999968605931
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 23,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00019694100001288461
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 167
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 170,
              "line_end": 204
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0004419229999257368
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 167
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 170,
              "line_end": 211
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0004310730000725016
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 167
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 170,
              "line_end": 212
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00048292100018443307
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 157,
              "line_end": 204
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0004008660002909892
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 77,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 77,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.000498058999710338
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "main",
              "complexity": 19,
              "line_start": 157,
              "line_end": 208
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00046945499980211025
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "Input::__init__",
              "complexity": 1,
              "line_start": 18,
              "line_end": 22
            },
            {
              "name": "Input::rawInput",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Input::readInt",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Output::__init__",
              "complexity": 0,
              "line_start": 37,
              "line_end": 38
            },
            {
              "name": "Output::write",
              "complexity": 0,
              "line_start": 40,
              "line_end": 42
            },
            {
              "name": "Output::writeLine",
              "complexity": 0,
              "line_start": 44,
              "line_end": 46
            },
            {
              "name": "Output::finalize",
              "complexity": 1,
              "line_start": 48,
              "line_end": 52
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 59,
              "line_end": 85
            },
            {
              "name": "MDArray::__init__",
              "complexity": 1,
              "line_start": 121,
              "line_end": 127
            },
            {
              "name": "MDArray::_index",
              "complexity": 1,
              "line_start": 129,
              "line_end": 137
            },
            {
              "name": "MDArray::get",
              "complexity": 0,
              "line_start": 139,
              "line_end": 141
            },
            {
              "name": "MDArray::set",
              "complexity": 0,
              "line_start": 143,
              "line_end": 146
            },
            {
              "name": "encode",
              "complexity": 0,
              "line_start": 153,
              "line_end": 154
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 157,
              "line_end": 169
            },
            {
              "name": "main",
              "complexity": 12,
              "line_start": 172,
              "line_end": 206
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00042407000000821427
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001373389995933394
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001093459995900048
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 71,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00037400500013973215
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 17,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "inp",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "iinp",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "outa",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "lmp",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "mp",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "smp",
              "complexity": 0,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "l1d",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "l2d",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "remadd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "ceil",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isprime",
              "complexity": 6,
              "line_start": 71,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003754879999178229
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012206000019432395
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 37,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013217900004747207
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 31,
              "line_start": 8,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 54,
              "line_end": 61
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 63,
              "line_end": 66
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003602199999477307
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 31,
              "line_start": 9,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 39,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 45,
              "line_end": 53
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 55,
              "line_end": 62
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 64,
              "line_end": 67
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 71,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00037328400003389106
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001696799999990617
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 26,
              "line_start": 1,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015822800014575478
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "main",
              "complexity": 14,
              "line_start": 8,
              "line_end": 47
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 58,
              "line_end": 62
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 64,
              "line_end": 72
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 74,
              "line_end": 81
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 83,
              "line_end": 86
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 99,
              "line_end": 110
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 116,
              "line_end": 117
            },
            {
              "name": "i_input",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "l_input",
              "complexity": 0,
              "line_start": 124,
              "line_end": 125
            },
            {
              "name": "li_input",
              "complexity": 0,
              "line_start": 128,
              "line_end": 129
            },
            {
              "name": "il_input",
              "complexity": 0,
              "line_start": 132,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00044753400015906664
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 47,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00020808199997190968
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001836159999584197
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 5,
              "line_end": 6
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 7,
              "line_end": 13
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 14,
              "line_end": 17
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 18,
              "line_end": 19
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 21,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0005246900000202004
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 78,
        "functions_count": 24,
        "raw_output": {
          "file_complexity": 78,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 49,
              "line_end": 55
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 70,
              "line_end": 75
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 78,
              "line_end": 89
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 92,
              "line_end": 101
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 104,
              "line_end": 115
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 118,
              "line_end": 126
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 129,
              "line_end": 139
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 140,
              "line_end": 149
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 150,
              "line_end": 155
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 156,
              "line_end": 161
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 162,
              "line_end": 173
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 174,
              "line_end": 180
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 181,
              "line_end": 185
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 186,
              "line_end": 190
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 191,
              "line_end": 196
            },
            {
              "name": "getVal",
              "complexity": 2,
              "line_start": 197,
              "line_end": 204
            },
            {
              "name": "rec",
              "complexity": 3,
              "line_start": 205,
              "line_end": 221
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0008781060000728758
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 78,
        "functions_count": 24,
        "raw_output": {
          "file_complexity": 78,
          "functions": [
            {
              "name": "main",
              "complexity": 0,
              "line_start": 11,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 23,
              "line_end": 31
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 33,
              "line_end": 40
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 42,
              "line_end": 45
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 49,
              "line_end": 55
            },
            {
              "name": "binary",
              "complexity": 0,
              "line_start": 62,
              "line_end": 63
            },
            {
              "name": "decimal",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 70,
              "line_end": 75
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 78,
              "line_end": 89
            },
            {
              "name": "isPrime",
              "complexity": 6,
              "line_start": 92,
              "line_end": 101
            },
            {
              "name": "maxPrimeFactors",
              "complexity": 6,
              "line_start": 104,
              "line_end": 115
            },
            {
              "name": "countcon",
              "complexity": 3,
              "line_start": 118,
              "line_end": 126
            },
            {
              "name": "lis",
              "complexity": 8,
              "line_start": 129,
              "line_end": 139
            },
            {
              "name": "isSubSequence",
              "complexity": 4,
              "line_start": 140,
              "line_end": 149
            },
            {
              "name": "maxfac",
              "complexity": 3,
              "line_start": 150,
              "line_end": 155
            },
            {
              "name": "p2",
              "complexity": 1,
              "line_start": 156,
              "line_end": 161
            },
            {
              "name": "seive",
              "complexity": 9,
              "line_start": 162,
              "line_end": 173
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 174,
              "line_end": 180
            },
            {
              "name": "denofactinverse",
              "complexity": 1,
              "line_start": 181,
              "line_end": 185
            },
            {
              "name": "numofact",
              "complexity": 1,
              "line_start": 186,
              "line_end": 190
            },
            {
              "name": "sod",
              "complexity": 1,
              "line_start": 191,
              "line_end": 196
            },
            {
              "name": "getVal",
              "complexity": 2,
              "line_start": 197,
              "line_end": 204
            },
            {
              "name": "rec",
              "complexity": 3,
              "line_start": 205,
              "line_end": 221
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0008203869997487345
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 55,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00018428799967296072
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011580799991861568
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 41,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013505500010069227
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "node::__init__",
              "complexity": 2,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "node::mo",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00018296500002179528
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "check",
              "complexity": 2,
              "line_start": 56,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00032305900003848365
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 57,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 57,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "check",
              "complexity": 2,
              "line_start": 56,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00031310999975175946
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010025900019172695
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.810600002107094e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "main",
              "complexity": 28,
              "line_start": 11,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011910399962289375
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 45,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.7483999979886e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "slv",
              "complexity": 16,
              "line_start": 8,
              "line_end": 42
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 43,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001128319995586935
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "mint",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.787500019025174e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.28170000204409e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "main",
              "complexity": 36,
              "line_start": 1,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013169900012144353
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "roll",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.548199982920778e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "sol",
              "complexity": 22,
              "line_start": 35,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015432100008183625
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002937640001619002
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "main",
              "complexity": 32,
              "line_start": 21,
              "line_end": 66
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 108,
              "line_end": 112
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 114,
              "line_end": 122
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 124,
              "line_end": 131
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 133,
              "line_end": 136
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 140,
              "line_end": 146
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00033600400001887465
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "valid",
              "complexity": 2,
              "line_start": 26,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013944300008006394
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.43689999783237e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "main",
              "complexity": 43,
              "line_start": 4,
              "line_end": 47
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 53,
              "line_end": 54
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 57,
              "line_end": 58
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 60,
              "line_end": 61
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 70,
              "line_end": 73
            },
            {
              "name": "answerInteractive",
              "complexity": 0,
              "line_start": 75,
              "line_end": 77
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00025513199989291024
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001223809999828518
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "solve",
              "complexity": 32,
              "line_start": 10,
              "line_end": 59
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017399800026396406
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 49,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015801800009285216
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 49,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 49,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015203700013444177
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 39,
              "line_start": 20,
              "line_end": 60
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 81,
              "line_end": 85
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 87,
              "line_end": 95
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 97,
              "line_end": 104
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 106,
              "line_end": 109
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 113,
              "line_end": 119
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 122,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0004137500000069849
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 39,
              "line_start": 20,
              "line_end": 60
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 66,
              "line_end": 69
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 81,
              "line_end": 85
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 87,
              "line_end": 95
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 97,
              "line_end": 104
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 106,
              "line_end": 109
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 113,
              "line_end": 119
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 122,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00041169699989040964
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 15,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "yes",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "no",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "In",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ln",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "Sn",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "find_gt",
              "complexity": 1,
              "line_start": 13,
              "line_end": 18
            },
            {
              "name": "solve",
              "complexity": 33,
              "line_start": 20,
              "line_end": 61
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 82,
              "line_end": 86
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 88,
              "line_end": 96
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 98,
              "line_end": 105
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 107,
              "line_end": 110
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 114,
              "line_end": 120
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 123,
              "line_end": 134
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0003781929999604472
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 46,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013907299990023603
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "readInt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "readInts",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00015288800022972282
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "readInt",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "readInts",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001213590003317222
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 60,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00040853100017557153
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "read_ints",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "read_matrix",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "around",
              "complexity": 4,
              "line_start": 12,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001062309997905686
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 40,
              "line_start": 3,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00016610300008323975
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "find_cost",
              "complexity": 8,
              "line_start": 18,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001335420001851162
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "roll",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.175499988283264e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011025799994968111
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "roll",
              "complexity": 4,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.044299991321168e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010962699980154866
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011408499995013699
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "answer",
              "complexity": 28,
              "line_start": 3,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001265590003640682
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.052200018937583e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.883700002115802e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "main",
              "complexity": 28,
              "line_start": 10,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011768200010919827
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "main",
              "complexity": 28,
              "line_start": 1,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0001542410000183736
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.462999994662823e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "Node::__str__",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00018878599985328037
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "main",
              "complexity": 25,
              "line_start": 1,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00013994400023875642
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.311600004162756e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.515200013585854e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 7.154399963837932e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00012310200008869288
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 60,
          "functions": [
            {
              "name": "solve",
              "complexity": 58,
              "line_start": 1,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00029734100007772213
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010470799998074654
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "show_ans",
              "complexity": 1,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00010319500006517046
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "strinp",
              "complexity": 2,
              "line_start": 10,
              "line_end": 16
            },
            {
              "name": "alp",
              "complexity": 0,
              "line_start": 17,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 31,
              "line_start": 19,
              "line_end": 61
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017034100028467947
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011024800005543511
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011819300016213674
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 9.113200030697044e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "explorer",
              "complexity": 23,
              "line_start": 7,
              "line_end": 27
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "readint",
              "complexity": 0,
              "line_start": 43,
              "line_end": 44
            },
            {
              "name": "readinti",
              "complexity": 0,
              "line_start": 47,
              "line_end": 48
            },
            {
              "name": "readintt",
              "complexity": 0,
              "line_start": 51,
              "line_end": 52
            },
            {
              "name": "readintl",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "readinttl",
              "complexity": 0,
              "line_start": 59,
              "line_end": 60
            },
            {
              "name": "readintll",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "lstr",
              "complexity": 0,
              "line_start": 66,
              "line_end": 67
            },
            {
              "name": "llstr",
              "complexity": 0,
              "line_start": 69,
              "line_end": 70
            },
            {
              "name": "log",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00017882700012705754
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 55,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00014147699994282448
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 8.477000028506154e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 42,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00011706100031005917
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00034989000005225535
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00030488500033243326
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.00026437899987286073
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002533279998715443
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "1517_D",
      "tags": "dp,graphs,shortest paths",
      "tool": "complexipy",
      "execution_time": 0.0002478870001141331
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "permuteDigits",
              "complexity": 10,
              "line_start": 1,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001160090000666969
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00031480400002692477
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 11,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 26,
              "line_end": 40
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 42,
              "line_end": 52
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 55,
              "line_end": 56
            },
            {
              "name": "prefix_sum",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 70,
              "line_end": 71
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 73,
              "line_end": 74
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 76,
              "line_end": 76
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 77,
              "line_end": 77
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 78,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00029771100025755004
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 43,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.299599969381234e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "candidates",
              "complexity": 6,
              "line_start": 5,
              "line_end": 22
            },
            {
              "name": "solution",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.651400028407807e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "f",
              "complexity": 30,
              "line_start": 3,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010787299970616004
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "mx",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 18,
              "line_start": 12,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.589300003019162e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.312300032121129e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "rec",
              "complexity": 32,
              "line_start": 3,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001322289999734494
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "check",
              "complexity": 5,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010662100021363585
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 60,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 60,
          "functions": [
            {
              "name": "main",
              "complexity": 51,
              "line_start": 8,
              "line_end": 44
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 55,
              "line_end": 59
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 61,
              "line_end": 69
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 71,
              "line_end": 78
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 80,
              "line_end": 83
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002513230001568445
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "main",
              "complexity": 33,
              "line_start": 8,
              "line_end": 35
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00021501499986698036
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "main",
              "complexity": 33,
              "line_start": 8,
              "line_end": 35
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00020406500016179052
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.373299978193245e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "li",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            },
            {
              "name": "pre",
              "complexity": 0,
              "line_start": 15,
              "line_end": 16
            },
            {
              "name": "solve",
              "complexity": 17,
              "line_start": 18,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011318399992887862
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 2,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.99500000741682e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "lint",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "grid",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 14,
              "line_end": 21
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 23,
              "line_end": 24
            },
            {
              "name": "check_prime",
              "complexity": 4,
              "line_start": 26,
              "line_end": 30
            },
            {
              "name": "Bs",
              "complexity": 7,
              "line_start": 31,
              "line_end": 55
            },
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "primefactors",
              "complexity": 5,
              "line_start": 70,
              "line_end": 87
            },
            {
              "name": "ask",
              "complexity": 0,
              "line_start": 98,
              "line_end": 102
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 106,
              "line_end": 117
            },
            {
              "name": "primeFactors",
              "complexity": 2,
              "line_start": 118,
              "line_end": 128
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00025572200001988676
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "fs",
              "complexity": 6,
              "line_start": 5,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011687999995046994
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "fs",
              "complexity": 6,
              "line_start": 5,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00011009699983333121
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "getPrimes",
              "complexity": 7,
              "line_start": 76,
              "line_end": 88
            },
            {
              "name": "primeFactor",
              "complexity": 6,
              "line_start": 89,
              "line_end": 99
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00034986900027433876
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "getStr",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "getInt",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "listStr",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "getStrs",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "isInt",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 71,
              "line_end": 71
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 72,
              "line_end": 72
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "getPrimes",
              "complexity": 7,
              "line_start": 76,
              "line_end": 88
            },
            {
              "name": "primeFactor",
              "complexity": 6,
              "line_start": 89,
              "line_end": 99
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0003549099997144367
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.2087999847572064e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.2920999931084225e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 146,
        "functions_count": 58,
        "raw_output": {
          "file_complexity": 146,
          "functions": [
            {
              "name": "main",
              "complexity": 20,
              "line_start": 1,
              "line_end": 30
            },
            {
              "name": "rant",
              "complexity": 0,
              "line_start": 66,
              "line_end": 110
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 112,
              "line_end": 122
            },
            {
              "name": "memodict",
              "complexity": 0,
              "line_start": 124,
              "line_end": 131
            },
            {
              "name": "pollard_rho",
              "complexity": 25,
              "line_start": 133,
              "line_end": 163
            },
            {
              "name": "prime_factors",
              "complexity": 2,
              "line_start": 165,
              "line_end": 171
            },
            {
              "name": "distinct_factors",
              "complexity": 1,
              "line_start": 173,
              "line_end": 178
            },
            {
              "name": "all_factors",
              "complexity": 5,
              "line_start": 180,
              "line_end": 191
            },
            {
              "name": "make_nCr_mod",
              "complexity": 8,
              "line_start": 193,
              "line_end": 216
            },
            {
              "name": "DisjointSetUnion::__init__",
              "complexity": 0,
              "line_start": 219,
              "line_end": 223
            },
            {
              "name": "DisjointSetUnion::get",
              "complexity": 3,
              "line_start": 225,
              "line_end": 234
            },
            {
              "name": "DisjointSetUnion::union",
              "complexity": 3,
              "line_start": 236,
              "line_end": 246
            },
            {
              "name": "DisjointSetUnion::count_sets",
              "complexity": 0,
              "line_start": 248,
              "line_end": 250
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 256,
              "line_end": 266
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 268,
              "line_end": 269
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 271,
              "line_end": 272
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 274,
              "line_end": 280
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 282,
              "line_end": 283
            },
            {
              "name": "SegmentTree::query",
              "complexity": 5,
              "line_start": 285,
              "line_end": 302
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 304,
              "line_end": 305
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 1,
              "line_start": 308,
              "line_end": 315
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 317,
              "line_end": 320
            },
            {
              "name": "SparseTable::__getitem__",
              "complexity": 0,
              "line_start": 322,
              "line_end": 323
            },
            {
              "name": "SortedList::__init__",
              "complexity": 0,
              "line_start": 326,
              "line_end": 335
            },
            {
              "name": "SortedList::_fen_build",
              "complexity": 3,
              "line_start": 337,
              "line_end": 344
            },
            {
              "name": "SortedList::_fen_update",
              "complexity": 4,
              "line_start": 346,
              "line_end": 352
            },
            {
              "name": "SortedList::_fen_query",
              "complexity": 2,
              "line_start": 354,
              "line_end": 364
            },
            {
              "name": "SortedList::_fen_findkth",
              "complexity": 8,
              "line_start": 366,
              "line_end": 383
            },
            {
              "name": "SortedList::_delete",
              "complexity": 1,
              "line_start": 385,
              "line_end": 402
            },
            {
              "name": "SortedList::_loc_left",
              "complexity": 12,
              "line_start": 404,
              "line_end": 432
            },
            {
              "name": "SortedList::_loc_right",
              "complexity": 9,
              "line_start": 434,
              "line_end": 459
            },
            {
              "name": "SortedList::add",
              "complexity": 3,
              "line_start": 461,
              "line_end": 487
            },
            {
              "name": "SortedList::discard",
              "complexity": 4,
              "line_start": 489,
              "line_end": 495
            },
            {
              "name": "SortedList::remove",
              "complexity": 1,
              "line_start": 497,
              "line_end": 502
            },
            {
              "name": "SortedList::pop",
              "complexity": 1,
              "line_start": 504,
              "line_end": 509
            },
            {
              "name": "SortedList::bisect_left",
              "complexity": 0,
              "line_start": 511,
              "line_end": 514
            },
            {
              "name": "SortedList::bisect_right",
              "complexity": 0,
              "line_start": 516,
              "line_end": 519
            },
            {
              "name": "SortedList::count",
              "complexity": 0,
              "line_start": 521,
              "line_end": 523
            },
            {
              "name": "SortedList::__len__",
              "complexity": 0,
              "line_start": 525,
              "line_end": 527
            },
            {
              "name": "SortedList::__getitem__",
              "complexity": 1,
              "line_start": 529,
              "line_end": 532
            },
            {
              "name": "SortedList::__delitem__",
              "complexity": 1,
              "line_start": 534,
              "line_end": 537
            },
            {
              "name": "SortedList::__contains__",
              "complexity": 2,
              "line_start": 539,
              "line_end": 545
            },
            {
              "name": "SortedList::__iter__",
              "complexity": 0,
              "line_start": 547,
              "line_end": 549
            },
            {
              "name": "SortedList::__reversed__",
              "complexity": 0,
              "line_start": 551,
              "line_end": 553
            },
            {
              "name": "SortedList::__repr__",
              "complexity": 0,
              "line_start": 555,
              "line_end": 557
            },
            {
              "name": "rs",
              "complexity": 0,
              "line_start": 560,
              "line_end": 560
            },
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 561,
              "line_end": 561
            },
            {
              "name": "ria",
              "complexity": 0,
              "line_start": 562,
              "line_end": 562
            },
            {
              "name": "ws",
              "complexity": 0,
              "line_start": 563,
              "line_end": 563
            },
            {
              "name": "wi",
              "complexity": 0,
              "line_start": 564,
              "line_end": 564
            },
            {
              "name": "wia",
              "complexity": 0,
              "line_start": 565,
              "line_end": 565
            },
            {
              "name": "FastReader::__init__",
              "complexity": 0,
              "line_start": 581,
              "line_end": 584
            },
            {
              "name": "FastReader::read",
              "complexity": 4,
              "line_start": 586,
              "line_end": 594
            },
            {
              "name": "FastReader::readline",
              "complexity": 4,
              "line_start": 596,
              "line_end": 603
            },
            {
              "name": "FastWriter::__init__",
              "complexity": 0,
              "line_start": 607,
              "line_end": 610
            },
            {
              "name": "FastWriter::flush",
              "complexity": 0,
              "line_start": 612,
              "line_end": 614
            },
            {
              "name": "FastStdin::__init__",
              "complexity": 0,
              "line_start": 617,
              "line_end": 620
            },
            {
              "name": "FastStdout::__init__",
              "complexity": 0,
              "line_start": 623,
              "line_end": 626
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00410673400028827
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "listtostring",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.648600017593708e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "listtostring",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.052700023748912e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 65,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 65,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018420800006424543
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.073699983564438e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.21869999122282e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00013552500013247482
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.404300034366315e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "smallest",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "largest",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010029900022345828
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "search",
              "complexity": 10,
              "line_start": 1,
              "line_end": 16
            },
            {
              "name": "main",
              "complexity": 2,
              "line_start": 19,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.985999991433346e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.2238999867549865e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.546200004071579e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.0858000172884203e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "dig",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "biggest_left",
              "complexity": 1,
              "line_start": 5,
              "line_end": 9
            },
            {
              "name": "ok",
              "complexity": 2,
              "line_start": 12,
              "line_end": 23
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 26,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 9.059100011654664e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012155900003563147
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.7150000025576446e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "check",
              "complexity": 1,
              "line_start": 10,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00012481600015235017
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "check",
              "complexity": 1,
              "line_start": 10,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001286519996028801
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 88,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00018877599995903438
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010625999993862933
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.262699955390417e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "DFS",
              "complexity": 10,
              "line_start": 4,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.97119999131246e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.571700017346302e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.7855999936437e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "f",
              "complexity": 10,
              "line_start": 9,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.4693000038241735e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.175399989340804e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.433500023675151e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "gmax",
              "complexity": 3,
              "line_start": 13,
              "line_end": 20
            },
            {
              "name": "gmin",
              "complexity": 3,
              "line_start": 22,
              "line_end": 29
            },
            {
              "name": "finalize",
              "complexity": 10,
              "line_start": 33,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00010085000030812807
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "get_smallest",
              "complexity": 6,
              "line_start": 1,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.709400026418734e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 46,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014447300009123865
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "possible",
              "complexity": 5,
              "line_start": 1,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 20,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.38910000816395e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 1,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 5.983299979561707e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.9214000025822315e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "solve",
              "complexity": 39,
              "line_start": 2,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001929239997480181
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "read",
              "complexity": 1,
              "line_start": 24,
              "line_end": 30
            },
            {
              "name": "permute",
              "complexity": 23,
              "line_start": 33,
              "line_end": 54
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 58,
              "line_end": 79
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00019041899986405042
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 32,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 20,
              "line_end": 24
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 26,
              "line_end": 34
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 36,
              "line_end": 43
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 45,
              "line_end": 48
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 52,
              "line_end": 58
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 65,
              "line_end": 75
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 77,
              "line_end": 78
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 83,
              "line_end": 89
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 91,
              "line_end": 92
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 94,
              "line_end": 111
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 113,
              "line_end": 114
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 118,
              "line_end": 128
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 130,
              "line_end": 131
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 133,
              "line_end": 134
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 136,
              "line_end": 142
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 144,
              "line_end": 145
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 147,
              "line_end": 164
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 166,
              "line_end": 167
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 174
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 176,
              "line_end": 190
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 192,
              "line_end": 206
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 208,
              "line_end": 223
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 227,
              "line_end": 229
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 231,
              "line_end": 236
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 238,
              "line_end": 245
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 247,
              "line_end": 252
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 254,
              "line_end": 258
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 260,
              "line_end": 283
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 285,
              "line_end": 290
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 291,
              "line_end": 316
            },
            {
              "name": "findmin",
              "complexity": 3,
              "line_start": 318,
              "line_end": 328
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.001442759999918053
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 78,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 78,
          "functions": [
            {
              "name": "main",
              "complexity": 77,
              "line_start": 1,
              "line_end": 45
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016186500033654738
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 138,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 138,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0002955770000880875
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 19,
              "line_end": 23
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 25,
              "line_end": 33
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 35,
              "line_end": 42
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 44,
              "line_end": 47
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 51,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001585189997967973
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 8.105300003080629e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "check",
              "complexity": 4,
              "line_start": 10,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 4.8332000005757436e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.591799986679689e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "comp",
              "complexity": 2,
              "line_start": 7,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.978099984029541e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "inv_mod",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            },
            {
              "name": "makenum",
              "complexity": 0,
              "line_start": 40,
              "line_end": 40
            },
            {
              "name": "givemax",
              "complexity": 6,
              "line_start": 42,
              "line_end": 49
            },
            {
              "name": "dp",
              "complexity": 12,
              "line_start": 52,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00021733999983553076
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "rec",
              "complexity": 10,
              "line_start": 15,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.424999967042822e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "make_number",
              "complexity": 4,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "find_number",
              "complexity": 4,
              "line_start": 14,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 6.725699995513423e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001625360000616638
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00015604400005031493
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.000134764999984327
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "c",
              "complexity": 26,
              "line_start": 1,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.0001652410001042881
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "c",
              "complexity": 26,
              "line_start": 1,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00016321800012519816
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 7.93300000623276e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "greedy",
              "complexity": 6,
              "line_start": 4,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 0.00014806900026087533
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0915_C",
      "tags": "dp,greedy",
      "tool": "complexipy",
      "execution_time": 3.8993999623926356e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.835699989300338e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 71,
        "functions_count": 16,
        "raw_output": {
          "file_complexity": 71,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 22,
              "line_end": 30
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 32,
              "line_end": 39
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 41,
              "line_end": 44
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 48,
              "line_end": 54
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 65,
              "line_end": 82
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 84,
              "line_end": 89
            },
            {
              "name": "primeFactors",
              "complexity": 5,
              "line_start": 91,
              "line_end": 103
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 106,
              "line_end": 116
            },
            {
              "name": "sieveForSmallestPrimeFactor",
              "complexity": 12,
              "line_start": 119,
              "line_end": 132
            },
            {
              "name": "getPrimeFactorizationLOGN",
              "complexity": 1,
              "line_start": 133,
              "line_end": 139
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 144,
              "line_end": 153
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 154,
              "line_end": 155
            },
            {
              "name": "divideCeil",
              "complexity": 1,
              "line_start": 156,
              "line_end": 159
            },
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 160,
              "line_end": 161
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 162,
              "line_end": 163
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.0006002820000503561
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 7.711600028414978e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "min_sub_array",
              "complexity": 8,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 8.587199999965378e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "calc",
              "complexity": 2,
              "line_start": 59,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00021024599982411019
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.913100014571683e-05
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "int_array",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "float_array",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "str_array",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 0.00010947700002361671
    },
    {
      "true_complexity": "cubic",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0946_D",
      "tags": "dp",
      "tool": "complexipy",
      "execution_time": 6.360999987009563e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 52,
          "functions": []
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014799900009165867
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 104,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 104,
          "functions": [
            {
              "name": "getCandidates",
              "complexity": 11,
              "line_start": 8,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 92,
              "line_start": 33,
              "line_end": 167
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0004972179999640503
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00015404099985971698
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 52,
          "functions": []
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00015784800007168087
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 4,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00015516299981754855
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 11,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001567350000186707
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "main",
              "complexity": 19,
              "line_start": 4,
              "line_end": 73
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00015315900009227335
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "dfs",
              "complexity": 18,
              "line_start": 14,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014182799986883765
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "dfs",
              "complexity": 18,
              "line_start": 12,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0008_C",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00013254900022729998
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 6.342899996525375e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "count_bits",
              "complexity": 3,
              "line_start": 4,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 5.9001999943575356e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "count",
              "complexity": 1,
              "line_start": 6,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 13,
              "line_end": 33
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 39,
              "line_end": 43
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 44,
              "line_end": 52
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 66,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0002066790002572816
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 7.061299993438297e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 4.674799993154011e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "count",
              "complexity": 1,
              "line_start": 4,
              "line_end": 11
            },
            {
              "name": "nc2",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            },
            {
              "name": "answer",
              "complexity": 18,
              "line_start": 16,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 7.563200006188708e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "main",
              "complexity": 18,
              "line_start": 7,
              "line_end": 52
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 67,
              "line_end": 71
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 73,
              "line_end": 81
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 83,
              "line_end": 90
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 92,
              "line_end": 95
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 99,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0002287610000166751
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00021778100017399993
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 14,
              "line_end": 22
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 24,
              "line_end": 31
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 33,
              "line_end": 36
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 40,
              "line_end": 46
            },
            {
              "name": "dict::__missing__",
              "complexity": 0,
              "line_start": 50,
              "line_end": 51
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0003069790000154171
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0016_E",
      "tags": "bitmasks,dp,probabilities",
      "tool": "complexipy",
      "execution_time": 9.106200013775378e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "testIfPossible",
              "complexity": 4,
              "line_start": 214,
              "line_end": 222
            },
            {
              "name": "dfs",
              "complexity": 3,
              "line_start": 230,
              "line_end": 242
            },
            {
              "name": "dfs2",
              "complexity": 8,
              "line_start": 248,
              "line_end": 263
            }
          ]
        }
      },
      "problem": "0071_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0004367239998828154
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "find_solution",
              "complexity": 10,
              "line_start": 51,
              "line_end": 62
            },
            {
              "name": "combination_to_recipe",
              "complexity": 3,
              "line_start": 71,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0071_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002217979999841191
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "calc",
              "complexity": 4,
              "line_start": 15,
              "line_end": 28
            },
            {
              "name": "dfs",
              "complexity": 8,
              "line_start": 31,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0105_B",
      "tags": "brute force,probabilities",
      "tool": "complexipy",
      "execution_time": 9.843600037129363e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 6.944099959582672e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 10,
              "line_end": 14
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 35,
              "line_end": 38
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 42,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 0.0002846159995897324
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "yn",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 0.0001426090002496494
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "yn",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 9.510000018053688e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "yn",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 39,
              "line_end": 46
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 48,
              "line_end": 51
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 55,
              "line_end": 61
            },
            {
              "name": "masks::all_masks_sos",
              "complexity": 8,
              "line_start": 68,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0165_E",
      "tags": "bitmasks,brute force,dfs and similar,dp",
      "tool": "complexipy",
      "execution_time": 0.0002949859999716864
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0285_D",
      "tags": "bitmasks,combinatorics,dp,implementation,meet-in-the-middle",
      "tool": "complexipy",
      "execution_time": 3.061799998249626e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0285_D",
      "tags": "bitmasks,combinatorics,dp,implementation,meet-in-the-middle",
      "tool": "complexipy",
      "execution_time": 2.012799996009562e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0285_D",
      "tags": "bitmasks,combinatorics,dp,implementation,meet-in-the-middle",
      "tool": "complexipy",
      "execution_time": 2.50470002356451e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0449_D",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 6.125500021880725e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "zeta_super",
              "complexity": 7,
              "line_start": 12,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0449_D",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 9.916699991663336e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 2,
              "line_end": 2
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 3,
              "line_end": 3
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 4,
              "line_end": 4
            },
            {
              "name": "LI2",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LS2",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "zeta_transform",
              "complexity": 7,
              "line_start": 22,
              "line_end": 31
            },
            {
              "name": "bit_count",
              "complexity": 0,
              "line_start": 40,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "0449_D",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00018641199994817725
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 5,
              "line_end": 8
            },
            {
              "name": "prsh",
              "complexity": 10,
              "line_start": 11,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0453_B",
      "tags": "bitmasks,brute force,dp",
      "tool": "complexipy",
      "execution_time": 0.0001292830002057599
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.672699990100227e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.686900001615868e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.9834999824961415e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.85409996144881e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.6488000205281423e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 8.197499982998124e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "binom",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.6568000016122824e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.461599999354803e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.2632999844063306e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.414400018504239e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "per",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.5756999750446994e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 2,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.1717000133066904e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00011515699998199125
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.424999967042822e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.305199970782269e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "combination",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 9.600100020179525e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0001235330000781687
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "combination",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.97830003243871e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00010630100041453261
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.789799999751267e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.867099980605417e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.865300004690653e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.58339999972668e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.8089000049221795e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "factorial",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "ncr",
              "complexity": 1,
              "line_start": 8,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 8.755499993640115e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.0627000089443754e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.618799994204892e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.033699977095239e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "giveFactorial",
              "complexity": 2,
              "line_start": 8,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.414999981847359e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.205900015425868e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "c",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 8,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.589600004896056e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 23,
              "line_end": 27
            },
            {
              "name": "probToMove",
              "complexity": 2,
              "line_start": 29,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00010791400018206332
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.332200023782207e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 8.942800013755914e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.581700022754376e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 1,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 1,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.999499995188671e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 2,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.494099963878398e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.022199997663847e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.0443999700510176e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.919900008346303e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 9.087100033866591e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00010170199993808637
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.026399978509289e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "wifi",
              "complexity": 7,
              "line_start": 4,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.860000030428637e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.7308999910455896e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "calc_arrangement",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            },
            {
              "name": "calc_combination",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 8.581100019000587e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.054300021991367e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00015450099999725353
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "C",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.505400031324825e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 1,
              "line_end": 5
            },
            {
              "name": "n_choose_k",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 10,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 9.914699967339402e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.9763000081147766e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.777699966027285e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.198600021889433e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.991300031382707e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.909999976618565e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.197699985932559e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "nCr",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.580399985978147e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "C",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.803799988119863e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.509099987146328e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "cm",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.793699978719815e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.4212000122788595e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 9.336599987364025e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.254599995576427e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.402999997590086e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.015499962406466e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00014497300026050652
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 6.633500015595928e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.297099985706154e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00011265300008744816
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.3450999985216185e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "find_nCr",
              "complexity": 0,
              "line_start": 3,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00012887299999420065
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "sequence_split_up",
              "complexity": 3,
              "line_start": 3,
              "line_end": 12
            },
            {
              "name": "probability",
              "complexity": 5,
              "line_start": 14,
              "line_end": 37
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.0001797390000319865
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 5.4132000059325946e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 3.152899989800062e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.380900024145376e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.863200001636869e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "factorial",
              "complexity": 1,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 4.969399969922961e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.8773999929398997e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 2,
          "functions": [
            {
              "name": "C",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.9536000056396006e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0476_B",
      "tags": "bitmasks,brute force,combinatorics,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 2.314300036232453e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 3.804200014201342e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 3.223099975002697e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 3.169000001435052e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 4.5415999920805916e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 7.611299997734022e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 7.035199996607844e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 6.107499984864262e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 5.8289999742555665e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "0504_D",
      "tags": "bitmasks",
      "tool": "complexipy",
      "execution_time": 4.6137000026647e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 116,
        "functions_count": 50,
        "raw_output": {
          "file_complexity": 116,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.003728140000021085
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 5.69180001548375e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.8300999878847506e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "ctd",
              "complexity": 0,
              "line_start": 67,
              "line_end": 67
            },
            {
              "name": "main",
              "complexity": 6,
              "line_start": 75,
              "line_end": 94
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0002811199997267977
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 9.006999971461482e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "factors",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "inv_mod",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "st",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "val",
              "complexity": 0,
              "line_start": 19,
              "line_end": 19
            },
            {
              "name": "li2",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "li3",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 0.00012056800005666446
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 3.685000001496519e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0510_D",
      "tags": "bitmasks,brute force,dp,math",
      "tool": "complexipy",
      "execution_time": 4.5095000132278074e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.033599998365389e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.5837000016035745e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.199900013190927e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 3.968499959228211e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 7,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0512_B",
      "tags": "data structures,dp,math,number theory,shortest paths",
      "tool": "complexipy",
      "execution_time": 4.2409999878145754e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 4.111800035389024e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.1700999695895007e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B1",
      "tags": "brute force",
      "tool": "complexipy",
      "execution_time": 2.2573000023839995e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 3.5055999887845246e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 3.1569999919156544e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 2.0308999864937505e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 2.060899987554876e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 3.0216999675758416e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "read_input",
              "complexity": 1,
              "line_start": 4,
              "line_end": 12
            },
            {
              "name": "sol",
              "complexity": 5,
              "line_start": 15,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 0,
              "line_start": 34,
              "line_end": 35
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 38,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 8.101299999907496e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "0513_B2",
      "tags": "bitmasks,divide and conquer,math",
      "tool": "complexipy",
      "execution_time": 2.7041000066674314e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0513_C",
      "tags": "bitmasks,probabilities",
      "tool": "complexipy",
      "execution_time": 2.816300002450589e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 98,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 98,
          "functions": []
        }
      },
      "problem": "0513_C",
      "tags": "bitmasks,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00017775500009520329
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 66,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 66,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 14,
              "line_end": 16
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 17,
              "line_end": 21
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 28,
              "line_end": 43
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 45,
              "line_end": 69
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 71,
              "line_end": 79
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 81,
              "line_end": 82
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 84,
              "line_end": 88
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 90,
              "line_end": 99
            }
          ]
        }
      },
      "problem": "0547_C",
      "tags": "bitmasks,combinatorics,dp,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003462119998403068
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 64,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 64,
          "functions": [
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 7,
              "line_end": 22
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 24,
              "line_end": 48
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 50,
              "line_end": 58
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 60,
              "line_end": 61
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 63,
              "line_end": 67
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 69,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "0547_C",
      "tags": "bitmasks,combinatorics,dp,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00028644999974858365
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "fun",
              "complexity": 7,
              "line_start": 24,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.00012614800016308436
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.872300021612318e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.234099995097495e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.6479999633011175e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.4545999824331375e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 4,
              "line_end": 6
            },
            {
              "name": "diff",
              "complexity": 1,
              "line_start": 8,
              "line_end": 9
            },
            {
              "name": "solve",
              "complexity": 4,
              "line_start": 11,
              "line_end": 17
            },
            {
              "name": "I",
              "complexity": 0,
              "line_start": 22,
              "line_end": 22
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 23,
              "line_end": 23
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 24,
              "line_end": 24
            },
            {
              "name": "LI2",
              "complexity": 0,
              "line_start": 25,
              "line_end": 25
            },
            {
              "name": "S",
              "complexity": 0,
              "line_start": 26,
              "line_end": 26
            },
            {
              "name": "LS",
              "complexity": 0,
              "line_start": 27,
              "line_end": 27
            },
            {
              "name": "LS2",
              "complexity": 0,
              "line_start": 28,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 8.759499996813247e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.44329998572357e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.5789000119402772e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "check_combination",
              "complexity": 3,
              "line_start": 3,
              "line_end": 8
            },
            {
              "name": "go",
              "complexity": 2,
              "line_start": 11,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.7900000026857015e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "recurse",
              "complexity": 7,
              "line_start": 4,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.904199997530668e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.391399968677433e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.143500033635064e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "backtracking",
              "complexity": 7,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 11,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 9.214400006385404e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "fast",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "zzz",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "lcd",
              "complexity": 0,
              "line_start": 20,
              "line_end": 20
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 21,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 9.798399969440652e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 15,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.427100015571341e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.8333000247803284e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.76110001525376e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.1757999952096725e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.9766999887215206e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.7028999940957874e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "combine",
              "complexity": 2,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "main",
              "complexity": 11,
              "line_start": 14,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 7.874899984017247e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.488400008995086e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "func",
              "complexity": 9,
              "line_start": 1,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.4454999877198134e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "set",
              "complexity": 0,
              "line_start": 10,
              "line_end": 11
            },
            {
              "name": "isOn",
              "complexity": 0,
              "line_start": 13,
              "line_end": 14
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.241799999566865e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.986799998121569e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.75320003311208e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "subsets",
              "complexity": 3,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "computeValidProblemsets",
              "complexity": 0,
              "line_start": 9,
              "line_end": 11
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.431299976204173e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.7502999980933964e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.00159997298033e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.8895000266638817e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.7071999991458142e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 5,
          "functions": [
            {
              "name": "subsets",
              "complexity": 1,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.583700026865699e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.7010999929188984e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.3703999886492966e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 35,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 9.716400018078275e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 13,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.757000033350778e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "gen",
              "complexity": 3,
              "line_start": 1,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.879200014329399e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.540600027918117e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "isValid",
              "complexity": 1,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.7711000004492234e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.9066000277234707e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 11,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.7060000067867804e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.995400013285689e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.0206999781512422e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 2,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 2,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.281199997218209e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.758100001505227e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.739100000326289e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "check",
              "complexity": 7,
              "line_start": 11,
              "line_end": 22
            },
            {
              "name": "brute",
              "complexity": 3,
              "line_start": 24,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.8739999985846225e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "check",
              "complexity": 2,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.596799979277421e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.686200039330288e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.549500019697007e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 17,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.8411000079795485e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.14789999720233e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "fastio",
              "complexity": 0,
              "line_start": 2,
              "line_end": 9
            },
            {
              "name": "debug",
              "complexity": 0,
              "line_start": 12,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.999200013524387e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.546799987612758e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 4,
          "functions": [
            {
              "name": "powerset",
              "complexity": 0,
              "line_start": 2,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.6669000110123307e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.8251999740168685e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.656899980342132e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.080700000486104e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.868300018439186e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "I",
              "complexity": 0,
              "line_start": 1,
              "line_end": 1
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.0456000078847865e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.843199965558597e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.6810999770532362e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.275299993925728e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.919699980135192e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.4385999950027326e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.5048000022943597e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 0,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 0,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 1.3565000244852854e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.048899978035479e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.796299986584927e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 12,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.523600025800988e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.684900002554059e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "check_combos",
              "complexity": 6,
              "line_start": 1,
              "line_end": 12
            },
            {
              "name": "prog",
              "complexity": 1,
              "line_start": 14,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.183599998621503e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 51,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 51,
          "functions": [
            {
              "name": "swaparr",
              "complexity": 0,
              "line_start": 7,
              "line_end": 10
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 13,
              "line_end": 16
            },
            {
              "name": "nCr",
              "complexity": 2,
              "line_start": 19,
              "line_end": 26
            },
            {
              "name": "upper_bound",
              "complexity": 3,
              "line_start": 29,
              "line_end": 37
            },
            {
              "name": "primefs",
              "complexity": 5,
              "line_start": 40,
              "line_end": 54
            },
            {
              "name": "power",
              "complexity": 4,
              "line_start": 57,
              "line_end": 67
            },
            {
              "name": "swap",
              "complexity": 0,
              "line_start": 70,
              "line_end": 74
            },
            {
              "name": "find",
              "complexity": 2,
              "line_start": 84,
              "line_end": 93
            },
            {
              "name": "union",
              "complexity": 2,
              "line_start": 98,
              "line_end": 105
            },
            {
              "name": "sieve",
              "complexity": 6,
              "line_start": 108,
              "line_end": 116
            },
            {
              "name": "spf_sieve",
              "complexity": 12,
              "line_start": 120,
              "line_end": 130
            },
            {
              "name": "factoriazation",
              "complexity": 1,
              "line_start": 136,
              "line_end": 141
            },
            {
              "name": "int_array",
              "complexity": 0,
              "line_start": 146,
              "line_end": 147
            },
            {
              "name": "str_array",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.0004724410000562784
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "find",
              "complexity": 11,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.920100031493348e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.734100007728557e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.329400012968108e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.167999966535717e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "combinations",
              "complexity": 4,
              "line_start": 1,
              "line_end": 10
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 13,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 5.776900025011855e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 13,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 13,
          "functions": [
            {
              "name": "GSB",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.197700031407294e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.169899966655066e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.0977999813330825e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.469500006758608e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.3803999940573703e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.464599992890726e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "suma_o_resta",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            },
            {
              "name": "diferencia",
              "complexity": 3,
              "line_start": 4,
              "line_end": 13
            },
            {
              "name": "no_sets",
              "complexity": 12,
              "line_start": 15,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.669599997621845e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "isValidSet",
              "complexity": 4,
              "line_start": 1,
              "line_end": 7
            },
            {
              "name": "countValidSubsets",
              "complexity": 4,
              "line_start": 9,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 6.65360003040405e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.7191999834030867e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.6530000013735844e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "fact",
              "complexity": 1,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "lower_bound",
              "complexity": 4,
              "line_start": 7,
              "line_end": 19
            },
            {
              "name": "upper_bound",
              "complexity": 4,
              "line_start": 20,
              "line_end": 34
            },
            {
              "name": "abs",
              "complexity": 2,
              "line_start": 36,
              "line_end": 37
            },
            {
              "name": "binary_search",
              "complexity": 3,
              "line_start": 38,
              "line_end": 50
            },
            {
              "name": "kadane",
              "complexity": 3,
              "line_start": 51,
              "line_end": 60
            },
            {
              "name": "pref",
              "complexity": 1,
              "line_start": 61,
              "line_end": 65
            },
            {
              "name": "graph",
              "complexity": 2,
              "line_start": 66,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.0002258250001432316
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.1727999814611394e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.4497000140399905e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 3.285200000391342e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 2.8704000214929692e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.5415999920805916e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0550_B",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 4.1727999814611394e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "output",
              "complexity": 0,
              "line_start": 10,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 16,
              "line_start": 16,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0580_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011398500009818235
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "main",
              "complexity": 25,
              "line_start": 5,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 37,
              "line_end": 41
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 62,
              "line_end": 65
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0580_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0003631949998634809
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "main",
              "complexity": 25,
              "line_start": 5,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 37,
              "line_end": 41
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 53,
              "line_end": 60
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 62,
              "line_end": 65
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 68,
              "line_end": 74
            }
          ]
        }
      },
      "problem": "0580_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00029315199981283513
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012173000004622736
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 53,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 53,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "ok",
              "complexity": 38,
              "line_start": 67,
              "line_end": 101
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0005630720002045564
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "possible",
              "complexity": 50,
              "line_start": 1,
              "line_end": 63
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00024061400017671986
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 16,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012083699994036579
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 50,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001954289996319858
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 9.502900002189563e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 44,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00020616799974959577
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00012318299968683277
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 116,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 116,
          "functions": [
            {
              "name": "func",
              "complexity": 97,
              "line_start": 5,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00028661099986493355
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "chnge",
              "complexity": 1,
              "line_start": 1,
              "line_end": 3
            }
          ]
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001228419996550656
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 14,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.0001125220001085836
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 33,
          "functions": []
        }
      },
      "problem": "0581_D",
      "tags": "bitmasks,brute force,constructive algorithms,geometry,implementation,math",
      "tool": "complexipy",
      "execution_time": 0.00011519800000314717
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 22,
          "functions": [
            {
              "name": "dfs",
              "complexity": 9,
              "line_start": 29,
              "line_end": 38
            },
            {
              "name": "hnbhai",
              "complexity": 12,
              "line_start": 40,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00020227200002409518
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 14,
              "line_start": 6,
              "line_end": 28
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 39,
              "line_end": 47
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 48,
              "line_end": 55
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 56,
              "line_end": 59
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 61,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 0.00028026899963151664
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 9.363700019093812e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.952000032673823e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "0678_E",
      "tags": "bitmasks,dp,math,probabilities",
      "tool": "complexipy",
      "execution_time": 7.775699987178086e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 9.990899980039103e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 87,
        "functions_count": 28,
        "raw_output": {
          "file_complexity": 87,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 72,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 98,
              "line_end": 99
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 101,
              "line_end": 118
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 125,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 140,
              "line_end": 141
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 143,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 151,
              "line_end": 152
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 154,
              "line_end": 171
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 173,
              "line_end": 174
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 181,
              "line_end": 185
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 187,
              "line_end": 201
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 203,
              "line_end": 217
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 219,
              "line_end": 234
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 238,
              "line_end": 240
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 242,
              "line_end": 247
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 257,
              "line_end": 267
            },
            {
              "name": "binarySearch",
              "complexity": 4,
              "line_start": 271,
              "line_end": 282
            },
            {
              "name": "binarySearch1",
              "complexity": 4,
              "line_start": 283,
              "line_end": 294
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.0017161359996862302
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "bit",
              "complexity": 2,
              "line_start": 22,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.0001067819998752384
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "dfs",
              "complexity": 9,
              "line_start": 30,
              "line_end": 39
            },
            {
              "name": "setting",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "hnbhai",
              "complexity": 22,
              "line_start": 50,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.000233340000249882
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "lvl",
              "complexity": 2,
              "line_start": 1,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 9.896599976855214e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "find",
              "complexity": 5,
              "line_start": 1,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00013258999979370856
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00010214299982180819
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "maxx",
              "complexity": 0,
              "line_start": 1,
              "line_end": 2
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 6.456200026150327e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "prime2",
              "complexity": 4,
              "line_start": 1,
              "line_end": 13
            },
            {
              "name": "arrivo",
              "complexity": 13,
              "line_start": 15,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00011860399990837323
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "hgt",
              "complexity": 3,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "up",
              "complexity": 4,
              "line_start": 16,
              "line_end": 24
            },
            {
              "name": "left",
              "complexity": 2,
              "line_start": 26,
              "line_end": 33
            },
            {
              "name": "right",
              "complexity": 2,
              "line_start": 35,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00013141799990989966
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 1,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 6.861900010335376e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "find_level",
              "complexity": 3,
              "line_start": 8,
              "line_end": 14
            },
            {
              "name": "move_U",
              "complexity": 1,
              "line_start": 16,
              "line_end": 26
            },
            {
              "name": "move_L",
              "complexity": 1,
              "line_start": 28,
              "line_end": 38
            },
            {
              "name": "move_R",
              "complexity": 1,
              "line_start": 40,
              "line_end": 50
            },
            {
              "name": "move",
              "complexity": 2,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "process",
              "complexity": 1,
              "line_start": 61,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.0001729460000206018
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "pow2",
              "complexity": 1,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 9.686299972599954e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 7.089400014592684e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 6.12659996477305e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "l",
              "complexity": 5,
              "line_start": 1,
              "line_end": 11
            },
            {
              "name": "r",
              "complexity": 5,
              "line_start": 13,
              "line_end": 23
            },
            {
              "name": "u",
              "complexity": 7,
              "line_start": 25,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00017507999973531696
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00028141099983258755
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "ii",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "si",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "mi",
              "complexity": 0,
              "line_start": 17,
              "line_end": 17
            },
            {
              "name": "li",
              "complexity": 0,
              "line_start": 18,
              "line_end": 18
            },
            {
              "name": "bo",
              "complexity": 0,
              "line_start": 26,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 33,
              "line_start": 32,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 0.00024382000037803664
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "main",
              "complexity": 24,
              "line_start": 8,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 9.197300005325815e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "0792_D",
      "tags": "bitmasks,trees",
      "tool": "complexipy",
      "execution_time": 8.376799996767659e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 160,
        "functions_count": 45,
        "raw_output": {
          "file_complexity": 160,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 25,
              "line_end": 29
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 31,
              "line_end": 39
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 41,
              "line_end": 48
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 50,
              "line_end": 53
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 57,
              "line_end": 63
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 72,
              "line_end": 82
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 84,
              "line_end": 85
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 98,
              "line_end": 99
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 101,
              "line_end": 118
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 120,
              "line_end": 121
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 124,
              "line_end": 134
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 136,
              "line_end": 137
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 139,
              "line_end": 140
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 142,
              "line_end": 148
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 150,
              "line_end": 151
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 153,
              "line_end": 170
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 172,
              "line_end": 173
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 177,
              "line_end": 181
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 183,
              "line_end": 197
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 199,
              "line_end": 213
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 215,
              "line_end": 230
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 234,
              "line_end": 236
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 238,
              "line_end": 243
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 250,
              "line_end": 260
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 263,
              "line_end": 267
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 269,
              "line_end": 272
            },
            {
              "name": "DSU::union",
              "complexity": 3,
              "line_start": 274,
              "line_end": 283
            },
            {
              "name": "DSU::size",
              "complexity": 0,
              "line_start": 285,
              "line_end": 286
            },
            {
              "name": "DSU::top",
              "complexity": 0,
              "line_start": 288,
              "line_end": 291
            },
            {
              "name": "LazySegTree::__init__",
              "complexity": 54,
              "line_start": 295,
              "line_end": 401
            },
            {
              "name": "makeNode",
              "complexity": 0,
              "line_start": 407,
              "line_end": 409
            },
            {
              "name": "getTotal",
              "complexity": 0,
              "line_start": 412,
              "line_end": 413
            },
            {
              "name": "getCount",
              "complexity": 0,
              "line_start": 416,
              "line_end": 417
            },
            {
              "name": "nodeOp",
              "complexity": 0,
              "line_start": 423,
              "line_end": 428
            },
            {
              "name": "mapping",
              "complexity": 1,
              "line_start": 434,
              "line_end": 439
            },
            {
              "name": "composition",
              "complexity": 1,
              "line_start": 442,
              "line_end": 444
            },
            {
              "name": "memodict",
              "complexity": 0,
              "line_start": 446,
              "line_end": 453
            },
            {
              "name": "pollard_rho",
              "complexity": 25,
              "line_start": 456,
              "line_end": 486
            },
            {
              "name": "prime_factors",
              "complexity": 2,
              "line_start": 489,
              "line_end": 495
            },
            {
              "name": "distinct_factors",
              "complexity": 1,
              "line_start": 498,
              "line_end": 503
            },
            {
              "name": "all_factors",
              "complexity": 5,
              "line_start": 506,
              "line_end": 517
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 520,
              "line_end": 532
            },
            {
              "name": "binarySearch1",
              "complexity": 4,
              "line_start": 534,
              "line_end": 546
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.003423395000027085
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 9.807500009628711e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.000335933999849658
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 58,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 58,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.0004098429999430664
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.0004338079997978639
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 59,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 59,
          "functions": [
            {
              "name": "_heappush_max",
              "complexity": 0,
              "line_start": 13,
              "line_end": 15
            },
            {
              "name": "_heappushpop_max",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "Prime::__init__",
              "complexity": 14,
              "line_start": 27,
              "line_end": 42
            },
            {
              "name": "Prime::Factorize",
              "complexity": 25,
              "line_start": 44,
              "line_end": 68
            },
            {
              "name": "Prime::Divisors",
              "complexity": 3,
              "line_start": 70,
              "line_end": 78
            },
            {
              "name": "Prime::Is_Prime",
              "complexity": 0,
              "line_start": 80,
              "line_end": 81
            },
            {
              "name": "Prime::Totient",
              "complexity": 1,
              "line_start": 83,
              "line_end": 87
            },
            {
              "name": "Prime::Mebius",
              "complexity": 6,
              "line_start": 89,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003670419996524288
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 5.694699984815088e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "getMul",
              "complexity": 1,
              "line_start": 8,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.00011390399959054776
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "bino",
              "complexity": 0,
              "line_start": 8,
              "line_end": 11
            },
            {
              "name": "find",
              "complexity": 15,
              "line_start": 14,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 9.706300033940352e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "do",
              "complexity": 16,
              "line_start": 4,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 6.711600008202367e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "Calculate_Mobius",
              "complexity": 13,
              "line_start": 13,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 9.262499997930718e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 4.554600036499323e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 3.976500011049211e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 59,
              "line_end": 63
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 67,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "0803_F",
      "tags": "bitmasks,combinatorics,number theory",
      "tool": "complexipy",
      "execution_time": 0.00023698699988017324
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1038_F",
      "tags": "dp,strings",
      "tool": "complexipy",
      "execution_time": 9.337600022263359e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "main",
              "complexity": 3,
              "line_start": 6,
              "line_end": 30
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 36,
              "line_end": 40
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 41,
              "line_end": 49
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 50,
              "line_end": 57
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 58,
              "line_end": 61
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 63,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00038265099965428817
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001515260000815033
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "main",
              "complexity": 8,
              "line_start": 1,
              "line_end": 30
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.597300009365426e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "main",
              "complexity": 9,
              "line_start": 1,
              "line_end": 27
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.435200020860066e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.22590001107892e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.648499993389123e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 8,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.004099981917534e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010460799967404455
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.928099992364878e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 9,
          "functions": [
            {
              "name": "count_k",
              "complexity": 4,
              "line_start": 9,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.608299983985489e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 3,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.779899993285653e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.004400009056553e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.2891000248346245e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 38,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011389500014047371
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.927199981670128e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.085600014353986e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 7,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.0734999604173936e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 4,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 4,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.826500036069774e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 72,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00032942100006039254
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 28,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 28,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 17,
              "line_start": 72,
              "line_end": 93
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0003249729998060502
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00012120799965487095
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001007400001071801
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 19,
              "line_end": 23
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 25,
              "line_end": 33
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 35,
              "line_end": 42
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 44,
              "line_end": 47
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 51,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002500309997230943
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 5,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 5,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.294799979717936e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.70870003887103e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.938200001764926e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.528500014406745e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 18,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.515399971045554e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.940100001884275e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.116300023175427e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.663399967190344e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001907500000015716
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "readline",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010763299997051945
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 27,
          "functions": []
        }
      },
      "problem": "1051_D",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010286399992764927
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "reads",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "calc",
              "complexity": 6,
              "line_start": 27,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00012249099972905242
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 48,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 48,
          "functions": [
            {
              "name": "Hamilton",
              "complexity": 17,
              "line_start": 49,
              "line_end": 80
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00020050800003446057
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "read",
              "complexity": 0,
              "line_start": 2,
              "line_end": 3
            },
            {
              "name": "reads",
              "complexity": 0,
              "line_start": 4,
              "line_end": 5
            },
            {
              "name": "calc",
              "complexity": 6,
              "line_start": 23,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00013037600001553074
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "solve",
              "complexity": 15,
              "line_start": 10,
              "line_end": 28
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 31,
              "line_end": 48
            }
          ]
        }
      },
      "problem": "1102_F",
      "tags": "binary search,bitmasks,brute force,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00014697699998578173
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 31,
          "functions": [
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "to_bits",
              "complexity": 1,
              "line_start": 34,
              "line_end": 38
            },
            {
              "name": "count_sat_users",
              "complexity": 1,
              "line_start": 45,
              "line_end": 52
            },
            {
              "name": "main",
              "complexity": 27,
              "line_start": 55,
              "line_end": 133
            }
          ]
        }
      },
      "problem": "1185_F",
      "tags": "bitmasks,brute force",
      "tool": "complexipy",
      "execution_time": 0.00026106200039066607
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 12,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 12,
          "functions": [
            {
              "name": "recur",
              "complexity": 11,
              "line_start": 8,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 8.541100032743998e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "main",
              "complexity": 24,
              "line_start": 6,
              "line_end": 37
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 43,
              "line_end": 47
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 48,
              "line_end": 56
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 57,
              "line_end": 64
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 65,
              "line_end": 68
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 70,
              "line_end": 76
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00030453499994109734
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 8.962899983089301e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "lol",
              "complexity": 3,
              "line_start": 4,
              "line_end": 14
            },
            {
              "name": "sp",
              "complexity": 9,
              "line_start": 17,
              "line_end": 56
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00018756300005406956
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 11,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 11,
          "functions": [
            {
              "name": "calc",
              "complexity": 11,
              "line_start": 11,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 6.914999994478421e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 14,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 14,
          "functions": [
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 20,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 9.793400022317655e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "calc",
              "complexity": 9,
              "line_start": 11,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 5.589600004896056e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 1,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 9.051000006365939e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "ri",
              "complexity": 0,
              "line_start": 30,
              "line_end": 31
            },
            {
              "name": "main",
              "complexity": 28,
              "line_start": 37,
              "line_end": 66
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00012932399977216846
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "out1",
              "complexity": 4,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "out2",
              "complexity": 4,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "out3",
              "complexity": 4,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "column",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00011347400004524388
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "out1",
              "complexity": 4,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "out2",
              "complexity": 4,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "out3",
              "complexity": 4,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "column",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.00011163999988639262
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 19,
          "functions": [
            {
              "name": "out1",
              "complexity": 4,
              "line_start": 2,
              "line_end": 7
            },
            {
              "name": "out2",
              "complexity": 4,
              "line_start": 8,
              "line_end": 13
            },
            {
              "name": "out3",
              "complexity": 4,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "column",
              "complexity": 0,
              "line_start": 20,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0001393530001223553
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "findsum",
              "complexity": 1,
              "line_start": 3,
              "line_end": 7
            },
            {
              "name": "finda",
              "complexity": 3,
              "line_start": 9,
              "line_end": 15
            },
            {
              "name": "findb",
              "complexity": 3,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "findc",
              "complexity": 3,
              "line_start": 25,
              "line_end": 31
            }
          ]
        }
      },
      "problem": "1185_G1",
      "tags": "bitmasks,combinatorics,dp",
      "tool": "complexipy",
      "execution_time": 0.0001789080001799448
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "main",
              "complexity": 16,
              "line_start": 1,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014160699993226444
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 52,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 52,
          "functions": [
            {
              "name": "main",
              "complexity": 43,
              "line_start": 6,
              "line_end": 29
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 35,
              "line_end": 39
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 40,
              "line_end": 48
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 49,
              "line_end": 56
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 57,
              "line_end": 60
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 62,
              "line_end": 68
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00033086399980675196
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 34,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00010975700024573598
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "naiveSolve",
              "complexity": 0,
              "line_start": 2,
              "line_end": 6
            },
            {
              "name": "main",
              "complexity": 38,
              "line_start": 10,
              "line_end": 64
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 72,
              "line_end": 73
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 74,
              "line_end": 75
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 76,
              "line_end": 77
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 79,
              "line_end": 80
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 84,
              "line_end": 87
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 89,
              "line_end": 92
            },
            {
              "name": "answerInteractive",
              "complexity": 6,
              "line_start": 94,
              "line_end": 100
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00031323099983637803
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 8,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 8,
          "functions": [
            {
              "name": "rnd",
              "complexity": 0,
              "line_start": 3,
              "line_end": 6
            },
            {
              "name": "randrange",
              "complexity": 0,
              "line_start": 7,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 9.898700000121607e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 42,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00015323899970098864
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 44,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 44,
          "functions": [
            {
              "name": "f",
              "complexity": 0,
              "line_start": 3,
              "line_end": 5
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014613599978474667
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.964299998595379e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 20,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 6.842899983894313e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 6,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 4.763000015373109e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 10,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.439200003820588e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.216500009439187e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "maxsa",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "fu",
              "complexity": 10,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00014374100010172697
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "maxsa",
              "complexity": 3,
              "line_start": 2,
              "line_end": 10
            },
            {
              "name": "fu",
              "complexity": 10,
              "line_start": 12,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0001418880001438083
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 23,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 5.3972000387148e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 4,
              "line_end": 37
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 39,
              "line_end": 72
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.00012368299985610065
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 73,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002706909999687923
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 10,
              "line_start": 73,
              "line_end": 98
            }
          ]
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 0.0002743469999586523
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1209_E1",
      "tags": "bitmasks,brute force,dp,greedy,sortings",
      "tool": "complexipy",
      "execution_time": 8.12729999779549e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.426900012636906e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 21,
          "functions": []
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011695099965436384
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 15,
          "functions": []
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010754300001281081
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "get",
              "complexity": 0,
              "line_start": 8,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010166199990635505
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "cord",
              "complexity": 0,
              "line_start": 71,
              "line_end": 72
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 74,
              "line_end": 105
            }
          ]
        }
      },
      "problem": "1238_E",
      "tags": "bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.000337787000262324
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 72,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 72,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 2,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 53,
              "line_start": 23,
              "line_end": 75
            },
            {
              "name": "build_num_map",
              "complexity": 3,
              "line_start": 78,
              "line_end": 83
            },
            {
              "name": "find_cycle",
              "complexity": 5,
              "line_start": 86,
              "line_end": 98
            },
            {
              "name": "calc_sums",
              "complexity": 4,
              "line_start": 101,
              "line_end": 109
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00047350299973913934
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 70,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 70,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 2,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 46,
              "line_start": 23,
              "line_end": 67
            },
            {
              "name": "build_answer",
              "complexity": 5,
              "line_start": 70,
              "line_end": 82
            },
            {
              "name": "build_num_map",
              "complexity": 3,
              "line_start": 85,
              "line_end": 90
            },
            {
              "name": "find_cycle",
              "complexity": 5,
              "line_start": 93,
              "line_end": 105
            },
            {
              "name": "calc_sums",
              "complexity": 4,
              "line_start": 108,
              "line_end": 116
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00048301099968739436
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 94,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 94,
          "functions": [
            {
              "name": "main",
              "complexity": 6,
              "line_start": 2,
              "line_end": 20
            },
            {
              "name": "solve",
              "complexity": 68,
              "line_start": 23,
              "line_end": 86
            },
            {
              "name": "calc_last_one",
              "complexity": 2,
              "line_start": 89,
              "line_end": 94
            },
            {
              "name": "build_answer",
              "complexity": 5,
              "line_start": 97,
              "line_end": 109
            },
            {
              "name": "build_num_map",
              "complexity": 3,
              "line_start": 112,
              "line_end": 117
            },
            {
              "name": "find_cycle",
              "complexity": 5,
              "line_start": 120,
              "line_end": 132
            },
            {
              "name": "calc_sums",
              "complexity": 4,
              "line_start": 135,
              "line_end": 143
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.0004569319999063737
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 61,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 61,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 27
            },
            {
              "name": "compute_mask2i2cp",
              "complexity": 12,
              "line_start": 30,
              "line_end": 43
            },
            {
              "name": "output",
              "complexity": 11,
              "line_start": 46,
              "line_end": 64
            },
            {
              "name": "compute_mask_i2cp",
              "complexity": 20,
              "line_start": 67,
              "line_end": 97
            },
            {
              "name": "compute_previous_mask",
              "complexity": 16,
              "line_start": 100,
              "line_end": 118
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.0002801179998641601
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 73,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 73,
          "functions": [
            {
              "name": "main",
              "complexity": 1,
              "line_start": 5,
              "line_end": 27
            },
            {
              "name": "compute_mask2i2cp",
              "complexity": 24,
              "line_start": 30,
              "line_end": 50
            },
            {
              "name": "output",
              "complexity": 11,
              "line_start": 53,
              "line_end": 71
            },
            {
              "name": "compute_mask_i2cp",
              "complexity": 20,
              "line_start": 74,
              "line_end": 104
            },
            {
              "name": "compute_previous_mask",
              "complexity": 16,
              "line_start": 107,
              "line_end": 125
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.0002893860000767745
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "build_mask",
              "complexity": 4,
              "line_start": 16,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00018211299993708963
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "get_graph",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "chain",
              "complexity": 7,
              "line_start": 12,
              "line_end": 39
            },
            {
              "name": "helper",
              "complexity": 13,
              "line_start": 41,
              "line_end": 59
            },
            {
              "name": "solve",
              "complexity": 9,
              "line_start": 61,
              "line_end": 82
            },
            {
              "name": "result",
              "complexity": 3,
              "line_start": 84,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00023349000002781395
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "get_graph",
              "complexity": 1,
              "line_start": 5,
              "line_end": 10
            },
            {
              "name": "chain",
              "complexity": 7,
              "line_start": 12,
              "line_end": 39
            },
            {
              "name": "helper",
              "complexity": 13,
              "line_start": 41,
              "line_end": 59
            },
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 60,
              "line_end": 84
            },
            {
              "name": "result",
              "complexity": 3,
              "line_start": 86,
              "line_end": 97
            }
          ]
        }
      },
      "problem": "1242_C",
      "tags": "bitmasks,dfs and similar,dp,graphs",
      "tool": "complexipy",
      "execution_time": 0.00023578399986945442
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "check",
              "complexity": 13,
              "line_start": 6,
              "line_end": 18
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 20,
              "line_end": 32
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 38,
              "line_end": 42
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 43,
              "line_end": 51
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 52,
              "line_end": 59
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 60,
              "line_end": 63
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 65,
              "line_end": 71
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00021637800000462448
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 13,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "vsInput",
              "complexity": 0,
              "line_start": 10,
              "line_end": 12
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 16,
              "line_end": 20
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "Ceil",
              "complexity": 0,
              "line_start": 55,
              "line_end": 55
            },
            {
              "name": "value",
              "complexity": 0,
              "line_start": 56,
              "line_end": 56
            },
            {
              "name": "array",
              "complexity": 0,
              "line_start": 57,
              "line_end": 57
            },
            {
              "name": "Int",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "Str",
              "complexity": 0,
              "line_start": 59,
              "line_end": 59
            },
            {
              "name": "arrayS",
              "complexity": 0,
              "line_start": 60,
              "line_end": 60
            },
            {
              "name": "ok",
              "complexity": 14,
              "line_start": 67,
              "line_end": 82
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00029613799961225595
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 2,
              "line_end": 55
            },
            {
              "name": "oneLineArrayPrint",
              "complexity": 0,
              "line_start": 61,
              "line_end": 62
            },
            {
              "name": "multiLineArrayPrint",
              "complexity": 0,
              "line_start": 63,
              "line_end": 64
            },
            {
              "name": "multiLineArrayOfArraysPrint",
              "complexity": 0,
              "line_start": 65,
              "line_end": 66
            },
            {
              "name": "readIntArr",
              "complexity": 0,
              "line_start": 68,
              "line_end": 69
            },
            {
              "name": "makeArr",
              "complexity": 1,
              "line_start": 73,
              "line_end": 83
            },
            {
              "name": "queryInteractive",
              "complexity": 0,
              "line_start": 85,
              "line_end": 88
            },
            {
              "name": "answerInteractive",
              "complexity": 0,
              "line_start": 90,
              "line_end": 92
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00021598800003630458
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 69,
        "functions_count": 29,
        "raw_output": {
          "file_complexity": 69,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 24,
              "line_end": 28
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 30,
              "line_end": 38
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 40,
              "line_end": 47
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 49,
              "line_end": 52
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 56,
              "line_end": 62
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 70,
              "line_end": 80
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 82,
              "line_end": 83
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 85,
              "line_end": 86
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 88,
              "line_end": 94
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 99,
              "line_end": 116
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 118,
              "line_end": 119
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 122,
              "line_end": 132
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 134,
              "line_end": 135
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 137,
              "line_end": 138
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 140,
              "line_end": 146
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 148,
              "line_end": 149
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 151,
              "line_end": 168
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 170,
              "line_end": 171
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 175,
              "line_end": 179
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 181,
              "line_end": 195
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 197,
              "line_end": 211
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 213,
              "line_end": 228
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 232,
              "line_end": 234
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 236,
              "line_end": 241
            },
            {
              "name": "SieveOfEratosthenes",
              "complexity": 6,
              "line_start": 247,
              "line_end": 257
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 259,
              "line_end": 271
            },
            {
              "name": "binarySearch1",
              "complexity": 3,
              "line_start": 273,
              "line_end": 285
            },
            {
              "name": "find",
              "complexity": 14,
              "line_start": 292,
              "line_end": 310
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.001348703000076057
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "find_pair",
              "complexity": 15,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "backtracking",
              "complexity": 12,
              "line_start": 20,
              "line_end": 29
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 31,
              "line_end": 46
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00012623799966604565
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "solve",
              "complexity": 19,
              "line_start": 9,
              "line_end": 42
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.616200011601904e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "solve",
              "complexity": 19,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.039100021051127e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.109500009188196e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "check",
              "complexity": 20,
              "line_start": 9,
              "line_end": 27
            },
            {
              "name": "main",
              "complexity": 3,
              "line_start": 28,
              "line_end": 40
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 47,
              "line_end": 51
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 53,
              "line_end": 61
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 63,
              "line_end": 70
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 72,
              "line_end": 75
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 79,
              "line_end": 85
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00023270900010174955
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "possible",
              "complexity": 23,
              "line_start": 69,
              "line_end": 95
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002475669998602825
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.619400003022747e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 39,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002085030000671395
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 76,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00027773400006481097
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 47,
        "functions_count": 9,
        "raw_output": {
          "file_complexity": 47,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 12,
              "line_end": 16
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 18,
              "line_end": 26
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 28,
              "line_end": 35
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 37,
              "line_end": 40
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 44,
              "line_end": 50
            },
            {
              "name": "prod",
              "complexity": 1,
              "line_start": 60,
              "line_end": 64
            },
            {
              "name": "gcd",
              "complexity": 1,
              "line_start": 67,
              "line_end": 70
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 73,
              "line_end": 73
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 76,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00031282999998438754
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.225699982882361e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "isPoss",
              "complexity": 14,
              "line_start": 1,
              "line_end": 17
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.980199987083324e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 11,
              "line_end": 34
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.415899992542109e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "main",
              "complexity": 37,
              "line_start": 4,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.115200009546243e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 4,
              "line_end": 8
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00015976199983924744
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "ya",
              "complexity": 3,
              "line_start": 27,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00012889299978269264
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.411199981608661e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "main",
              "complexity": 23,
              "line_start": 2,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.132299990393221e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.773999989993172e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "check",
              "complexity": 13,
              "line_start": 18,
              "line_end": 34
            },
            {
              "name": "getAnswer",
              "complexity": 13,
              "line_start": 37,
              "line_end": 53
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 56,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00012043699962305254
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "bs",
              "complexity": 16,
              "line_start": 5,
              "line_end": 26
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.449100030498812e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 14,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 5,
              "line_end": 5
            },
            {
              "name": "list2d",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list4d",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "ceil",
              "complexity": 1,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "INT",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "MAP",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "LIST",
              "complexity": 1,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "Yes",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "No",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "YES",
              "complexity": 0,
              "line_start": 15,
              "line_end": 15
            },
            {
              "name": "NO",
              "complexity": 0,
              "line_start": 16,
              "line_end": 16
            },
            {
              "name": "bisearch_max",
              "complexity": 3,
              "line_start": 21,
              "line_end": 31
            },
            {
              "name": "check",
              "complexity": 17,
              "line_start": 33,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00018344599993724842
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "binarySearch",
              "complexity": 3,
              "line_start": 19,
              "line_end": 29
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.81670000833401e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 17,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 17,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 4,
              "line_end": 18
            },
            {
              "name": "binarySearch",
              "complexity": 4,
              "line_start": 19,
              "line_end": 33
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.515100014643394e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 29,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 18,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.659300010549487e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 56,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 56,
          "functions": [
            {
              "name": "write",
              "complexity": 0,
              "line_start": 8,
              "line_end": 10
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014226899975255947
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 14,
              "line_start": 10,
              "line_end": 36
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.101299999907496e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 17,
              "line_start": 11,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.662299978823285e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "check",
              "complexity": 14,
              "line_start": 13,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.33480001144926e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "check",
              "complexity": 16,
              "line_start": 1,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.341599979961757e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "prof",
              "complexity": 0,
              "line_start": 9,
              "line_end": 10
            },
            {
              "name": "report",
              "complexity": 0,
              "line_start": 17,
              "line_end": 23
            },
            {
              "name": "mcheck",
              "complexity": 25,
              "line_start": 26,
              "line_end": 65
            },
            {
              "name": "go",
              "complexity": 15,
              "line_start": 68,
              "line_end": 111
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00019004800014954526
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "can_upper",
              "complexity": 12,
              "line_start": 16,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.72260000303504e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "check",
              "complexity": 20,
              "line_start": 2,
              "line_end": 31
            },
            {
              "name": "solve",
              "complexity": 3,
              "line_start": 33,
              "line_end": 45
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 47,
              "line_end": 53
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001682880001681042
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "find_pair",
              "complexity": 15,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "backtracking",
              "complexity": 12,
              "line_start": 21,
              "line_end": 30
            },
            {
              "name": "main",
              "complexity": 7,
              "line_start": 32,
              "line_end": 47
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001864009996097593
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 20,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 20,
          "functions": [
            {
              "name": "getminmax",
              "complexity": 3,
              "line_start": 7,
              "line_end": 19
            },
            {
              "name": "existsequalorbig",
              "complexity": 14,
              "line_start": 21,
              "line_end": 49
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00014582499989046482
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.085499990149401e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 22,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 22,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.065099993676995e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 31,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 31,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00012531600032161805
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.110599977342645e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.964999986143084e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 26,
          "functions": [
            {
              "name": "check",
              "complexity": 21,
              "line_start": 5,
              "line_end": 25
            },
            {
              "name": "meowmeow321",
              "complexity": 4,
              "line_start": 26,
              "line_end": 40
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0001278009999623464
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 25,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.097199997791904e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 15,
              "line_start": 1,
              "line_end": 19
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010110100038218661
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "get_ans",
              "complexity": 15,
              "line_start": 5,
              "line_end": 23
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.170399996743072e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 6,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.278700013557682e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "check",
              "complexity": 12,
              "line_start": 6,
              "line_end": 21
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 90,
              "line_end": 90
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00027308500011713477
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 8.843700015859213e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 14,
              "line_end": 18
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 20,
              "line_end": 28
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 30,
              "line_end": 37
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 39,
              "line_end": 42
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 46,
              "line_end": 52
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 58,
              "line_end": 58
            },
            {
              "name": "check",
              "complexity": 12,
              "line_start": 63,
              "line_end": 78
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00020290300017222762
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 30,
          "functions": [
            {
              "name": "main",
              "complexity": 21,
              "line_start": 6,
              "line_end": 35
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 46,
              "line_end": 50
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 52,
              "line_end": 60
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 62,
              "line_end": 69
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 71,
              "line_end": 74
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 78,
              "line_end": 84
            },
            {
              "name": "input",
              "complexity": 0,
              "line_start": 90,
              "line_end": 90
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002340409996577364
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 29,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 29,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.814600025492837e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 12,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 11,
              "line_end": 15
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 17,
              "line_end": 25
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 27,
              "line_end": 34
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 36,
              "line_end": 39
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 43,
              "line_end": 49
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 61,
              "line_end": 61
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 62,
              "line_end": 62
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 63,
              "line_end": 63
            },
            {
              "name": "comb",
              "complexity": 1,
              "line_start": 64,
              "line_end": 64
            },
            {
              "name": "perm",
              "complexity": 1,
              "line_start": 65,
              "line_end": 65
            },
            {
              "name": "mdis",
              "complexity": 0,
              "line_start": 66,
              "line_end": 66
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 73,
              "line_end": 111
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.0002859599999283091
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 5.638599986923509e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 15,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 15,
          "functions": [
            {
              "name": "vanguda",
              "complexity": 12,
              "line_start": 10,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 7.144499977584928e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 39,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 39,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 9.94869997157366e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "bisect_f",
              "complexity": 10,
              "line_start": 9,
              "line_end": 23
            },
            {
              "name": "solve",
              "complexity": 30,
              "line_start": 26,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00013489399998434237
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 5,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "data",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "mdata",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "outl",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "out",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "cal",
              "complexity": 12,
              "line_start": 18,
              "line_end": 35
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010253400023430004
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 18,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 18,
          "functions": [
            {
              "name": "solve",
              "complexity": 12,
              "line_start": 4,
              "line_end": 18
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 6.36700001450663e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 9,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 9,
          "functions": []
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 4.4224000248505035e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 163,
        "functions_count": 61,
        "raw_output": {
          "file_complexity": 163,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 27,
              "line_end": 31
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 33,
              "line_end": 41
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 52,
              "line_end": 55
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 59,
              "line_end": 65
            },
            {
              "name": "TreeNode::__init__",
              "complexity": 0,
              "line_start": 74,
              "line_end": 82
            },
            {
              "name": "AvlTree::__init__",
              "complexity": 0,
              "line_start": 87,
              "line_end": 88
            },
            {
              "name": "AvlTree::add",
              "complexity": 3,
              "line_start": 90,
              "line_end": 96
            },
            {
              "name": "AvlTree::_add",
              "complexity": 9,
              "line_start": 98,
              "line_end": 117
            },
            {
              "name": "AvlTree::get_height",
              "complexity": 1,
              "line_start": 119,
              "line_end": 121
            },
            {
              "name": "AvlTree::get_num_total",
              "complexity": 1,
              "line_start": 123,
              "line_end": 125
            },
            {
              "name": "AvlTree::_rebalance",
              "complexity": 10,
              "line_start": 127,
              "line_end": 147
            },
            {
              "name": "AvlTree::_remove_one",
              "complexity": 4,
              "line_start": 149,
              "line_end": 167
            },
            {
              "name": "AvlTree::_remove_leaf",
              "complexity": 3,
              "line_start": 169,
              "line_end": 180
            },
            {
              "name": "AvlTree::remove",
              "complexity": 7,
              "line_start": 182,
              "line_end": 199
            },
            {
              "name": "AvlTree::get",
              "complexity": 2,
              "line_start": 201,
              "line_end": 203
            },
            {
              "name": "AvlTree::_get_node",
              "complexity": 5,
              "line_start": 205,
              "line_end": 216
            },
            {
              "name": "AvlTree::get_at",
              "complexity": 3,
              "line_start": 218,
              "line_end": 229
            },
            {
              "name": "AvlTree::_is_left",
              "complexity": 1,
              "line_start": 231,
              "line_end": 233
            },
            {
              "name": "AvlTree::_is_leaf",
              "complexity": 1,
              "line_start": 235,
              "line_end": 237
            },
            {
              "name": "AvlTree::_rotate_right",
              "complexity": 3,
              "line_start": 239,
              "line_end": 257
            },
            {
              "name": "AvlTree::_rotate_left",
              "complexity": 3,
              "line_start": 259,
              "line_end": 277
            },
            {
              "name": "AvlTree::_get_next",
              "complexity": 3,
              "line_start": 279,
              "line_end": 286
            },
            {
              "name": "SegmentTree1::__init__",
              "complexity": 1,
              "line_start": 291,
              "line_end": 301
            },
            {
              "name": "SegmentTree1::__delitem__",
              "complexity": 0,
              "line_start": 303,
              "line_end": 304
            },
            {
              "name": "SegmentTree1::__getitem__",
              "complexity": 0,
              "line_start": 306,
              "line_end": 307
            },
            {
              "name": "SegmentTree1::__setitem__",
              "complexity": 1,
              "line_start": 309,
              "line_end": 315
            },
            {
              "name": "SegmentTree1::__len__",
              "complexity": 0,
              "line_start": 317,
              "line_end": 318
            },
            {
              "name": "SegmentTree1::query",
              "complexity": 6,
              "line_start": 320,
              "line_end": 337
            },
            {
              "name": "SegmentTree1::__repr__",
              "complexity": 0,
              "line_start": 339,
              "line_end": 340
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 1,
              "line_start": 345,
              "line_end": 355
            },
            {
              "name": "SegmentTree::__delitem__",
              "complexity": 0,
              "line_start": 357,
              "line_end": 358
            },
            {
              "name": "SegmentTree::__getitem__",
              "complexity": 0,
              "line_start": 360,
              "line_end": 361
            },
            {
              "name": "SegmentTree::__setitem__",
              "complexity": 1,
              "line_start": 363,
              "line_end": 369
            },
            {
              "name": "SegmentTree::__len__",
              "complexity": 0,
              "line_start": 371,
              "line_end": 372
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 374,
              "line_end": 391
            },
            {
              "name": "SegmentTree::__repr__",
              "complexity": 0,
              "line_start": 393,
              "line_end": 394
            },
            {
              "name": "Factorial::__init__",
              "complexity": 0,
              "line_start": 399,
              "line_end": 403
            },
            {
              "name": "Factorial::calc",
              "complexity": 4,
              "line_start": 405,
              "line_end": 419
            },
            {
              "name": "Factorial::inv",
              "complexity": 4,
              "line_start": 421,
              "line_end": 435
            },
            {
              "name": "Factorial::invFactorial",
              "complexity": 4,
              "line_start": 437,
              "line_end": 452
            },
            {
              "name": "Combination::__init__",
              "complexity": 0,
              "line_start": 456,
              "line_end": 458
            },
            {
              "name": "Combination::ncr",
              "complexity": 2,
              "line_start": 460,
              "line_end": 465
            },
            {
              "name": "powm",
              "complexity": 3,
              "line_start": 469,
              "line_end": 476
            },
            {
              "name": "sort_list",
              "complexity": 0,
              "line_start": 480,
              "line_end": 485
            },
            {
              "name": "product",
              "complexity": 1,
              "line_start": 489,
              "line_end": 493
            },
            {
              "name": "binarySearchCount",
              "complexity": 3,
              "line_start": 497,
              "line_end": 516
            },
            {
              "name": "countdig",
              "complexity": 1,
              "line_start": 520,
              "line_end": 525
            },
            {
              "name": "binary",
              "complexity": 1,
              "line_start": 526,
              "line_end": 528
            },
            {
              "name": "countGreater",
              "complexity": 3,
              "line_start": 530,
              "line_end": 552
            },
            {
              "name": "TrieNode::__init__",
              "complexity": 0,
              "line_start": 557,
              "line_end": 559
            },
            {
              "name": "Trie::__init__",
              "complexity": 0,
              "line_start": 561,
              "line_end": 562
            },
            {
              "name": "Trie::getNode",
              "complexity": 0,
              "line_start": 563,
              "line_end": 564
            },
            {
              "name": "Trie::_charToIndex",
              "complexity": 0,
              "line_start": 565,
              "line_end": 566
            },
            {
              "name": "Trie::insert",
              "complexity": 4,
              "line_start": 567,
              "line_end": 575
            },
            {
              "name": "Trie::search",
              "complexity": 5,
              "line_start": 576,
              "line_end": 584
            },
            {
              "name": "Node::__init__",
              "complexity": 0,
              "line_start": 587,
              "line_end": 591
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 0,
              "line_start": 593,
              "line_end": 594
            },
            {
              "name": "BinaryTrie::insert",
              "complexity": 14,
              "line_start": 595,
              "line_end": 609
            },
            {
              "name": "BinaryTrie::query",
              "complexity": 12,
              "line_start": 610,
              "line_end": 625
            },
            {
              "name": "find",
              "complexity": 14,
              "line_start": 632,
              "line_end": 650
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.005090428999665164
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 16,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 16,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 15,
              "line_start": 10,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00013676800017492496
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00011614899995038286
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 6,
              "line_end": 7
            },
            {
              "name": "main",
              "complexity": 22,
              "line_start": 10,
              "line_end": 43
            }
          ]
        }
      },
      "problem": "1288_D",
      "tags": "binary search,bitmasks,dp",
      "tool": "complexipy",
      "execution_time": 0.00010930600001302082
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 55,
        "functions_count": 10,
        "raw_output": {
          "file_complexity": 55,
          "functions": [
            {
              "name": "MinCostFlow::__init__",
              "complexity": 0,
              "line_start": 5,
              "line_end": 7
            },
            {
              "name": "MinCostFlow::add_edge",
              "complexity": 1,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "MinCostFlow::flow",
              "complexity": 22,
              "line_start": 15,
              "line_end": 61
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 64,
              "line_end": 67
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 69,
              "line_end": 77
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 79,
              "line_end": 91
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 93,
              "line_end": 94
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 96,
              "line_end": 97
            },
            {
              "name": "dfs",
              "complexity": 4,
              "line_start": 149,
              "line_end": 156
            },
            {
              "name": "add",
              "complexity": 4,
              "line_start": 158,
              "line_end": 163
            }
          ]
        }
      },
      "problem": "1430_G",
      "tags": "bitmasks,dfs and similar,dp,flows,graphs,math",
      "tool": "complexipy",
      "execution_time": 0.0005048419998274767
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 3,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 6.784800007153535e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.872300021612318e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.7540999983320944e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 6,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 6,
          "functions": [
            {
              "name": "solve",
              "complexity": 6,
              "line_start": 4,
              "line_end": 15
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 5.423299990070518e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "bitcount",
              "complexity": 0,
              "line_start": 14,
              "line_end": 15
            },
            {
              "name": "main",
              "complexity": 1,
              "line_start": 18,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 6.50530000712024e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 10,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 10,
          "functions": [
            {
              "name": "solve",
              "complexity": 10,
              "line_start": 4,
              "line_end": 20
            },
            {
              "name": "main",
              "complexity": 0,
              "line_start": 22,
              "line_end": 24
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 6.254799973248737e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "linear",
      "metrics": {
        "cognitive_complexity": 7,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 7,
          "functions": [
            {
              "name": "convert_files_to_json",
              "complexity": 3,
              "line_start": 5,
              "line_end": 12
            },
            {
              "name": "extract_list",
              "complexity": 1,
              "line_start": 15,
              "line_end": 20
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 0.0002233909999631578
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 5.626599977404112e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.710000009959913e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.608799988796818e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.416400022615562e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.155900003548595e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.127899981336668e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.323300006741192e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.1459999718208564e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.011700027855113e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 2.977600024678395e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.033699977095239e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.168000012010452e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 3,
              "line_end": 7
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.0947999675845494e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.3773000268411124e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "constant",
      "metrics": {
        "cognitive_complexity": 3,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 3,
          "functions": [
            {
              "name": "f",
              "complexity": 3,
              "line_start": 1,
              "line_end": 4
            }
          ]
        }
      },
      "problem": "1463_F",
      "tags": "bitmasks,dp,math",
      "tool": "complexipy",
      "execution_time": 3.196099987690104e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003083619999415532
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 3,
              "line_end": 9
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003221580000172253
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00030205999973986764
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.0003001260001838091
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 88,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 88,
          "functions": [
            {
              "name": "t_prime",
              "complexity": 5,
              "line_start": 2,
              "line_end": 6
            }
          ]
        }
      },
      "problem": "1468_L",
      "tags": "binary search,greedy,math,number theory",
      "tool": "complexipy",
      "execution_time": 0.00029676000031031435
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001318879999416822
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "match",
              "complexity": 6,
              "line_start": 11,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 9.546000001137145e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 127,
        "functions_count": 41,
        "raw_output": {
          "file_complexity": 127,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 22,
              "line_end": 26
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 28,
              "line_end": 36
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 38,
              "line_end": 45
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 54,
              "line_end": 60
            },
            {
              "name": "RL",
              "complexity": 0,
              "line_start": 68,
              "line_end": 68
            },
            {
              "name": "RLL",
              "complexity": 0,
              "line_start": 69,
              "line_end": 69
            },
            {
              "name": "N",
              "complexity": 0,
              "line_start": 70,
              "line_end": 70
            },
            {
              "name": "bootstrap",
              "complexity": 11,
              "line_start": 77,
              "line_end": 94
            },
            {
              "name": "fact",
              "complexity": 5,
              "line_start": 100,
              "line_end": 107
            },
            {
              "name": "ifact",
              "complexity": 1,
              "line_start": 109,
              "line_end": 115
            },
            {
              "name": "per",
              "complexity": 3,
              "line_start": 117,
              "line_end": 121
            },
            {
              "name": "com",
              "complexity": 3,
              "line_start": 123,
              "line_end": 127
            },
            {
              "name": "catalan",
              "complexity": 0,
              "line_start": 129,
              "line_end": 130
            },
            {
              "name": "isprime",
              "complexity": 3,
              "line_start": 132,
              "line_end": 136
            },
            {
              "name": "floorsum",
              "complexity": 3,
              "line_start": 138,
              "line_end": 142
            },
            {
              "name": "inverse",
              "complexity": 1,
              "line_start": 144,
              "line_end": 147
            },
            {
              "name": "lowbit",
              "complexity": 0,
              "line_start": 149,
              "line_end": 150
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 153,
              "line_end": 155
            },
            {
              "name": "BIT::update",
              "complexity": 1,
              "line_start": 157,
              "line_end": 160
            },
            {
              "name": "BIT::query",
              "complexity": 1,
              "line_start": 162,
              "line_end": 167
            },
            {
              "name": "DSU::__init__",
              "complexity": 0,
              "line_start": 220,
              "line_end": 221
            },
            {
              "name": "DSU::same",
              "complexity": 0,
              "line_start": 223,
              "line_end": 224
            },
            {
              "name": "DSU::find",
              "complexity": 1,
              "line_start": 226,
              "line_end": 230
            },
            {
              "name": "DSU::union",
              "complexity": 2,
              "line_start": 232,
              "line_end": 240
            },
            {
              "name": "DSU::size",
              "complexity": 1,
              "line_start": 242,
              "line_end": 242
            },
            {
              "name": "UFS::__init__",
              "complexity": 0,
              "line_start": 245,
              "line_end": 247
            },
            {
              "name": "UFS::find",
              "complexity": 1,
              "line_start": 249,
              "line_end": 252
            },
            {
              "name": "UFS::union",
              "complexity": 4,
              "line_start": 254,
              "line_end": 263
            },
            {
              "name": "Prime",
              "complexity": 12,
              "line_start": 265,
              "line_end": 278
            },
            {
              "name": "dij",
              "complexity": 9,
              "line_start": 280,
              "line_end": 294
            },
            {
              "name": "GP",
              "complexity": 0,
              "line_start": 296,
              "line_end": 296
            },
            {
              "name": "lcm",
              "complexity": 0,
              "line_start": 297,
              "line_end": 297
            },
            {
              "name": "lis",
              "complexity": 3,
              "line_start": 298,
              "line_end": 306
            },
            {
              "name": "DLN::__init__",
              "complexity": 0,
              "line_start": 309,
              "line_end": 312
            },
            {
              "name": "nb",
              "complexity": 4,
              "line_start": 314,
              "line_end": 317
            },
            {
              "name": "topo",
              "complexity": 9,
              "line_start": 319,
              "line_end": 333
            },
            {
              "name": "gdfs",
              "complexity": 5,
              "line_start": 335,
              "line_end": 342
            },
            {
              "name": "match",
              "complexity": 4,
              "line_start": 345,
              "line_end": 350
            },
            {
              "name": "pos",
              "complexity": 0,
              "line_start": 352,
              "line_end": 357
            },
            {
              "name": "dfs",
              "complexity": 1,
              "line_start": 359,
              "line_end": 371
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0015683980000176234
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 46,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 46,
          "functions": [
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 8,
              "line_end": 27
            },
            {
              "name": "solve",
              "complexity": 33,
              "line_start": 30,
              "line_end": 75
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0002128710002580192
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 50,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 50,
          "functions": [
            {
              "name": "match",
              "complexity": 4,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "cycleCheck",
              "complexity": 3,
              "line_start": 15,
              "line_end": 28
            },
            {
              "name": "toposort",
              "complexity": 3,
              "line_start": 30,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00018496900020181783
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 36,
          "functions": [
            {
              "name": "main",
              "complexity": 36,
              "line_start": 1,
              "line_end": 71
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00014503399961540708
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 5,
              "line_end": 22
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001222799996867252
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 4,
              "line_end": 21
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001135339998654672
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 2,
              "line_end": 13
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00010798400035127997
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 2,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011638899968602345
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 27,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 27,
          "functions": [
            {
              "name": "topological_sorted",
              "complexity": 9,
              "line_start": 2,
              "line_end": 12
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00017296599980909377
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "gen",
              "complexity": 7,
              "line_start": 6,
              "line_end": 20
            },
            {
              "name": "Graph::__init__",
              "complexity": 0,
              "line_start": 24,
              "line_end": 26
            },
            {
              "name": "Graph::addEdge",
              "complexity": 0,
              "line_start": 28,
              "line_end": 29
            },
            {
              "name": "Graph::isCyclicUtil",
              "complexity": 6,
              "line_start": 31,
              "line_end": 41
            },
            {
              "name": "Graph::isCyclic",
              "complexity": 6,
              "line_start": 43,
              "line_end": 50
            },
            {
              "name": "Graph::topologicalSortUtil",
              "complexity": 3,
              "line_start": 51,
              "line_end": 56
            },
            {
              "name": "Graph::topologicalSort",
              "complexity": 4,
              "line_start": 58,
              "line_end": 67
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00019942599965361296
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 32,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 8.584199986216845e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 36,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 36,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00010293400009686593
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 19,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 19,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 7.97200000306475e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 38,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 38,
          "functions": [
            {
              "name": "main",
              "complexity": 38,
              "line_start": 20,
              "line_end": 84
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00015224700018734438
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 32,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 32,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 20,
              "line_start": 21,
              "line_end": 62
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00013718899981540744
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00013436300014291191
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00012031699998260592
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "topological_sort",
              "complexity": 12,
              "line_start": 5,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011657999993985868
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 43,
        "functions_count": 8,
        "raw_output": {
          "file_complexity": 43,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "MI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "BI",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "push",
              "complexity": 3,
              "line_start": 18,
              "line_end": 25
            },
            {
              "name": "match",
              "complexity": 7,
              "line_start": 27,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00018496900020181783
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 30,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 30,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001158489999397716
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "patterns",
              "complexity": 1,
              "line_start": 14,
              "line_end": 19
            },
            {
              "name": "main",
              "complexity": 21,
              "line_start": 21,
              "line_end": 57
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00012162999973952537
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 37,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 37,
          "functions": [
            {
              "name": "binary",
              "complexity": 6,
              "line_start": 3,
              "line_end": 13
            },
            {
              "name": "dfs",
              "complexity": 7,
              "line_start": 18,
              "line_end": 30
            },
            {
              "name": "topo",
              "complexity": 5,
              "line_start": 32,
              "line_end": 39
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00012213999980303925
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 24,
          "functions": []
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 9.411700011696666e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "solve",
              "complexity": 24,
              "line_start": 28,
              "line_end": 83
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 94,
              "line_end": 98
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 100,
              "line_end": 108
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 110,
              "line_end": 117
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 119,
              "line_end": 122
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 126,
              "line_end": 132
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 135,
              "line_end": 146
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0003604100002121413
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 62,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 62,
          "functions": [
            {
              "name": "solve",
              "complexity": 45,
              "line_start": 28,
              "line_end": 114
            },
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 126,
              "line_end": 130
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 132,
              "line_end": 140
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 142,
              "line_end": 149
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 151,
              "line_end": 154
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 158,
              "line_end": 164
            },
            {
              "name": "print",
              "complexity": 5,
              "line_start": 167,
              "line_end": 178
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0004399489998831996
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 41,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 41,
          "functions": [
            {
              "name": "input",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "list3d",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "Y",
              "complexity": 0,
              "line_start": 12,
              "line_end": 12
            },
            {
              "name": "y",
              "complexity": 0,
              "line_start": 13,
              "line_end": 13
            },
            {
              "name": "Yy",
              "complexity": 0,
              "line_start": 14,
              "line_end": 14
            },
            {
              "name": "solve",
              "complexity": 40,
              "line_start": 18,
              "line_end": 81
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0002038550001088879
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 35,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 35,
          "functions": [
            {
              "name": "main",
              "complexity": 34,
              "line_start": 5,
              "line_end": 54
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00014238899984775344
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 40,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 40,
          "functions": [
            {
              "name": "get_hash",
              "complexity": 3,
              "line_start": 14,
              "line_end": 20
            },
            {
              "name": "matches",
              "complexity": 8,
              "line_start": 22,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00014784899985897937
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 45,
        "functions_count": 3,
        "raw_output": {
          "file_complexity": 45,
          "functions": [
            {
              "name": "Graph::__init__",
              "complexity": 1,
              "line_start": 5,
              "line_end": 13
            },
            {
              "name": "Graph::add_edge",
              "complexity": 9,
              "line_start": 15,
              "line_end": 24
            },
            {
              "name": "Graph::topo_sort",
              "complexity": 13,
              "line_start": 26,
              "line_end": 38
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.0001644909998503863
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 34,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 34,
          "functions": [
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 6,
              "line_end": 28
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00011191100020369049
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 42,
        "functions_count": 6,
        "raw_output": {
          "file_complexity": 42,
          "functions": [
            {
              "name": "FastIO::__init__",
              "complexity": 2,
              "line_start": 13,
              "line_end": 17
            },
            {
              "name": "FastIO::read",
              "complexity": 4,
              "line_start": 19,
              "line_end": 27
            },
            {
              "name": "FastIO::readline",
              "complexity": 1,
              "line_start": 29,
              "line_end": 36
            },
            {
              "name": "FastIO::flush",
              "complexity": 1,
              "line_start": 38,
              "line_end": 41
            },
            {
              "name": "IOWrapper::__init__",
              "complexity": 0,
              "line_start": 45,
              "line_end": 51
            },
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 61,
              "line_end": 83
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00025385899971297476
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "cubic",
      "metrics": {
        "cognitive_complexity": 33,
        "functions_count": 2,
        "raw_output": {
          "file_complexity": 33,
          "functions": [
            {
              "name": "cal",
              "complexity": 1,
              "line_start": 34,
              "line_end": 40
            },
            {
              "name": "check",
              "complexity": 1,
              "line_start": 47,
              "line_end": 50
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00014853999982733512
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 4,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "parse",
              "complexity": 0,
              "line_start": 4,
              "line_end": 7
            },
            {
              "name": "match",
              "complexity": 4,
              "line_start": 9,
              "line_end": 13
            },
            {
              "name": "main",
              "complexity": 13,
              "line_start": 15,
              "line_end": 48
            },
            {
              "name": "toposort",
              "complexity": 7,
              "line_start": 51,
              "line_end": 69
            }
          ]
        }
      },
      "problem": "1476_E",
      "tags": "bitmasks,data structures,dfs and similar,graphs,hashing,sortings,strings",
      "tool": "complexipy",
      "execution_time": 0.00015766699971209164
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "exponential",
      "metrics": {
        "cognitive_complexity": 306,
        "functions_count": 45,
        "raw_output": {
          "file_complexity": 306,
          "functions": [
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 2,
              "line_end": 11
            },
            {
              "name": "popcount",
              "complexity": 0,
              "line_start": 13,
              "line_end": 19
            },
            {
              "name": "eratosthenes",
              "complexity": 7,
              "line_start": 21,
              "line_end": 29
            },
            {
              "name": "factorization",
              "complexity": 7,
              "line_start": 31,
              "line_end": 40
            },
            {
              "name": "euler_phi",
              "complexity": 9,
              "line_start": 42,
              "line_end": 53
            },
            {
              "name": "ind",
              "complexity": 1,
              "line_start": 55,
              "line_end": 60
            },
            {
              "name": "isPrimeMR",
              "complexity": 9,
              "line_start": 62,
              "line_end": 74
            },
            {
              "name": "findFactorRho",
              "complexity": 24,
              "line_start": 75,
              "line_end": 102
            },
            {
              "name": "primeFactor",
              "complexity": 22,
              "line_start": 103,
              "line_end": 129
            },
            {
              "name": "divisors",
              "complexity": 6,
              "line_start": 131,
              "line_end": 141
            },
            {
              "name": "xorfactorial",
              "complexity": 1,
              "line_start": 143,
              "line_end": 154
            },
            {
              "name": "xorconv",
              "complexity": 1,
              "line_start": 156,
              "line_end": 170
            },
            {
              "name": "merge_sort",
              "complexity": 4,
              "line_start": 172,
              "line_end": 186
            },
            {
              "name": "UnionFindVerSize::__init__",
              "complexity": 0,
              "line_start": 189,
              "line_end": 192
            },
            {
              "name": "UnionFindVerSize::find_root",
              "complexity": 3,
              "line_start": 194,
              "line_end": 202
            },
            {
              "name": "UnionFindVerSize::unite",
              "complexity": 2,
              "line_start": 204,
              "line_end": 216
            },
            {
              "name": "UnionFindVerSize::get_size",
              "complexity": 0,
              "line_start": 218,
              "line_end": 219
            },
            {
              "name": "UnionFindVerSize::is_same_group",
              "complexity": 0,
              "line_start": 221,
              "line_end": 222
            },
            {
              "name": "WeightedUnionFind::__init__",
              "complexity": 0,
              "line_start": 225,
              "line_end": 230
            },
            {
              "name": "WeightedUnionFind::dfs",
              "complexity": 6,
              "line_start": 232,
              "line_end": 241
            },
            {
              "name": "WeightedUnionFind::unite",
              "complexity": 4,
              "line_start": 243,
              "line_end": 261
            },
            {
              "name": "Dijkstra::__init__",
              "complexity": 0,
              "line_start": 269,
              "line_end": 272
            },
            {
              "name": "Dijkstra::E",
              "complexity": 0,
              "line_start": 274,
              "line_end": 276
            },
            {
              "name": "Dijkstra::V",
              "complexity": 0,
              "line_start": 278,
              "line_end": 280
            },
            {
              "name": "Dijkstra::add_edge",
              "complexity": 0,
              "line_start": 282,
              "line_end": 284
            },
            {
              "name": "Dijkstra::shortest_path",
              "complexity": 8,
              "line_start": 286,
              "line_end": 302
            },
            {
              "name": "Z_algorithm",
              "complexity": 9,
              "line_start": 306,
              "line_end": 326
            },
            {
              "name": "BIT::__init__",
              "complexity": 0,
              "line_start": 329,
              "line_end": 332
            },
            {
              "name": "BIT::query",
              "complexity": 3,
              "line_start": 334,
              "line_end": 342
            },
            {
              "name": "BIT::update",
              "complexity": 3,
              "line_start": 345,
              "line_end": 352
            },
            {
              "name": "dancinglink::__init__",
              "complexity": 0,
              "line_start": 355,
              "line_end": 360
            },
            {
              "name": "dancinglink::pop",
              "complexity": 6,
              "line_start": 362,
              "line_end": 374
            },
            {
              "name": "dancinglink::left",
              "complexity": 5,
              "line_start": 376,
              "line_end": 385
            },
            {
              "name": "dancinglink::right",
              "complexity": 4,
              "line_start": 387,
              "line_end": 396
            },
            {
              "name": "SparseTable::__init__",
              "complexity": 4,
              "line_start": 399,
              "line_end": 412
            },
            {
              "name": "SparseTable::query",
              "complexity": 0,
              "line_start": 414,
              "line_end": 417
            },
            {
              "name": "BinaryTrie::__init__",
              "complexity": 1,
              "line_start": 426,
              "line_end": 427
            },
            {
              "name": "BinaryTrie::append",
              "complexity": 9,
              "line_start": 429,
              "line_end": 445
            },
            {
              "name": "BinaryTrie::search",
              "complexity": 21,
              "line_start": 447,
              "line_end": 471
            },
            {
              "name": "solveequation",
              "complexity": 15,
              "line_start": 473,
              "line_end": 497
            },
            {
              "name": "SegmentTree::__init__",
              "complexity": 2,
              "line_start": 500,
              "line_end": 510
            },
            {
              "name": "SegmentTree::update",
              "complexity": 1,
              "line_start": 512,
              "line_end": 517
            },
            {
              "name": "SegmentTree::query",
              "complexity": 6,
              "line_start": 519,
              "line_end": 535
            },
            {
              "name": "SegmentTree::bisect_l",
              "complexity": 28,
              "line_start": 537,
              "line_end": 570
            },
            {
              "name": "cond",
              "complexity": 66,
              "line_start": 590,
              "line_end": 650
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.003906265999830794
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "calc",
              "complexity": 21,
              "line_start": 7,
              "line_end": 32
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00014175800015436835
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.563000003254274e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 25,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 25,
          "functions": [
            {
              "name": "judge",
              "complexity": 16,
              "line_start": 22,
              "line_end": 64
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00012980400015294435
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010424699985378538
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001023529998747108
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00010311400001228321
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.0001021329999275622
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.73229998635361e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 23,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 23,
          "functions": [
            {
              "name": "judge",
              "complexity": 20,
              "line_start": 12,
              "line_end": 65
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.308500011684373e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.641199994803173e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 7.87879998824792e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 24,
        "functions_count": 7,
        "raw_output": {
          "file_complexity": 24,
          "functions": [
            {
              "name": "II",
              "complexity": 0,
              "line_start": 6,
              "line_end": 6
            },
            {
              "name": "LI",
              "complexity": 0,
              "line_start": 7,
              "line_end": 7
            },
            {
              "name": "LLI",
              "complexity": 0,
              "line_start": 8,
              "line_end": 8
            },
            {
              "name": "LI1",
              "complexity": 0,
              "line_start": 9,
              "line_end": 9
            },
            {
              "name": "LLI1",
              "complexity": 0,
              "line_start": 10,
              "line_end": 10
            },
            {
              "name": "SI",
              "complexity": 0,
              "line_start": 11,
              "line_end": 11
            },
            {
              "name": "ok",
              "complexity": 21,
              "line_start": 19,
              "line_end": 41
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 0.00014605499973185943
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 26,
        "functions_count": 0,
        "raw_output": {
          "file_complexity": 26,
          "functions": []
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 8.03319999249652e-05
    },
    {
      "true_complexity": "np",
      "predicted_complexity": "quadratic",
      "metrics": {
        "cognitive_complexity": 21,
        "functions_count": 1,
        "raw_output": {
          "file_complexity": 21,
          "functions": [
            {
              "name": "check",
              "complexity": 18,
              "line_start": 5,
              "line_end": 25
            }
          ]
        }
      },
      "problem": "1550_E",
      "tags": "binary search,bitmasks,brute force,dp,strings,two pointers",
      "tool": "complexipy",
      "execution_time": 9.463800006415113e-05
    }
  ],
  "metrics": {
    "accuracy": 0.23408163265306123,
    "precision_macro": 0.1368030024687109,
    "recall_macro": 0.19080158401160593,
    "f1_macro": 0.15142965047017434,
    "precision_weighted": 0.15944334985623398,
    "recall_weighted": 0.23408163265306123,
    "f1_weighted": 0.1811851107002463,
    "confusion_matrix": [
      [
        519,
        0,
        157,
        0,
        44,
        15,
        56
      ],
      [
        349,
        0,
        206,
        0,
        55,
        4,
        55
      ],
      [
        315,
        0,
        300,
        0,
        125,
        41,
        72
      ],
      [
        253,
        0,
        299,
        0,
        120,
        37,
        87
      ],
      [
        98,
        0,
        243,
        0,
        177,
        71,
        68
      ],
      [
        10,
        0,
        152,
        0,
        226,
        151,
        67
      ],
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ]
    ],
    "per_class_metrics": {
      "constant": {
        "precision": 0.3189920098340504,
        "recall": 0.6561314791403287,
        "f1": 0.4292803970223325,
        "support": 791
      },
      "logn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1": 0.0,
        "support": 669
      },
      "linear": {
        "precision": 0.1984126984126984,
        "recall": 0.3516998827667057,
        "f1": 0.2536997885835095,
        "support": 853
      },
      "nlogn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1": 0.0,
        "support": 796
      },
      "quadratic": {
        "precision": 0.19666666666666666,
        "recall": 0.2694063926940639,
        "f1": 0.22736030828516376,
        "support": 657
      },
      "cubic": {
        "precision": 0.380352644836272,
        "recall": 0.24917491749174916,
        "f1": 0.30109670987038883,
        "support": 606
      },
      "exponential": {
        "precision": 0.0,
        "recall": 0.0,
        "f1": 0.0,
        "support": 0
      }
    },
    "classification_report": {
      "constant": {
        "precision": 0.3189920098340504,
        "recall": 0.6561314791403287,
        "f1-score": 0.4292803970223325,
        "support": 791.0
      },
      "logn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1-score": 0.0,
        "support": 669.0
      },
      "linear": {
        "precision": 0.1984126984126984,
        "recall": 0.3516998827667057,
        "f1-score": 0.2536997885835095,
        "support": 853.0
      },
      "nlogn": {
        "precision": 0.0,
        "recall": 0.0,
        "f1-score": 0.0,
        "support": 796.0
      },
      "quadratic": {
        "precision": 0.19666666666666666,
        "recall": 0.2694063926940639,
        "f1-score": 0.22736030828516376,
        "support": 657.0
      },
      "cubic": {
        "precision": 0.380352644836272,
        "recall": 0.24917491749174916,
        "f1-score": 0.30109670987038883,
        "support": 606.0
      },
      "exponential": {
        "precision": 0.0,
        "recall": 0.0,
        "f1-score": 0.0,
        "support": 0.0
      },
      "micro avg": {
        "precision": 0.23408163265306123,
        "recall": 0.2623513266239707,
        "f1-score": 0.24741156169111303,
        "support": 4372.0
      },
      "macro avg": {
        "precision": 0.15634628853566965,
        "recall": 0.2180589531561211,
        "f1-score": 0.1730624576801992,
        "support": 4372.0
      },
      "weighted avg": {
        "precision": 0.17869908835671236,
        "recall": 0.2623513266239707,
        "f1-score": 0.20306656963202352,
        "support": 4372.0
      }
    }
  },
  "error_distribution": {
    "constant_as_linear": 157,
    "constant_as_quadratic": 44,
    "constant_as_exponential": 56,
    "constant_as_cubic": 15,
    "logn_as_linear": 206,
    "logn_as_constant": 349,
    "logn_as_exponential": 55,
    "logn_as_cubic": 4,
    "logn_as_quadratic": 55,
    "linear_as_quadratic": 125,
    "linear_as_exponential": 72,
    "linear_as_constant": 315,
    "linear_as_cubic": 41,
    "nlogn_as_linear": 299,
    "nlogn_as_constant": 253,
    "nlogn_as_cubic": 37,
    "nlogn_as_exponential": 87,
    "nlogn_as_quadratic": 120,
    "quadratic_as_linear": 243,
    "quadratic_as_cubic": 71,
    "quadratic_as_constant": 98,
    "quadratic_as_exponential": 68,
    "cubic_as_exponential": 67,
    "cubic_as_quadratic": 226,
    "cubic_as_linear": 152,
    "cubic_as_constant": 10,
    "np_as_cubic": 78,
    "np_as_exponential": 59,
    "np_as_quadratic": 153,
    "np_as_linear": 155,
    "np_as_constant": 83
  },
  "complexity_distance": {
    "mean_distance": 1.5096065873741995,
    "median_distance": 1.0,
    "max_distance": 6,
    "std_distance": 1.3485274171196162
  },
  "class_distribution": {
    "constant": {
      "true_count": 791,
      "predicted_count": 1627,
      "correct_predictions": 519,
      "true_percentage": 16.142857142857142,
      "predicted_percentage": 33.20408163265306,
      "accuracy_for_class": 65.61314791403287
    },
    "logn": {
      "true_count": 669,
      "predicted_count": 0,
      "correct_predictions": 0,
      "true_percentage": 13.653061224489797,
      "predicted_percentage": 0.0,
      "accuracy_for_class": 0.0
    },
    "linear": {
      "true_count": 853,
      "predicted_count": 1512,
      "correct_predictions": 300,
      "true_percentage": 17.408163265306122,
      "predicted_percentage": 30.857142857142854,
      "accuracy_for_class": 35.16998827667057
    },
    "nlogn": {
      "true_count": 796,
      "predicted_count": 0,
      "correct_predictions": 0,
      "true_percentage": 16.244897959183675,
      "predicted_percentage": 0.0,
      "accuracy_for_class": 0.0
    },
    "quadratic": {
      "true_count": 657,
      "predicted_count": 900,
      "correct_predictions": 177,
      "true_percentage": 13.408163265306122,
      "predicted_percentage": 18.367346938775512,
      "accuracy_for_class": 26.94063926940639
    },
    "cubic": {
      "true_count": 606,
      "predicted_count": 397,
      "correct_predictions": 151,
      "true_percentage": 12.36734693877551,
      "predicted_percentage": 8.10204081632653,
      "accuracy_for_class": 24.917491749174918
    },
    "exponential": {
      "true_count": 0,
      "predicted_count": 464,
      "correct_predictions": 0,
      "true_percentage": 0.0,
      "predicted_percentage": 9.46938775510204,
      "accuracy_for_class": 0
    }
  },
  "time_statistics": {
    "total_execution_time": 0.553342487000009,
    "mean_time_per_sample": 0.00011067127775305028,
    "median_time_per_sample": 4.8847000016394304e-05,
    "min_time_per_sample": 1.8330001694266684e-06,
    "max_time_per_sample": 0.058561947000271175,
    "std_time_per_sample": 0.0008776572391581017,
    "percentile_95_time": 0.0002811345497320872,
    "percentile_99_time": 0.0007299287201567694,
    "samples_per_second": 8855.275195956388,
    "total_samples": 4900
  },
  "total_samples": 4900,
  "valid_predictions": 4900
}